

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue May 31 18:08:12 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    25  0000                     
    26                           ; Version 2.40
    27                           ; Generated 17/11/2021 GMT
    28                           ; 
    29                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F4550 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     _RCREG	set	4014
    62  0000                     _TXREG	set	4013
    63  0000                     _SPBRG	set	4015
    64  0000                     _PORTBbits	set	3969
    65  0000                     _RCIE	set	31981
    66  0000                     _PORTB	set	3969
    67  0000                     _TRISB	set	3987
    68  0000                     _TRISCbits	set	3988
    69  0000                     _RCSTAbits	set	4011
    70  0000                     _TXSTAbits	set	4012
    71  0000                     _TXIE	set	31980
    72  0000                     _RCIF	set	31989
    73                           
    74                           	psect	smallconst
    75  000800                     __psmallconst:
    76                           	callstack 0
    77  000800  00                 	db	0
    78  000801                     STR_25:
    79  000801  50                 	db	80	;'P'
    80  000802  72                 	db	114	;'r'
    81  000803  6F                 	db	111	;'o'
    82  000804  67                 	db	103	;'g'
    83  000805  72                 	db	114	;'r'
    84  000806  61                 	db	97	;'a'
    85  000807  6D                 	db	109	;'m'
    86  000808  20                 	db	32
    87  000809  4F                 	db	79	;'O'
    88  00080A  75                 	db	117	;'u'
    89  00080B  74                 	db	116	;'t'
    90  00080C  0D                 	db	13
    91  00080D  0A                 	db	10
    92  00080E  00                 	db	0
    93  00080F                     STR_15:
    94  00080F  4C                 	db	76	;'L'
    95  000810  45                 	db	69	;'E'
    96  000811  44                 	db	68	;'D'
    97  000812  30                 	db	48	;'0'
    98  000813  20                 	db	32
    99  000814  4F                 	db	79	;'O'
   100  000815  46                 	db	70	;'F'
   101  000816  46                 	db	70	;'F'
   102  000817  0D                 	db	13
   103  000818  0A                 	db	10
   104  000819  00                 	db	0
   105  00081A                     STR_16:
   106  00081A  4C                 	db	76	;'L'
   107  00081B  45                 	db	69	;'E'
   108  00081C  44                 	db	68	;'D'
   109  00081D  31                 	db	49	;'1'
   110  00081E  20                 	db	32
   111  00081F  4F                 	db	79	;'O'
   112  000820  46                 	db	70	;'F'
   113  000821  46                 	db	70	;'F'
   114  000822  0D                 	db	13
   115  000823  0A                 	db	10
   116  000824  00                 	db	0
   117  000825                     STR_17:
   118  000825  4C                 	db	76	;'L'
   119  000826  45                 	db	69	;'E'
   120  000827  44                 	db	68	;'D'
   121  000828  32                 	db	50	;'2'
   122  000829  20                 	db	32
   123  00082A  4F                 	db	79	;'O'
   124  00082B  46                 	db	70	;'F'
   125  00082C  46                 	db	70	;'F'
   126  00082D  0D                 	db	13
   127  00082E  0A                 	db	10
   128  00082F  00                 	db	0
   129  000830                     STR_18:
   130  000830  4C                 	db	76	;'L'
   131  000831  45                 	db	69	;'E'
   132  000832  44                 	db	68	;'D'
   133  000833  33                 	db	51	;'3'
   134  000834  20                 	db	32
   135  000835  4F                 	db	79	;'O'
   136  000836  46                 	db	70	;'F'
   137  000837  46                 	db	70	;'F'
   138  000838  0D                 	db	13
   139  000839  0A                 	db	10
   140  00083A  00                 	db	0
   141  00083B                     STR_19:
   142  00083B  4C                 	db	76	;'L'
   143  00083C  45                 	db	69	;'E'
   144  00083D  44                 	db	68	;'D'
   145  00083E  34                 	db	52	;'4'
   146  00083F  20                 	db	32
   147  000840  4F                 	db	79	;'O'
   148  000841  46                 	db	70	;'F'
   149  000842  46                 	db	70	;'F'
   150  000843  0D                 	db	13
   151  000844  0A                 	db	10
   152  000845  00                 	db	0
   153  000846                     STR_20:
   154  000846  4C                 	db	76	;'L'
   155  000847  45                 	db	69	;'E'
   156  000848  44                 	db	68	;'D'
   157  000849  35                 	db	53	;'5'
   158  00084A  20                 	db	32
   159  00084B  4F                 	db	79	;'O'
   160  00084C  46                 	db	70	;'F'
   161  00084D  46                 	db	70	;'F'
   162  00084E  0D                 	db	13
   163  00084F  0A                 	db	10
   164  000850  00                 	db	0
   165  000851                     STR_21:
   166  000851  4C                 	db	76	;'L'
   167  000852  45                 	db	69	;'E'
   168  000853  44                 	db	68	;'D'
   169  000854  36                 	db	54	;'6'
   170  000855  20                 	db	32
   171  000856  4F                 	db	79	;'O'
   172  000857  46                 	db	70	;'F'
   173  000858  46                 	db	70	;'F'
   174  000859  0D                 	db	13
   175  00085A  0A                 	db	10
   176  00085B  00                 	db	0
   177  00085C                     STR_22:
   178  00085C  4C                 	db	76	;'L'
   179  00085D  45                 	db	69	;'E'
   180  00085E  44                 	db	68	;'D'
   181  00085F  37                 	db	55	;'7'
   182  000860  20                 	db	32
   183  000861  4F                 	db	79	;'O'
   184  000862  46                 	db	70	;'F'
   185  000863  46                 	db	70	;'F'
   186  000864  0D                 	db	13
   187  000865  0A                 	db	10
   188  000866  00                 	db	0
   189  000867                     STR_12:
   190  000867  49                 	db	73	;'I'
   191  000868  6E                 	db	110	;'n'
   192  000869  76                 	db	118	;'v'
   193  00086A  61                 	db	97	;'a'
   194  00086B  6C                 	db	108	;'l'
   195  00086C  69                 	db	105	;'i'
   196  00086D  64                 	db	100	;'d'
   197  00086E  6F                 	db	111	;'o'
   198  00086F  0D                 	db	13
   199  000870  0A                 	db	10
   200  000871  00                 	db	0
   201  000872                     STR_26:
   202  000872  46                 	db	70	;'F'
   203  000873  69                 	db	105	;'i'
   204  000874  6E                 	db	110	;'n'
   205  000875  69                 	db	105	;'i'
   206  000876  73                 	db	115	;'s'
   207  000877  68                 	db	104	;'h'
   208  000878  21                 	db	33
   209  000879  0D                 	db	13
   210  00087A  0A                 	db	10
   211  00087B  00                 	db	0
   212  00087C                     STR_4:
   213  00087C  4C                 	db	76	;'L'
   214  00087D  45                 	db	69	;'E'
   215  00087E  44                 	db	68	;'D'
   216  00087F  30                 	db	48	;'0'
   217  000880  20                 	db	32
   218  000881  4F                 	db	79	;'O'
   219  000882  4E                 	db	78	;'N'
   220  000883  0D                 	db	13
   221  000884  0A                 	db	10
   222  000885  00                 	db	0
   223  000886                     STR_5:
   224  000886  4C                 	db	76	;'L'
   225  000887  45                 	db	69	;'E'
   226  000888  44                 	db	68	;'D'
   227  000889  31                 	db	49	;'1'
   228  00088A  20                 	db	32
   229  00088B  4F                 	db	79	;'O'
   230  00088C  4E                 	db	78	;'N'
   231  00088D  0D                 	db	13
   232  00088E  0A                 	db	10
   233  00088F  00                 	db	0
   234  000890                     STR_6:
   235  000890  4C                 	db	76	;'L'
   236  000891  45                 	db	69	;'E'
   237  000892  44                 	db	68	;'D'
   238  000893  32                 	db	50	;'2'
   239  000894  20                 	db	32
   240  000895  4F                 	db	79	;'O'
   241  000896  4E                 	db	78	;'N'
   242  000897  0D                 	db	13
   243  000898  0A                 	db	10
   244  000899  00                 	db	0
   245  00089A                     STR_7:
   246  00089A  4C                 	db	76	;'L'
   247  00089B  45                 	db	69	;'E'
   248  00089C  44                 	db	68	;'D'
   249  00089D  33                 	db	51	;'3'
   250  00089E  20                 	db	32
   251  00089F  4F                 	db	79	;'O'
   252  0008A0  4E                 	db	78	;'N'
   253  0008A1  0D                 	db	13
   254  0008A2  0A                 	db	10
   255  0008A3  00                 	db	0
   256  0008A4                     STR_8:
   257  0008A4  4C                 	db	76	;'L'
   258  0008A5  45                 	db	69	;'E'
   259  0008A6  44                 	db	68	;'D'
   260  0008A7  34                 	db	52	;'4'
   261  0008A8  20                 	db	32
   262  0008A9  4F                 	db	79	;'O'
   263  0008AA  4E                 	db	78	;'N'
   264  0008AB  0D                 	db	13
   265  0008AC  0A                 	db	10
   266  0008AD  00                 	db	0
   267  0008AE                     STR_9:
   268  0008AE  4C                 	db	76	;'L'
   269  0008AF  45                 	db	69	;'E'
   270  0008B0  44                 	db	68	;'D'
   271  0008B1  35                 	db	53	;'5'
   272  0008B2  20                 	db	32
   273  0008B3  4F                 	db	79	;'O'
   274  0008B4  4E                 	db	78	;'N'
   275  0008B5  0D                 	db	13
   276  0008B6  0A                 	db	10
   277  0008B7  00                 	db	0
   278  0008B8                     STR_10:
   279  0008B8  4C                 	db	76	;'L'
   280  0008B9  45                 	db	69	;'E'
   281  0008BA  44                 	db	68	;'D'
   282  0008BB  36                 	db	54	;'6'
   283  0008BC  20                 	db	32
   284  0008BD  4F                 	db	79	;'O'
   285  0008BE  4E                 	db	78	;'N'
   286  0008BF  0D                 	db	13
   287  0008C0  0A                 	db	10
   288  0008C1  00                 	db	0
   289  0008C2                     STR_11:
   290  0008C2  4C                 	db	76	;'L'
   291  0008C3  45                 	db	69	;'E'
   292  0008C4  44                 	db	68	;'D'
   293  0008C5  37                 	db	55	;'7'
   294  0008C6  20                 	db	32
   295  0008C7  4F                 	db	79	;'O'
   296  0008C8  4E                 	db	78	;'N'
   297  0008C9  0D                 	db	13
   298  0008CA  0A                 	db	10
   299  0008CB  00                 	db	0
   300  0008CC                     STR_3:
   301  0008CC  4E                 	db	78	;'N'
   302  0008CD  75                 	db	117	;'u'
   303  0008CE  6D                 	db	109	;'m'
   304  0008CF  20                 	db	32
   305  0008D0  70                 	db	112	;'p'
   306  0008D1  6F                 	db	111	;'o'
   307  0008D2  72                 	db	114	;'r'
   308  0008D3  74                 	db	116	;'t'
   309  0008D4  61                 	db	97	;'a'
   310  0008D5  00                 	db	0
   311  0008D6                     STR_1:
   312  0008D6  53                 	db	83	;'S'
   313  0008D7  74                 	db	116	;'t'
   314  0008D8  61                 	db	97	;'a'
   315  0008D9  72                 	db	114	;'r'
   316  0008DA  74                 	db	116	;'t'
   317  0008DB  21                 	db	33
   318  0008DC  0D                 	db	13
   319  0008DD  0A                 	db	10
   320  0008DE  00                 	db	0
   321  0008DF                     STR_13:
   322  0008DF  4F                 	db	79	;'O'
   323  0008E0  46                 	db	70	;'F'
   324  0008E1  46                 	db	70	;'F'
   325  0008E2  00                 	db	0
   326  0008E3                     STR_24:
   327  0008E3  4F                 	db	79	;'O'
   328  0008E4  75                 	db	117	;'u'
   329  0008E5  74                 	db	116	;'t'
   330  0008E6  00                 	db	0
   331  0008E7                     STR_2:
   332  0008E7  4F                 	db	79	;'O'
   333  0008E8  4E                 	db	78	;'N'
   334  0008E9  00                 	db	0
   335  0008EA  00                 	db	0	; dummy byte at the end
   336  0000                     
   337                           ; #config settings
   338                           
   339                           	psect	cinit
   340  001284                     __pcinit:
   341                           	callstack 0
   342  001284                     start_initialization:
   343                           	callstack 0
   344  001284                     __initialization:
   345                           	callstack 0
   346  001284                     end_of_initialization:
   347                           	callstack 0
   348  001284                     __end_of__initialization:
   349                           	callstack 0
   350  001284  0E00               	movlw	low (__Lmediumconst shr (0+16))
   351  001286  6EF8               	movwf	tblptru,c
   352  001288  0100               	movlb	0
   353  00128A  EF76  F004         	goto	_main	;jump to C main() function
   354                           
   355                           	psect	cstackCOMRAM
   356  000001                     __pcstackCOMRAM:
   357                           	callstack 0
   358  000001                     ?_strncmp:
   359                           	callstack 0
   360  000001                     ?_isspace:
   361                           	callstack 0
   362  000001                     ?_isdigit:
   363                           	callstack 0
   364  000001                     ?___wmul:
   365                           	callstack 0
   366  000001                     ?___aldiv:
   367                           	callstack 0
   368  000001                     UART_Write@info:
   369                           	callstack 0
   370  000001                     UART_Read@info:
   371                           	callstack 0
   372  000001                     ___wmul@multiplier:
   373                           	callstack 0
   374  000001                     isdigit@c:
   375                           	callstack 0
   376  000001                     isspace@c:
   377                           	callstack 0
   378  000001                     strncmp@_l:
   379                           	callstack 0
   380  000001                     ___aldiv@dividend:
   381                           	callstack 0
   382                           
   383                           ; 4 bytes @ 0x0
   384  000001                     	ds	2
   385  000003                     ??_isspace:
   386  000003                     ??_isdigit:
   387  000003                     ??_UART_Write:
   388  000003                     ??_UART_Read:
   389  000003                     ___wmul@multiplicand:
   390                           	callstack 0
   391  000003                     strncmp@_r:
   392                           	callstack 0
   393                           
   394                           ; 2 bytes @ 0x2
   395  000003                     	ds	2
   396  000005                     UART_Write@i:
   397                           	callstack 0
   398  000005                     UART_Read@i:
   399                           	callstack 0
   400  000005                     ___wmul@product:
   401                           	callstack 0
   402  000005                     strncmp@n:
   403                           	callstack 0
   404  000005                     ___aldiv@divisor:
   405                           	callstack 0
   406                           
   407                           ; 4 bytes @ 0x4
   408  000005                     	ds	2
   409  000007                     ??_strncmp:
   410  000007                     _isspace$775:
   411                           	callstack 0
   412                           
   413                           ; 1 bytes @ 0x6
   414  000007                     	ds	1
   415  000008                     ?_atoi:
   416                           	callstack 0
   417  000008                     atoi@s:
   418                           	callstack 0
   419  000008                     strncmp@l:
   420                           	callstack 0
   421                           
   422                           ; 2 bytes @ 0x7
   423  000008                     	ds	1
   424  000009                     ___aldiv@counter:
   425                           	callstack 0
   426                           
   427                           ; 1 bytes @ 0x8
   428  000009                     	ds	1
   429  00000A                     ??_atoi:
   430  00000A                     ___aldiv@sign:
   431                           	callstack 0
   432  00000A                     strncmp@r:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0x9
   436  00000A                     	ds	1
   437  00000B                     ___aldiv@quotient:
   438                           	callstack 0
   439                           
   440                           ; 4 bytes @ 0xA
   441  00000B                     	ds	3
   442  00000E                     atoi@neg:
   443                           	callstack 0
   444                           
   445                           ; 2 bytes @ 0xD
   446  00000E                     	ds	1
   447  00000F                     UART_Open@baudrate:
   448                           	callstack 0
   449                           
   450                           ; 4 bytes @ 0xE
   451  00000F                     	ds	1
   452  000010                     atoi@n:
   453                           	callstack 0
   454                           
   455                           ; 2 bytes @ 0xF
   456  000010                     	ds	3
   457  000013                     ??_UART_Open:
   458                           
   459                           ; 1 bytes @ 0x12
   460  000013                     	ds	8
   461  00001B                     UART_Open@x:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0x1A
   465  00001B                     	ds	2
   466  00001D                     ??_main:
   467                           
   468                           ; 1 bytes @ 0x1C
   469  00001D                     	ds	2
   470  00001F                     main@temp:
   471                           	callstack 0
   472                           
   473                           ; 10 bytes @ 0x1E
   474  00001F                     	ds	10
   475  000029                     main@numPorta:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0x28
   479  000029                     	ds	2
   480                           
   481 ;;
   482 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   483 ;;
   484 ;; *************** function _main *****************
   485 ;; Defined at:
   486 ;;		line 78 in file "main.c"
   487 ;; Parameters:    Size  Location     Type
   488 ;;		None
   489 ;; Auto vars:     Size  Location     Type
   490 ;;  temp           10   30[COMRAM] unsigned char [10]
   491 ;;  numPorta        2   40[COMRAM] int 
   492 ;; Return value:  Size  Location     Type
   493 ;;                  1    wreg      void 
   494 ;; Registers used:
   495 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   496 ;; Tracked objects:
   497 ;;		On entry : 0/0
   498 ;;		On exit  : 0/0
   499 ;;		Unchanged: 0/0
   500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   501 ;;      Params:         0       0       0       0       0       0       0       0       0
   502 ;;      Locals:        12       0       0       0       0       0       0       0       0
   503 ;;      Temps:          2       0       0       0       0       0       0       0       0
   504 ;;      Totals:        14       0       0       0       0       0       0       0       0
   505 ;;Total ram usage:       14 bytes
   506 ;; Hardware stack levels required when called: 2
   507 ;; This function calls:
   508 ;;		_UART_Close
   509 ;;		_UART_Open
   510 ;;		_UART_Read
   511 ;;		_UART_Write
   512 ;;		_atoi
   513 ;;		_strncmp
   514 ;; This function is called by:
   515 ;;		Startup code after reset
   516 ;; This function uses a non-reentrant model
   517 ;;
   518                           
   519                           	psect	text0
   520  0008EC                     __ptext0:
   521                           	callstack 0
   522  0008EC                     _main:
   523                           	callstack 29
   524  0008EC                     
   525                           ;main.c: 79:      TRISB = 0;
   526  0008EC  0E00               	movlw	0
   527  0008EE  6E93               	movwf	147,c	;volatile
   528                           
   529                           ;main.c: 80:      PORTB = 0;
   530  0008F0  0E00               	movlw	0
   531  0008F2  6E81               	movwf	129,c	;volatile
   532  0008F4                     
   533                           ;main.c: 82:      char temp[10];;main.c: 84:      UART_Close();
   534  0008F4  EC4B  F009         	call	_UART_Close	;wreg free
   535  0008F8                     
   536                           ;main.c: 85:      UART_Open(9600);
   537  0008F8  0E80               	movlw	128
   538  0008FA  6E0F               	movwf	UART_Open@baudrate^0,c
   539  0008FC  0E25               	movlw	37
   540  0008FE  6E10               	movwf	(UART_Open@baudrate+1)^0,c
   541  000900  0E00               	movlw	0
   542  000902  6E11               	movwf	(UART_Open@baudrate+2)^0,c
   543  000904  0E00               	movlw	0
   544  000906  6E12               	movwf	(UART_Open@baudrate+3)^0,c
   545  000908  ECCC  F006         	call	_UART_Open	;wreg free
   546  00090C                     
   547                           ;main.c: 86:      UART_Write("Start!\r\n");
   548  00090C  0ED6               	movlw	low STR_1
   549  00090E  6E01               	movwf	UART_Write@info^0,c
   550  000910  0E08               	movlw	high STR_1
   551  000912  6E02               	movwf	(UART_Write@info+1)^0,c
   552  000914  EC51  F008         	call	_UART_Write	;wreg free
   553  000918                     l1248:
   554                           
   555                           ;main.c: 89:           UART_Read(temp);
   556  000918  0E1F               	movlw	low main@temp
   557  00091A  6E01               	movwf	UART_Read@info^0,c
   558  00091C  0E00               	movlw	high main@temp
   559  00091E  6E02               	movwf	(UART_Read@info+1)^0,c
   560  000920  EC99  F008         	call	_UART_Read	;wreg free
   561  000924                     
   562                           ;main.c: 90:           UART_Write(temp);
   563  000924  0E1F               	movlw	low main@temp
   564  000926  6E01               	movwf	UART_Write@info^0,c
   565  000928  0E00               	movlw	high main@temp
   566  00092A  6E02               	movwf	(UART_Write@info+1)^0,c
   567  00092C  EC51  F008         	call	_UART_Write	;wreg free
   568  000930                     
   569                           ;main.c: 92:           if (strncmp(temp,"ON",2) == 0){
   570  000930  0E1F               	movlw	low main@temp
   571  000932  6E01               	movwf	strncmp@_l^0,c
   572  000934  0E00               	movlw	high main@temp
   573  000936  6E02               	movwf	(strncmp@_l+1)^0,c
   574  000938  0EE7               	movlw	low STR_2
   575  00093A  6E03               	movwf	strncmp@_r^0,c
   576  00093C  0E08               	movlw	high STR_2
   577  00093E  6E04               	movwf	(strncmp@_r+1)^0,c
   578  000940  0E00               	movlw	0
   579  000942  6E06               	movwf	(strncmp@n+1)^0,c
   580  000944  0E02               	movlw	2
   581  000946  6E05               	movwf	strncmp@n^0,c
   582  000948  ECE6  F007         	call	_strncmp	;wreg free
   583  00094C  5001               	movf	?_strncmp^0,w,c
   584  00094E  1002               	iorwf	(?_strncmp+1)^0,w,c
   585  000950  A4D8               	btfss	status,2,c
   586  000952  EFAD  F004         	goto	u701
   587  000956  EFAF  F004         	goto	u700
   588  00095A                     u701:
   589  00095A  EF4B  F005         	goto	l1282
   590  00095E                     u700:
   591  00095E                     
   592                           ;main.c: 93:               UART_Write("Num porta");
   593  00095E  0ECC               	movlw	low STR_3
   594  000960  6E01               	movwf	UART_Write@info^0,c
   595  000962  0E08               	movlw	high STR_3
   596  000964  6E02               	movwf	(UART_Write@info+1)^0,c
   597  000966  EC51  F008         	call	_UART_Write	;wreg free
   598  00096A                     
   599                           ;main.c: 94:               UART_Read(temp);
   600  00096A  0E1F               	movlw	low main@temp
   601  00096C  6E01               	movwf	UART_Read@info^0,c
   602  00096E  0E00               	movlw	high main@temp
   603  000970  6E02               	movwf	(UART_Read@info+1)^0,c
   604  000972  EC99  F008         	call	_UART_Read	;wreg free
   605  000976                     
   606                           ;main.c: 95:               UART_Write(temp);
   607  000976  0E1F               	movlw	low main@temp
   608  000978  6E01               	movwf	UART_Write@info^0,c
   609  00097A  0E00               	movlw	high main@temp
   610  00097C  6E02               	movwf	(UART_Write@info+1)^0,c
   611  00097E  EC51  F008         	call	_UART_Write	;wreg free
   612  000982                     
   613                           ;main.c: 97:               numPorta = atoi(temp);
   614  000982  0E1F               	movlw	low main@temp
   615  000984  6E08               	movwf	atoi@s^0,c
   616  000986  0E00               	movlw	high main@temp
   617  000988  6E09               	movwf	(atoi@s+1)^0,c
   618  00098A  EC24  F006         	call	_atoi	;wreg free
   619  00098E  C008  F029         	movff	?_atoi,main@numPorta
   620  000992  C009  F02A         	movff	?_atoi+1,main@numPorta+1
   621                           
   622                           ;main.c: 99:               switch(numPorta){
   623  000996  EF1D  F005         	goto	l1280
   624  00099A                     l73:
   625                           
   626                           ;main.c: 101:                       PORTBbits.RB0 = 1;
   627  00099A  8081               	bsf	129,0,c	;volatile
   628  00099C                     
   629                           ;main.c: 102:                       UART_Write("LED0 ON\r\n");
   630  00099C  0E7C               	movlw	low STR_4
   631  00099E  6E01               	movwf	UART_Write@info^0,c
   632  0009A0  0E08               	movlw	high STR_4
   633  0009A2  6E02               	movwf	(UART_Write@info+1)^0,c
   634  0009A4  EC51  F008         	call	_UART_Write	;wreg free
   635                           
   636                           ;main.c: 103:                       break;
   637  0009A8  EF4B  F005         	goto	l1282
   638  0009AC                     l75:
   639                           
   640                           ;main.c: 105:                       PORTBbits.RB1 = 1;
   641  0009AC  8281               	bsf	129,1,c	;volatile
   642  0009AE                     
   643                           ;main.c: 106:                       UART_Write("LED1 ON\r\n");
   644  0009AE  0E86               	movlw	low STR_5
   645  0009B0  6E01               	movwf	UART_Write@info^0,c
   646  0009B2  0E08               	movlw	high STR_5
   647  0009B4  6E02               	movwf	(UART_Write@info+1)^0,c
   648  0009B6  EC51  F008         	call	_UART_Write	;wreg free
   649                           
   650                           ;main.c: 107:                       break;
   651  0009BA  EF4B  F005         	goto	l1282
   652  0009BE                     l76:
   653                           
   654                           ;main.c: 109:                       PORTBbits.RB2 = 1;
   655  0009BE  8481               	bsf	129,2,c	;volatile
   656  0009C0                     
   657                           ;main.c: 110:                       UART_Write("LED2 ON\r\n");
   658  0009C0  0E90               	movlw	low STR_6
   659  0009C2  6E01               	movwf	UART_Write@info^0,c
   660  0009C4  0E08               	movlw	high STR_6
   661  0009C6  6E02               	movwf	(UART_Write@info+1)^0,c
   662  0009C8  EC51  F008         	call	_UART_Write	;wreg free
   663                           
   664                           ;main.c: 111:                       break;
   665  0009CC  EF4B  F005         	goto	l1282
   666  0009D0                     l77:
   667                           
   668                           ;main.c: 113:                       PORTBbits.RB3 = 1;
   669  0009D0  8681               	bsf	129,3,c	;volatile
   670  0009D2                     
   671                           ;main.c: 114:                       UART_Write("LED3 ON\r\n");
   672  0009D2  0E9A               	movlw	low STR_7
   673  0009D4  6E01               	movwf	UART_Write@info^0,c
   674  0009D6  0E08               	movlw	high STR_7
   675  0009D8  6E02               	movwf	(UART_Write@info+1)^0,c
   676  0009DA  EC51  F008         	call	_UART_Write	;wreg free
   677                           
   678                           ;main.c: 115:                       break;
   679  0009DE  EF4B  F005         	goto	l1282
   680  0009E2                     l78:
   681                           
   682                           ;main.c: 117:                       PORTBbits.RB4 = 1;
   683  0009E2  8881               	bsf	129,4,c	;volatile
   684  0009E4                     
   685                           ;main.c: 118:                       UART_Write("LED4 ON\r\n");
   686  0009E4  0EA4               	movlw	low STR_8
   687  0009E6  6E01               	movwf	UART_Write@info^0,c
   688  0009E8  0E08               	movlw	high STR_8
   689  0009EA  6E02               	movwf	(UART_Write@info+1)^0,c
   690  0009EC  EC51  F008         	call	_UART_Write	;wreg free
   691                           
   692                           ;main.c: 119:                       break;
   693  0009F0  EF4B  F005         	goto	l1282
   694  0009F4                     l79:
   695                           
   696                           ;main.c: 121:                       PORTBbits.RB5 = 1;
   697  0009F4  8A81               	bsf	129,5,c	;volatile
   698  0009F6                     
   699                           ;main.c: 122:                       UART_Write("LED5 ON\r\n");
   700  0009F6  0EAE               	movlw	low STR_9
   701  0009F8  6E01               	movwf	UART_Write@info^0,c
   702  0009FA  0E08               	movlw	high STR_9
   703  0009FC  6E02               	movwf	(UART_Write@info+1)^0,c
   704  0009FE  EC51  F008         	call	_UART_Write	;wreg free
   705                           
   706                           ;main.c: 123:                       break;
   707  000A02  EF4B  F005         	goto	l1282
   708  000A06                     l80:
   709                           
   710                           ;main.c: 125:                       PORTBbits.RB6 = 1;
   711  000A06  8C81               	bsf	129,6,c	;volatile
   712  000A08                     
   713                           ;main.c: 126:                       UART_Write("LED6 ON\r\n");
   714  000A08  0EB8               	movlw	low STR_10
   715  000A0A  6E01               	movwf	UART_Write@info^0,c
   716  000A0C  0E08               	movlw	high STR_10
   717  000A0E  6E02               	movwf	(UART_Write@info+1)^0,c
   718  000A10  EC51  F008         	call	_UART_Write	;wreg free
   719                           
   720                           ;main.c: 127:                       break;
   721  000A14  EF4B  F005         	goto	l1282
   722  000A18                     l81:
   723                           
   724                           ;main.c: 129:                       PORTBbits.RB7 = 1;
   725  000A18  8E81               	bsf	129,7,c	;volatile
   726  000A1A                     
   727                           ;main.c: 130:                       UART_Write("LED7 ON\r\n");
   728  000A1A  0EC2               	movlw	low STR_11
   729  000A1C  6E01               	movwf	UART_Write@info^0,c
   730  000A1E  0E08               	movlw	high STR_11
   731  000A20  6E02               	movwf	(UART_Write@info+1)^0,c
   732  000A22  EC51  F008         	call	_UART_Write	;wreg free
   733                           
   734                           ;main.c: 131:                       break;
   735  000A26  EF4B  F005         	goto	l1282
   736  000A2A                     l1278:
   737                           
   738                           ;main.c: 133:                       UART_Write("Invalido\r\n");
   739  000A2A  0E67               	movlw	low STR_12
   740  000A2C  6E01               	movwf	UART_Write@info^0,c
   741  000A2E  0E08               	movlw	high STR_12
   742  000A30  6E02               	movwf	(UART_Write@info+1)^0,c
   743  000A32  EC51  F008         	call	_UART_Write	;wreg free
   744                           
   745                           ;main.c: 134:               }
   746  000A36  EF4B  F005         	goto	l1282
   747  000A3A                     l1280:
   748  000A3A  C029  F01D         	movff	main@numPorta,??_main
   749  000A3E  C02A  F01E         	movff	main@numPorta+1,??_main+1
   750                           
   751                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   752                           ; Switch size 1, requested type "simple"
   753                           ; Number of cases is 1, Range of values is 0 to 0
   754                           ; switch strategies available:
   755                           ; Name         Instructions Cycles
   756                           ; simple_byte            4     3 (average)
   757                           ;	Chosen strategy is simple_byte
   758  000A42  501E               	movf	(??_main+1)^0,w,c
   759  000A44  0A00               	xorlw	0	; case 0
   760  000A46  B4D8               	btfsc	status,2,c
   761  000A48  EF28  F005         	goto	l1340
   762  000A4C  EF15  F005         	goto	l1278
   763  000A50                     l1340:
   764                           
   765                           ; Switch size 1, requested type "simple"
   766                           ; Number of cases is 8, Range of values is 0 to 7
   767                           ; switch strategies available:
   768                           ; Name         Instructions Cycles
   769                           ; simple_byte           25    13 (average)
   770                           ;	Chosen strategy is simple_byte
   771  000A50  501D               	movf	??_main^0,w,c
   772  000A52  0A00               	xorlw	0	; case 0
   773  000A54  B4D8               	btfsc	status,2,c
   774  000A56  EFCD  F004         	goto	l73
   775  000A5A  0A01               	xorlw	1	; case 1
   776  000A5C  B4D8               	btfsc	status,2,c
   777  000A5E  EFD6  F004         	goto	l75
   778  000A62  0A03               	xorlw	3	; case 2
   779  000A64  B4D8               	btfsc	status,2,c
   780  000A66  EFDF  F004         	goto	l76
   781  000A6A  0A01               	xorlw	1	; case 3
   782  000A6C  B4D8               	btfsc	status,2,c
   783  000A6E  EFE8  F004         	goto	l77
   784  000A72  0A07               	xorlw	7	; case 4
   785  000A74  B4D8               	btfsc	status,2,c
   786  000A76  EFF1  F004         	goto	l78
   787  000A7A  0A01               	xorlw	1	; case 5
   788  000A7C  B4D8               	btfsc	status,2,c
   789  000A7E  EFFA  F004         	goto	l79
   790  000A82  0A03               	xorlw	3	; case 6
   791  000A84  B4D8               	btfsc	status,2,c
   792  000A86  EF03  F005         	goto	l80
   793  000A8A  0A01               	xorlw	1	; case 7
   794  000A8C  B4D8               	btfsc	status,2,c
   795  000A8E  EF0C  F005         	goto	l81
   796  000A92  EF15  F005         	goto	l1278
   797  000A96                     l1282:
   798                           
   799                           ;main.c: 136:           if (strncmp(temp,"OFF",3) == 0) {
   800  000A96  0E1F               	movlw	low main@temp
   801  000A98  6E01               	movwf	strncmp@_l^0,c
   802  000A9A  0E00               	movlw	high main@temp
   803  000A9C  6E02               	movwf	(strncmp@_l+1)^0,c
   804  000A9E  0EDF               	movlw	low STR_13
   805  000AA0  6E03               	movwf	strncmp@_r^0,c
   806  000AA2  0E08               	movlw	high STR_13
   807  000AA4  6E04               	movwf	(strncmp@_r+1)^0,c
   808  000AA6  0E00               	movlw	0
   809  000AA8  6E06               	movwf	(strncmp@n+1)^0,c
   810  000AAA  0E03               	movlw	3
   811  000AAC  6E05               	movwf	strncmp@n^0,c
   812  000AAE  ECE6  F007         	call	_strncmp	;wreg free
   813  000AB2  5001               	movf	?_strncmp^0,w,c
   814  000AB4  1002               	iorwf	(?_strncmp+1)^0,w,c
   815  000AB6  A4D8               	btfss	status,2,c
   816  000AB8  EF60  F005         	goto	u711
   817  000ABC  EF62  F005         	goto	u710
   818  000AC0                     u711:
   819  000AC0  EFFE  F005         	goto	l1312
   820  000AC4                     u710:
   821  000AC4                     
   822                           ;main.c: 137:               UART_Write("Num porta");
   823  000AC4  0ECC               	movlw	low STR_3
   824  000AC6  6E01               	movwf	UART_Write@info^0,c
   825  000AC8  0E08               	movlw	high STR_3
   826  000ACA  6E02               	movwf	(UART_Write@info+1)^0,c
   827  000ACC  EC51  F008         	call	_UART_Write	;wreg free
   828  000AD0                     
   829                           ;main.c: 138:               UART_Read(temp);
   830  000AD0  0E1F               	movlw	low main@temp
   831  000AD2  6E01               	movwf	UART_Read@info^0,c
   832  000AD4  0E00               	movlw	high main@temp
   833  000AD6  6E02               	movwf	(UART_Read@info+1)^0,c
   834  000AD8  EC99  F008         	call	_UART_Read	;wreg free
   835  000ADC                     
   836                           ;main.c: 139:               UART_Write(temp);
   837  000ADC  0E1F               	movlw	low main@temp
   838  000ADE  6E01               	movwf	UART_Write@info^0,c
   839  000AE0  0E00               	movlw	high main@temp
   840  000AE2  6E02               	movwf	(UART_Write@info+1)^0,c
   841  000AE4  EC51  F008         	call	_UART_Write	;wreg free
   842  000AE8                     
   843                           ;main.c: 141:               numPorta = atoi(temp);
   844  000AE8  0E1F               	movlw	low main@temp
   845  000AEA  6E08               	movwf	atoi@s^0,c
   846  000AEC  0E00               	movlw	high main@temp
   847  000AEE  6E09               	movwf	(atoi@s+1)^0,c
   848  000AF0  EC24  F006         	call	_atoi	;wreg free
   849  000AF4  C008  F029         	movff	?_atoi,main@numPorta
   850  000AF8  C009  F02A         	movff	?_atoi+1,main@numPorta+1
   851                           
   852                           ;main.c: 143:               switch(numPorta){
   853  000AFC  EFD0  F005         	goto	l1310
   854  000B00                     l85:
   855                           
   856                           ;main.c: 145:                       PORTBbits.RB0 = 0;
   857  000B00  9081               	bcf	129,0,c	;volatile
   858  000B02                     
   859                           ;main.c: 146:                       UART_Write("LED0 OFF\r\n");
   860  000B02  0E0F               	movlw	low STR_15
   861  000B04  6E01               	movwf	UART_Write@info^0,c
   862  000B06  0E08               	movlw	high STR_15
   863  000B08  6E02               	movwf	(UART_Write@info+1)^0,c
   864  000B0A  EC51  F008         	call	_UART_Write	;wreg free
   865                           
   866                           ;main.c: 147:                       break;
   867  000B0E  EFFE  F005         	goto	l1312
   868  000B12                     l87:
   869                           
   870                           ;main.c: 149:                       PORTBbits.RB1 = 0;
   871  000B12  9281               	bcf	129,1,c	;volatile
   872  000B14                     
   873                           ;main.c: 150:                       UART_Write("LED1 OFF\r\n");
   874  000B14  0E1A               	movlw	low STR_16
   875  000B16  6E01               	movwf	UART_Write@info^0,c
   876  000B18  0E08               	movlw	high STR_16
   877  000B1A  6E02               	movwf	(UART_Write@info+1)^0,c
   878  000B1C  EC51  F008         	call	_UART_Write	;wreg free
   879                           
   880                           ;main.c: 151:                       break;
   881  000B20  EFFE  F005         	goto	l1312
   882  000B24                     l88:
   883                           
   884                           ;main.c: 153:                       PORTBbits.RB2 = 0;
   885  000B24  9481               	bcf	129,2,c	;volatile
   886  000B26                     
   887                           ;main.c: 154:                       UART_Write("LED2 OFF\r\n");
   888  000B26  0E25               	movlw	low STR_17
   889  000B28  6E01               	movwf	UART_Write@info^0,c
   890  000B2A  0E08               	movlw	high STR_17
   891  000B2C  6E02               	movwf	(UART_Write@info+1)^0,c
   892  000B2E  EC51  F008         	call	_UART_Write	;wreg free
   893                           
   894                           ;main.c: 155:                       break;
   895  000B32  EFFE  F005         	goto	l1312
   896  000B36                     l89:
   897                           
   898                           ;main.c: 157:                       PORTBbits.RB3 = 0;
   899  000B36  9681               	bcf	129,3,c	;volatile
   900  000B38                     
   901                           ;main.c: 158:                       UART_Write("LED3 OFF\r\n");
   902  000B38  0E30               	movlw	low STR_18
   903  000B3A  6E01               	movwf	UART_Write@info^0,c
   904  000B3C  0E08               	movlw	high STR_18
   905  000B3E  6E02               	movwf	(UART_Write@info+1)^0,c
   906  000B40  EC51  F008         	call	_UART_Write	;wreg free
   907                           
   908                           ;main.c: 159:                       break;
   909  000B44  EFFE  F005         	goto	l1312
   910  000B48                     l90:
   911                           
   912                           ;main.c: 161:                       PORTBbits.RB4 = 0;
   913  000B48  9881               	bcf	129,4,c	;volatile
   914  000B4A                     
   915                           ;main.c: 162:                       UART_Write("LED4 OFF\r\n");
   916  000B4A  0E3B               	movlw	low STR_19
   917  000B4C  6E01               	movwf	UART_Write@info^0,c
   918  000B4E  0E08               	movlw	high STR_19
   919  000B50  6E02               	movwf	(UART_Write@info+1)^0,c
   920  000B52  EC51  F008         	call	_UART_Write	;wreg free
   921                           
   922                           ;main.c: 163:                       break;
   923  000B56  EFFE  F005         	goto	l1312
   924  000B5A                     l91:
   925                           
   926                           ;main.c: 165:                       PORTBbits.RB5 = 0;
   927  000B5A  9A81               	bcf	129,5,c	;volatile
   928  000B5C                     
   929                           ;main.c: 166:                       UART_Write("LED5 OFF\r\n");
   930  000B5C  0E46               	movlw	low STR_20
   931  000B5E  6E01               	movwf	UART_Write@info^0,c
   932  000B60  0E08               	movlw	high STR_20
   933  000B62  6E02               	movwf	(UART_Write@info+1)^0,c
   934  000B64  EC51  F008         	call	_UART_Write	;wreg free
   935                           
   936                           ;main.c: 167:                       break;
   937  000B68  EFFE  F005         	goto	l1312
   938  000B6C                     l92:
   939                           
   940                           ;main.c: 169:                       PORTBbits.RB6 = 0;
   941  000B6C  9C81               	bcf	129,6,c	;volatile
   942  000B6E                     
   943                           ;main.c: 170:                       UART_Write("LED6 OFF\r\n");
   944  000B6E  0E51               	movlw	low STR_21
   945  000B70  6E01               	movwf	UART_Write@info^0,c
   946  000B72  0E08               	movlw	high STR_21
   947  000B74  6E02               	movwf	(UART_Write@info+1)^0,c
   948  000B76  EC51  F008         	call	_UART_Write	;wreg free
   949                           
   950                           ;main.c: 171:                       break;
   951  000B7A  EFFE  F005         	goto	l1312
   952  000B7E                     l93:
   953                           
   954                           ;main.c: 173:                       PORTBbits.RB7 = 0;
   955  000B7E  9E81               	bcf	129,7,c	;volatile
   956  000B80                     
   957                           ;main.c: 174:                       UART_Write("LED7 OFF\r\n");
   958  000B80  0E5C               	movlw	low STR_22
   959  000B82  6E01               	movwf	UART_Write@info^0,c
   960  000B84  0E08               	movlw	high STR_22
   961  000B86  6E02               	movwf	(UART_Write@info+1)^0,c
   962  000B88  EC51  F008         	call	_UART_Write	;wreg free
   963                           
   964                           ;main.c: 175:                       break;
   965  000B8C  EFFE  F005         	goto	l1312
   966  000B90                     l1308:
   967                           
   968                           ;main.c: 177:                       UART_Write("Invalido\r\n");
   969  000B90  0E67               	movlw	low STR_12
   970  000B92  6E01               	movwf	UART_Write@info^0,c
   971  000B94  0E08               	movlw	high STR_12
   972  000B96  6E02               	movwf	(UART_Write@info+1)^0,c
   973  000B98  EC51  F008         	call	_UART_Write	;wreg free
   974                           
   975                           ;main.c: 178:               }
   976  000B9C  EFFE  F005         	goto	l1312
   977  000BA0                     l1310:
   978  000BA0  C029  F01D         	movff	main@numPorta,??_main
   979  000BA4  C02A  F01E         	movff	main@numPorta+1,??_main+1
   980                           
   981                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   982                           ; Switch size 1, requested type "simple"
   983                           ; Number of cases is 1, Range of values is 0 to 0
   984                           ; switch strategies available:
   985                           ; Name         Instructions Cycles
   986                           ; simple_byte            4     3 (average)
   987                           ;	Chosen strategy is simple_byte
   988  000BA8  501E               	movf	(??_main+1)^0,w,c
   989  000BAA  0A00               	xorlw	0	; case 0
   990  000BAC  B4D8               	btfsc	status,2,c
   991  000BAE  EFDB  F005         	goto	l1342
   992  000BB2  EFC8  F005         	goto	l1308
   993  000BB6                     l1342:
   994                           
   995                           ; Switch size 1, requested type "simple"
   996                           ; Number of cases is 8, Range of values is 0 to 7
   997                           ; switch strategies available:
   998                           ; Name         Instructions Cycles
   999                           ; simple_byte           25    13 (average)
  1000                           ;	Chosen strategy is simple_byte
  1001  000BB6  501D               	movf	??_main^0,w,c
  1002  000BB8  0A00               	xorlw	0	; case 0
  1003  000BBA  B4D8               	btfsc	status,2,c
  1004  000BBC  EF80  F005         	goto	l85
  1005  000BC0  0A01               	xorlw	1	; case 1
  1006  000BC2  B4D8               	btfsc	status,2,c
  1007  000BC4  EF89  F005         	goto	l87
  1008  000BC8  0A03               	xorlw	3	; case 2
  1009  000BCA  B4D8               	btfsc	status,2,c
  1010  000BCC  EF92  F005         	goto	l88
  1011  000BD0  0A01               	xorlw	1	; case 3
  1012  000BD2  B4D8               	btfsc	status,2,c
  1013  000BD4  EF9B  F005         	goto	l89
  1014  000BD8  0A07               	xorlw	7	; case 4
  1015  000BDA  B4D8               	btfsc	status,2,c
  1016  000BDC  EFA4  F005         	goto	l90
  1017  000BE0  0A01               	xorlw	1	; case 5
  1018  000BE2  B4D8               	btfsc	status,2,c
  1019  000BE4  EFAD  F005         	goto	l91
  1020  000BE8  0A03               	xorlw	3	; case 6
  1021  000BEA  B4D8               	btfsc	status,2,c
  1022  000BEC  EFB6  F005         	goto	l92
  1023  000BF0  0A01               	xorlw	1	; case 7
  1024  000BF2  B4D8               	btfsc	status,2,c
  1025  000BF4  EFBF  F005         	goto	l93
  1026  000BF8  EFC8  F005         	goto	l1308
  1027  000BFC                     l1312:
  1028                           
  1029                           ;main.c: 180:           if (strncmp(temp,"Out",3) == 0) {
  1030  000BFC  0E1F               	movlw	low main@temp
  1031  000BFE  6E01               	movwf	strncmp@_l^0,c
  1032  000C00  0E00               	movlw	high main@temp
  1033  000C02  6E02               	movwf	(strncmp@_l+1)^0,c
  1034  000C04  0EE3               	movlw	low STR_24
  1035  000C06  6E03               	movwf	strncmp@_r^0,c
  1036  000C08  0E08               	movlw	high STR_24
  1037  000C0A  6E04               	movwf	(strncmp@_r+1)^0,c
  1038  000C0C  0E00               	movlw	0
  1039  000C0E  6E06               	movwf	(strncmp@n+1)^0,c
  1040  000C10  0E03               	movlw	3
  1041  000C12  6E05               	movwf	strncmp@n^0,c
  1042  000C14  ECE6  F007         	call	_strncmp	;wreg free
  1043  000C18  5001               	movf	?_strncmp^0,w,c
  1044  000C1A  1002               	iorwf	(?_strncmp+1)^0,w,c
  1045  000C1C  A4D8               	btfss	status,2,c
  1046  000C1E  EF13  F006         	goto	u721
  1047  000C22  EF15  F006         	goto	u720
  1048  000C26                     u721:
  1049  000C26  EF8C  F004         	goto	l1248
  1050  000C2A                     u720:
  1051  000C2A                     
  1052                           ;main.c: 181:                UART_Write("Program Out\r\n");
  1053  000C2A  0E01               	movlw	low STR_25
  1054  000C2C  6E01               	movwf	UART_Write@info^0,c
  1055  000C2E  0E08               	movlw	high STR_25
  1056  000C30  6E02               	movwf	(UART_Write@info+1)^0,c
  1057  000C32  EC51  F008         	call	_UART_Write	;wreg free
  1058  000C36                     
  1059                           ;main.c: 182:                PORTBbits.RB1 = 0;
  1060  000C36  9281               	bcf	129,1,c	;volatile
  1061  000C38                     
  1062                           ;main.c: 186:      UART_Write("Finish!\r\n");
  1063  000C38  0E72               	movlw	low STR_26
  1064  000C3A  6E01               	movwf	UART_Write@info^0,c
  1065  000C3C  0E08               	movlw	high STR_26
  1066  000C3E  6E02               	movwf	(UART_Write@info+1)^0,c
  1067  000C40  EC51  F008         	call	_UART_Write	;wreg free
  1068  000C44  EF00  F000         	goto	start
  1069  000C48                     __end_of_main:
  1070                           	callstack 0
  1071                           
  1072 ;; *************** function _strncmp *****************
  1073 ;; Defined at:
  1074 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strncmp.c"
  1075 ;; Parameters:    Size  Location     Type
  1076 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  1077 ;;		 -> main@temp(10), 
  1078 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  1079 ;;		 -> STR_24(4), STR_13(4), STR_2(3), 
  1080 ;;  n               2    4[COMRAM] unsigned int 
  1081 ;; Auto vars:     Size  Location     Type
  1082 ;;  r               2    9[COMRAM] PTR const unsigned char 
  1083 ;;		 -> STR_24(4), STR_13(4), STR_2(3), 
  1084 ;;  l               2    7[COMRAM] PTR const unsigned char 
  1085 ;;		 -> main@temp(10), 
  1086 ;; Return value:  Size  Location     Type
  1087 ;;                  2    0[COMRAM] int 
  1088 ;; Registers used:
  1089 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1090 ;; Tracked objects:
  1091 ;;		On entry : 0/0
  1092 ;;		On exit  : 0/0
  1093 ;;		Unchanged: 0/0
  1094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1095 ;;      Params:         6       0       0       0       0       0       0       0       0
  1096 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1097 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1098 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1099 ;;Total ram usage:       11 bytes
  1100 ;; Hardware stack levels used: 1
  1101 ;; This function calls:
  1102 ;;		Nothing
  1103 ;; This function is called by:
  1104 ;;		_main
  1105 ;; This function uses a non-reentrant model
  1106 ;;
  1107                           
  1108                           	psect	text1
  1109  000FCC                     __ptext1:
  1110                           	callstack 0
  1111  000FCC                     _strncmp:
  1112                           	callstack 30
  1113  000FCC  C001  F008         	movff	strncmp@_l,strncmp@l
  1114  000FD0  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  1115  000FD4  C003  F00A         	movff	strncmp@_r,strncmp@r
  1116  000FD8  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  1117  000FDC  0605               	decf	strncmp@n^0,f,c
  1118  000FDE  A0D8               	btfss	status,0,c
  1119  000FE0  0606               	decf	(strncmp@n+1)^0,f,c
  1120  000FE2  2805               	incf	strncmp@n^0,w,c
  1121  000FE4  E106               	bnz	u611
  1122  000FE6  2806               	incf	(strncmp@n+1)^0,w,c
  1123  000FE8  A4D8               	btfss	status,2,c
  1124  000FEA  EFF9  F007         	goto	u611
  1125  000FEE  EFFB  F007         	goto	u610
  1126  000FF2                     u611:
  1127  000FF2  EF08  F008         	goto	l1196
  1128  000FF6                     u610:
  1129  000FF6  0E00               	movlw	0
  1130  000FF8  6E02               	movwf	(?_strncmp+1)^0,c
  1131  000FFA  0E00               	movlw	0
  1132  000FFC  6E01               	movwf	?_strncmp^0,c
  1133  000FFE  EF50  F008         	goto	l815
  1134  001002                     l1194:
  1135  001002  4A08               	infsnz	strncmp@l^0,f,c
  1136  001004  2A09               	incf	(strncmp@l+1)^0,f,c
  1137  001006  4A0A               	infsnz	strncmp@r^0,f,c
  1138  001008  2A0B               	incf	(strncmp@r+1)^0,f,c
  1139  00100A  0605               	decf	strncmp@n^0,f,c
  1140  00100C  A0D8               	btfss	status,0,c
  1141  00100E  0606               	decf	(strncmp@n+1)^0,f,c
  1142  001010                     l1196:
  1143  001010  C008  FFD9         	movff	strncmp@l,fsr2l
  1144  001014  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1145  001018  50DF               	movf	indf2,w,c
  1146  00101A  B4D8               	btfsc	status,2,c
  1147  00101C  EF12  F008         	goto	u621
  1148  001020  EF14  F008         	goto	u620
  1149  001024                     u621:
  1150  001024  EF3F  F008         	goto	l1204
  1151  001028                     u620:
  1152  001028  C00A  FFF6         	movff	strncmp@r,tblptrl
  1153  00102C  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1154  001030                     	if	0	;tblptru may be non-zero
  1155  001030                     	endif
  1156  001030                     	if	0	;tblptru may be non-zero
  1157  001030                     	endif
  1158  001030  0008               	tblrd		*
  1159  001032  50F5               	movf	tablat,w,c
  1160  001034  0900               	iorlw	0
  1161  001036  B4D8               	btfsc	status,2,c
  1162  001038  EF20  F008         	goto	u631
  1163  00103C  EF22  F008         	goto	u630
  1164  001040                     u631:
  1165  001040  EF3F  F008         	goto	l1204
  1166  001044                     u630:
  1167  001044  5005               	movf	strncmp@n^0,w,c
  1168  001046  1006               	iorwf	(strncmp@n+1)^0,w,c
  1169  001048  B4D8               	btfsc	status,2,c
  1170  00104A  EF29  F008         	goto	u641
  1171  00104E  EF2B  F008         	goto	u640
  1172  001052                     u641:
  1173  001052  EF3F  F008         	goto	l1204
  1174  001056                     u640:
  1175  001056  C008  FFD9         	movff	strncmp@l,fsr2l
  1176  00105A  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1177  00105E  50DF               	movf	indf2,w,c
  1178  001060  6E07               	movwf	??_strncmp^0,c
  1179  001062  C00A  FFF6         	movff	strncmp@r,tblptrl
  1180  001066  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1181  00106A                     	if	0	;tblptru may be non-zero
  1182  00106A                     	endif
  1183  00106A                     	if	0	;tblptru may be non-zero
  1184  00106A                     	endif
  1185  00106A  0008               	tblrd		*
  1186  00106C  50F5               	movf	tablat,w,c
  1187  00106E  1807               	xorwf	??_strncmp^0,w,c
  1188  001070  B4D8               	btfsc	status,2,c
  1189  001072  EF3D  F008         	goto	u651
  1190  001076  EF3F  F008         	goto	u650
  1191  00107A                     u651:
  1192  00107A  EF01  F008         	goto	l1194
  1193  00107E                     u650:
  1194  00107E                     l1204:
  1195  00107E  C008  FFD9         	movff	strncmp@l,fsr2l
  1196  001082  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1197  001086  50DF               	movf	indf2,w,c
  1198  001088  6E07               	movwf	??_strncmp^0,c
  1199  00108A  C00A  FFF6         	movff	strncmp@r,tblptrl
  1200  00108E  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1201  001092                     	if	0	;tblptru may be non-zero
  1202  001092                     	endif
  1203  001092                     	if	0	;tblptru may be non-zero
  1204  001092                     	endif
  1205  001092  0008               	tblrd		*
  1206  001094  50F5               	movf	tablat,w,c
  1207  001096  5C07               	subwf	??_strncmp^0,w,c
  1208  001098  6E01               	movwf	?_strncmp^0,c
  1209  00109A  6A02               	clrf	(?_strncmp+1)^0,c
  1210  00109C  A0D8               	btfss	status,0,c
  1211  00109E  0602               	decf	(?_strncmp+1)^0,f,c
  1212  0010A0                     l815:
  1213  0010A0  0012               	return		;funcret
  1214  0010A2                     __end_of_strncmp:
  1215                           	callstack 0
  1216                           
  1217 ;; *************** function _atoi *****************
  1218 ;; Defined at:
  1219 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\atoi.c"
  1220 ;; Parameters:    Size  Location     Type
  1221 ;;  s               2    7[COMRAM] PTR const unsigned char 
  1222 ;;		 -> main@temp(10), 
  1223 ;; Auto vars:     Size  Location     Type
  1224 ;;  n               2   15[COMRAM] int 
  1225 ;;  neg             2   13[COMRAM] int 
  1226 ;; Return value:  Size  Location     Type
  1227 ;;                  2    7[COMRAM] int 
  1228 ;; Registers used:
  1229 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1230 ;; Tracked objects:
  1231 ;;		On entry : 0/0
  1232 ;;		On exit  : 0/0
  1233 ;;		Unchanged: 0/0
  1234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1235 ;;      Params:         2       0       0       0       0       0       0       0       0
  1236 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1237 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1238 ;;      Totals:        10       0       0       0       0       0       0       0       0
  1239 ;;Total ram usage:       10 bytes
  1240 ;; Hardware stack levels used: 1
  1241 ;; Hardware stack levels required when called: 1
  1242 ;; This function calls:
  1243 ;;		___wmul
  1244 ;;		_isdigit
  1245 ;;		_isspace
  1246 ;; This function is called by:
  1247 ;;		_main
  1248 ;; This function uses a non-reentrant model
  1249 ;;
  1250                           
  1251                           	psect	text2
  1252  000C48                     __ptext2:
  1253                           	callstack 0
  1254  000C48                     _atoi:
  1255                           	callstack 29
  1256  000C48  0E00               	movlw	0
  1257  000C4A  6E11               	movwf	(atoi@n+1)^0,c
  1258  000C4C  0E00               	movlw	0
  1259  000C4E  6E10               	movwf	atoi@n^0,c
  1260  000C50  0E00               	movlw	0
  1261  000C52  6E0F               	movwf	(atoi@neg+1)^0,c
  1262  000C54  0E00               	movlw	0
  1263  000C56  6E0E               	movwf	atoi@neg^0,c
  1264  000C58  EF30  F006         	goto	l1214
  1265  000C5C                     l1210:
  1266  000C5C  4A08               	infsnz	atoi@s^0,f,c
  1267  000C5E  2A09               	incf	(atoi@s+1)^0,f,c
  1268  000C60                     l1214:
  1269  000C60  C008  FFD9         	movff	atoi@s,fsr2l
  1270  000C64  C009  FFDA         	movff	atoi@s+1,fsr2h
  1271  000C68  0E20               	movlw	32
  1272  000C6A  18DE               	xorwf	postinc2,w,c
  1273  000C6C  B4D8               	btfsc	status,2,c
  1274  000C6E  EF3B  F006         	goto	u661
  1275  000C72  EF3D  F006         	goto	u660
  1276  000C76                     u661:
  1277  000C76  EF2E  F006         	goto	l1210
  1278  000C7A                     u660:
  1279  000C7A  0EF7               	movlw	247
  1280  000C7C  6E0A               	movwf	??_atoi^0,c
  1281  000C7E  0EFF               	movlw	255
  1282  000C80  6E0B               	movwf	(??_atoi+1)^0,c
  1283  000C82  C008  FFD9         	movff	atoi@s,fsr2l
  1284  000C86  C009  FFDA         	movff	atoi@s+1,fsr2h
  1285  000C8A  50DF               	movf	indf2,w,c
  1286  000C8C  6E0C               	movwf	(??_atoi+2)^0,c
  1287  000C8E  6A0D               	clrf	(??_atoi+3)^0,c
  1288  000C90  500A               	movf	??_atoi^0,w,c
  1289  000C92  260C               	addwf	(??_atoi+2)^0,f,c
  1290  000C94  500B               	movf	(??_atoi+1)^0,w,c
  1291  000C96  220D               	addwfc	(??_atoi+3)^0,f,c
  1292  000C98  500D               	movf	(??_atoi+3)^0,w,c
  1293  000C9A  E109               	bnz	u670
  1294  000C9C  0E05               	movlw	5
  1295  000C9E  5C0C               	subwf	(??_atoi+2)^0,w,c
  1296  000CA0  A0D8               	btfss	status,0,c
  1297  000CA2  EF55  F006         	goto	u671
  1298  000CA6  EF57  F006         	goto	u670
  1299  000CAA                     u671:
  1300  000CAA  EF2E  F006         	goto	l1210
  1301  000CAE                     u670:
  1302  000CAE  EF61  F006         	goto	l1222
  1303  000CB2                     l1218:
  1304  000CB2  0E00               	movlw	0
  1305  000CB4  6E0F               	movwf	(atoi@neg+1)^0,c
  1306  000CB6  0E01               	movlw	1
  1307  000CB8  6E0E               	movwf	atoi@neg^0,c
  1308  000CBA                     l1220:
  1309  000CBA  4A08               	infsnz	atoi@s^0,f,c
  1310  000CBC  2A09               	incf	(atoi@s+1)^0,f,c
  1311  000CBE  EF96  F006         	goto	l1230
  1312  000CC2                     l1222:
  1313  000CC2  C008  FFD9         	movff	atoi@s,fsr2l
  1314  000CC6  C009  FFDA         	movff	atoi@s+1,fsr2h
  1315  000CCA  50DF               	movf	indf2,w,c
  1316  000CCC  6E0A               	movwf	??_atoi^0,c
  1317  000CCE  6A0B               	clrf	(??_atoi+1)^0,c
  1318                           
  1319                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1320                           ; Switch size 1, requested type "simple"
  1321                           ; Number of cases is 1, Range of values is 0 to 0
  1322                           ; switch strategies available:
  1323                           ; Name         Instructions Cycles
  1324                           ; simple_byte            4     3 (average)
  1325                           ;	Chosen strategy is simple_byte
  1326  000CD0  500B               	movf	(??_atoi+1)^0,w,c
  1327  000CD2  0A00               	xorlw	0	; case 0
  1328  000CD4  B4D8               	btfsc	status,2,c
  1329  000CD6  EF6F  F006         	goto	l1344
  1330  000CDA  EF96  F006         	goto	l1230
  1331  000CDE                     l1344:
  1332                           
  1333                           ; Switch size 1, requested type "simple"
  1334                           ; Number of cases is 2, Range of values is 43 to 45
  1335                           ; switch strategies available:
  1336                           ; Name         Instructions Cycles
  1337                           ; simple_byte            7     4 (average)
  1338                           ;	Chosen strategy is simple_byte
  1339  000CDE  500A               	movf	??_atoi^0,w,c
  1340  000CE0  0A2B               	xorlw	43	; case 43
  1341  000CE2  B4D8               	btfsc	status,2,c
  1342  000CE4  EF5D  F006         	goto	l1220
  1343  000CE8  0A06               	xorlw	6	; case 45
  1344  000CEA  B4D8               	btfsc	status,2,c
  1345  000CEC  EF59  F006         	goto	l1218
  1346  000CF0  EF96  F006         	goto	l1230
  1347  000CF4                     l1224:
  1348  000CF4  C010  F001         	movff	atoi@n,___wmul@multiplier
  1349  000CF8  C011  F002         	movff	atoi@n+1,___wmul@multiplier+1
  1350  000CFC  0E00               	movlw	0
  1351  000CFE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1352  000D00  0E0A               	movlw	10
  1353  000D02  6E03               	movwf	___wmul@multiplicand^0,c
  1354  000D04  EC25  F009         	call	___wmul	;wreg free
  1355  000D08  C008  FFD9         	movff	atoi@s,fsr2l
  1356  000D0C  C009  FFDA         	movff	atoi@s+1,fsr2h
  1357  000D10  50DF               	movf	indf2,w,c
  1358  000D12  6E0A               	movwf	??_atoi^0,c
  1359  000D14  500A               	movf	??_atoi^0,w,c
  1360  000D16  5E01               	subwf	?___wmul^0,f,c
  1361  000D18  0E00               	movlw	0
  1362  000D1A  5A02               	subwfb	(?___wmul+1)^0,f,c
  1363  000D1C  0E30               	movlw	48
  1364  000D1E  2401               	addwf	?___wmul^0,w,c
  1365  000D20  6E10               	movwf	atoi@n^0,c
  1366  000D22  0E00               	movlw	0
  1367  000D24  2002               	addwfc	(?___wmul+1)^0,w,c
  1368  000D26  6E11               	movwf	(atoi@n+1)^0,c
  1369  000D28  EF5D  F006         	goto	l1220
  1370  000D2C                     l1230:
  1371  000D2C  0ED0               	movlw	208
  1372  000D2E  6E0A               	movwf	??_atoi^0,c
  1373  000D30  0EFF               	movlw	255
  1374  000D32  6E0B               	movwf	(??_atoi+1)^0,c
  1375  000D34  C008  FFD9         	movff	atoi@s,fsr2l
  1376  000D38  C009  FFDA         	movff	atoi@s+1,fsr2h
  1377  000D3C  50DF               	movf	indf2,w,c
  1378  000D3E  6E0C               	movwf	(??_atoi+2)^0,c
  1379  000D40  6A0D               	clrf	(??_atoi+3)^0,c
  1380  000D42  500A               	movf	??_atoi^0,w,c
  1381  000D44  260C               	addwf	(??_atoi+2)^0,f,c
  1382  000D46  500B               	movf	(??_atoi+1)^0,w,c
  1383  000D48  220D               	addwfc	(??_atoi+3)^0,f,c
  1384  000D4A  500D               	movf	(??_atoi+3)^0,w,c
  1385  000D4C  E109               	bnz	u680
  1386  000D4E  0E0A               	movlw	10
  1387  000D50  5C0C               	subwf	(??_atoi+2)^0,w,c
  1388  000D52  A0D8               	btfss	status,0,c
  1389  000D54  EFAE  F006         	goto	u681
  1390  000D58  EFB0  F006         	goto	u680
  1391  000D5C                     u681:
  1392  000D5C  EF7A  F006         	goto	l1224
  1393  000D60                     u680:
  1394  000D60  500E               	movf	atoi@neg^0,w,c
  1395  000D62  100F               	iorwf	(atoi@neg+1)^0,w,c
  1396  000D64  A4D8               	btfss	status,2,c
  1397  000D66  EFB7  F006         	goto	u691
  1398  000D6A  EFB9  F006         	goto	u690
  1399  000D6E                     u691:
  1400  000D6E  EFC7  F006         	goto	l794
  1401  000D72                     u690:
  1402  000D72  C010  F00A         	movff	atoi@n,??_atoi
  1403  000D76  C011  F00B         	movff	atoi@n+1,??_atoi+1
  1404  000D7A  1E0A               	comf	??_atoi^0,f,c
  1405  000D7C  1E0B               	comf	(??_atoi+1)^0,f,c
  1406  000D7E  4A0A               	infsnz	??_atoi^0,f,c
  1407  000D80  2A0B               	incf	(??_atoi+1)^0,f,c
  1408  000D82  C00A  F008         	movff	??_atoi,?_atoi
  1409  000D86  C00B  F009         	movff	??_atoi+1,?_atoi+1
  1410  000D8A  EFCB  F006         	goto	l797
  1411  000D8E                     l794:
  1412  000D8E  C010  F008         	movff	atoi@n,?_atoi
  1413  000D92  C011  F009         	movff	atoi@n+1,?_atoi+1
  1414  000D96                     l797:
  1415  000D96  0012               	return		;funcret
  1416  000D98                     __end_of_atoi:
  1417                           	callstack 0
  1418                           
  1419 ;; *************** function _isspace *****************
  1420 ;; Defined at:
  1421 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isspace.c"
  1422 ;; Parameters:    Size  Location     Type
  1423 ;;  c               2    0[COMRAM] int 
  1424 ;; Auto vars:     Size  Location     Type
  1425 ;;		None
  1426 ;; Return value:  Size  Location     Type
  1427 ;;                  2    0[COMRAM] int 
  1428 ;; Registers used:
  1429 ;;		wreg, status,2, status,0
  1430 ;; Tracked objects:
  1431 ;;		On entry : 0/0
  1432 ;;		On exit  : 0/0
  1433 ;;		Unchanged: 0/0
  1434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1435 ;;      Params:         2       0       0       0       0       0       0       0       0
  1436 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1437 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1438 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1439 ;;Total ram usage:        7 bytes
  1440 ;; Hardware stack levels used: 1
  1441 ;; This function calls:
  1442 ;;		Nothing
  1443 ;; This function is called by:
  1444 ;;		_atoi
  1445 ;; This function uses a non-reentrant model
  1446 ;;
  1447                           
  1448                           	psect	text3
  1449  0011C0                     __ptext3:
  1450                           	callstack 0
  1451  0011C0                     _isspace:
  1452                           	callstack 29
  1453  0011C0  0E01               	movlw	1
  1454  0011C2  6E07               	movwf	_isspace$775^0,c
  1455  0011C4  0E20               	movlw	32
  1456  0011C6  1801               	xorwf	isspace@c^0,w,c
  1457  0011C8  1002               	iorwf	(isspace@c+1)^0,w,c
  1458  0011CA  B4D8               	btfsc	status,2,c
  1459  0011CC  EFEA  F008         	goto	u441
  1460  0011D0  EFEC  F008         	goto	u440
  1461  0011D4                     u441:
  1462  0011D4  EF05  F009         	goto	l1146
  1463  0011D8                     u440:
  1464  0011D8  0EF7               	movlw	247
  1465  0011DA  6E03               	movwf	??_isspace^0,c
  1466  0011DC  0EFF               	movlw	255
  1467  0011DE  6E04               	movwf	(??_isspace+1)^0,c
  1468  0011E0  C001  F005         	movff	isspace@c,??_isspace+2
  1469  0011E4  C002  F006         	movff	isspace@c+1,??_isspace+3
  1470  0011E8  5003               	movf	??_isspace^0,w,c
  1471  0011EA  2605               	addwf	(??_isspace+2)^0,f,c
  1472  0011EC  5004               	movf	(??_isspace+1)^0,w,c
  1473  0011EE  2206               	addwfc	(??_isspace+3)^0,f,c
  1474  0011F0  5006               	movf	(??_isspace+3)^0,w,c
  1475  0011F2  E109               	bnz	u450
  1476  0011F4  0E05               	movlw	5
  1477  0011F6  5C05               	subwf	(??_isspace+2)^0,w,c
  1478  0011F8  A0D8               	btfss	status,0,c
  1479  0011FA  EF01  F009         	goto	u451
  1480  0011FE  EF03  F009         	goto	u450
  1481  001202                     u451:
  1482  001202  EF05  F009         	goto	l1146
  1483  001206                     u450:
  1484  001206  0E00               	movlw	0
  1485  001208  6E07               	movwf	_isspace$775^0,c
  1486  00120A                     l1146:
  1487  00120A  C007  F001         	movff	_isspace$775,?_isspace
  1488  00120E  6A02               	clrf	(?_isspace+1)^0,c
  1489  001210  0012               	return		;funcret
  1490  001212                     __end_of_isspace:
  1491                           	callstack 0
  1492                           
  1493 ;; *************** function _isdigit *****************
  1494 ;; Defined at:
  1495 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isdigit.c"
  1496 ;; Parameters:    Size  Location     Type
  1497 ;;  c               2    0[COMRAM] int 
  1498 ;; Auto vars:     Size  Location     Type
  1499 ;;		None
  1500 ;; Return value:  Size  Location     Type
  1501 ;;                  2    0[COMRAM] int 
  1502 ;; Registers used:
  1503 ;;		wreg, status,2, status,0
  1504 ;; Tracked objects:
  1505 ;;		On entry : 0/0
  1506 ;;		On exit  : 0/0
  1507 ;;		Unchanged: 0/0
  1508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1509 ;;      Params:         2       0       0       0       0       0       0       0       0
  1510 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1511 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1512 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1513 ;;Total ram usage:        6 bytes
  1514 ;; Hardware stack levels used: 1
  1515 ;; This function calls:
  1516 ;;		Nothing
  1517 ;; This function is called by:
  1518 ;;		_atoi
  1519 ;; This function uses a non-reentrant model
  1520 ;;
  1521                           
  1522                           	psect	text4
  1523  001212                     __ptext4:
  1524                           	callstack 0
  1525  001212                     _isdigit:
  1526                           	callstack 29
  1527  001212  0ED0               	movlw	208
  1528  001214  6E03               	movwf	??_isdigit^0,c
  1529  001216  0EFF               	movlw	255
  1530  001218  6E04               	movwf	(??_isdigit+1)^0,c
  1531  00121A  C001  F005         	movff	isdigit@c,??_isdigit+2
  1532  00121E  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  1533  001222  5003               	movf	??_isdigit^0,w,c
  1534  001224  2605               	addwf	(??_isdigit+2)^0,f,c
  1535  001226  5004               	movf	(??_isdigit+1)^0,w,c
  1536  001228  2206               	addwfc	(??_isdigit+3)^0,f,c
  1537  00122A  5006               	movf	(??_isdigit+3)^0,w,c
  1538  00122C  E10A               	bnz	u460
  1539  00122E  0E0A               	movlw	10
  1540  001230  5C05               	subwf	(??_isdigit+2)^0,w,c
  1541  001232  A0D8               	btfss	status,0,c
  1542  001234  EF1E  F009         	goto	u461
  1543  001238  EF21  F009         	goto	u460
  1544  00123C                     u461:
  1545  00123C  0E01               	movlw	1
  1546  00123E  EF22  F009         	goto	u470
  1547  001242                     u460:
  1548  001242  0E00               	movlw	0
  1549  001244                     u470:
  1550  001244  6E01               	movwf	?_isdigit^0,c
  1551  001246  6A02               	clrf	(?_isdigit+1)^0,c
  1552  001248  0012               	return		;funcret
  1553  00124A                     __end_of_isdigit:
  1554                           	callstack 0
  1555                           
  1556 ;; *************** function ___wmul *****************
  1557 ;; Defined at:
  1558 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  1559 ;; Parameters:    Size  Location     Type
  1560 ;;  multiplier      2    0[COMRAM] unsigned int 
  1561 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1562 ;; Auto vars:     Size  Location     Type
  1563 ;;  product         2    4[COMRAM] unsigned int 
  1564 ;; Return value:  Size  Location     Type
  1565 ;;                  2    0[COMRAM] unsigned int 
  1566 ;; Registers used:
  1567 ;;		wreg, status,2, status,0, prodl, prodh
  1568 ;; Tracked objects:
  1569 ;;		On entry : 0/0
  1570 ;;		On exit  : 0/0
  1571 ;;		Unchanged: 0/0
  1572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1573 ;;      Params:         4       0       0       0       0       0       0       0       0
  1574 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1575 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1576 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1577 ;;Total ram usage:        6 bytes
  1578 ;; Hardware stack levels used: 1
  1579 ;; This function calls:
  1580 ;;		Nothing
  1581 ;; This function is called by:
  1582 ;;		_atoi
  1583 ;; This function uses a non-reentrant model
  1584 ;;
  1585                           
  1586                           	psect	text5
  1587  00124A                     __ptext5:
  1588                           	callstack 0
  1589  00124A                     ___wmul:
  1590                           	callstack 29
  1591  00124A  5001               	movf	___wmul@multiplier^0,w,c
  1592  00124C  0203               	mulwf	___wmul@multiplicand^0,c
  1593  00124E  CFF3 F005          	movff	prodl,___wmul@product
  1594  001252  CFF4 F006          	movff	prodh,___wmul@product+1
  1595  001256  5001               	movf	___wmul@multiplier^0,w,c
  1596  001258  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  1597  00125A  50F3               	movf	243,w,c
  1598  00125C  2606               	addwf	(___wmul@product+1)^0,f,c
  1599  00125E  5002               	movf	(___wmul@multiplier+1)^0,w,c
  1600  001260  0203               	mulwf	___wmul@multiplicand^0,c
  1601  001262  50F3               	movf	243,w,c
  1602  001264  2606               	addwf	(___wmul@product+1)^0,f,c
  1603  001266  C005  F001         	movff	___wmul@product,?___wmul
  1604  00126A  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1605  00126E  0012               	return		;funcret
  1606  001270                     __end_of___wmul:
  1607                           	callstack 0
  1608                           
  1609 ;; *************** function _UART_Write *****************
  1610 ;; Defined at:
  1611 ;;		line 44 in file "./uart.h"
  1612 ;; Parameters:    Size  Location     Type
  1613 ;;  info            2    0[COMRAM] PTR unsigned char 
  1614 ;;		 -> STR_26(10), STR_25(14), STR_23(11), STR_22(11), 
  1615 ;;		 -> STR_21(11), STR_20(11), STR_19(11), STR_18(11), 
  1616 ;;		 -> STR_17(11), STR_16(11), STR_15(11), STR_14(10), 
  1617 ;;		 -> STR_12(11), STR_11(10), STR_10(10), STR_9(10), 
  1618 ;;		 -> STR_8(10), STR_7(10), STR_6(10), STR_5(10), 
  1619 ;;		 -> STR_4(10), STR_3(10), main@temp(10), STR_1(9), 
  1620 ;; Auto vars:     Size  Location     Type
  1621 ;;  i               2    4[COMRAM] int 
  1622 ;; Return value:  Size  Location     Type
  1623 ;;                  1    wreg      void 
  1624 ;; Registers used:
  1625 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1626 ;; Tracked objects:
  1627 ;;		On entry : 0/0
  1628 ;;		On exit  : 0/0
  1629 ;;		Unchanged: 0/0
  1630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1631 ;;      Params:         2       0       0       0       0       0       0       0       0
  1632 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1633 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1634 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1635 ;;Total ram usage:        6 bytes
  1636 ;; Hardware stack levels used: 1
  1637 ;; Hardware stack levels required when called: 1
  1638 ;; This function calls:
  1639 ;;		_UART_TX_Busy
  1640 ;; This function is called by:
  1641 ;;		_main
  1642 ;; This function uses a non-reentrant model
  1643 ;;
  1644                           
  1645                           	psect	text6
  1646  0010A2                     __ptext6:
  1647                           	callstack 0
  1648  0010A2                     _UART_Write:
  1649                           	callstack 29
  1650  0010A2                     
  1651                           ;./uart.h: 45:      int i;;./uart.h: 46:      for (i = 0; info[i] != '\0'; i++) {
  1652  0010A2  0E00               	movlw	0
  1653  0010A4  6E06               	movwf	(UART_Write@i+1)^0,c
  1654  0010A6  0E00               	movlw	0
  1655  0010A8  6E05               	movwf	UART_Write@i^0,c
  1656  0010AA  EF7A  F008         	goto	l1174
  1657  0010AE                     l1168:
  1658                           
  1659                           ;./uart.h: 47:           TXREG = info[i];
  1660  0010AE  5005               	movf	UART_Write@i^0,w,c
  1661  0010B0  2401               	addwf	UART_Write@info^0,w,c
  1662  0010B2  6E03               	movwf	??_UART_Write^0,c
  1663  0010B4  5006               	movf	(UART_Write@i+1)^0,w,c
  1664  0010B6  2002               	addwfc	(UART_Write@info+1)^0,w,c
  1665  0010B8  6E04               	movwf	(??_UART_Write+1)^0,c
  1666  0010BA  C003  FFF6         	movff	??_UART_Write,tblptrl
  1667  0010BE  C004  FFF7         	movff	??_UART_Write+1,tblptrh
  1668  0010C2  6AF8               	clrf	tblptru,c
  1669  0010C4  0E07               	movlw	(high __ramtop+-1)
  1670  0010C6  64F7               	cpfsgt	tblptrh,c
  1671  0010C8  D003               	bra	u547
  1672  0010CA  0008               	tblrd		*
  1673  0010CC  50F5               	movf	tablat,w,c
  1674  0010CE  D005               	bra	u540
  1675  0010D0                     u547:
  1676  0010D0  CFF6 FFE9          	movff	tblptrl,fsr0l
  1677  0010D4  CFF7 FFEA          	movff	tblptrh,fsr0h
  1678  0010D8  50EF               	movf	indf0,w,c
  1679  0010DA                     u540:
  1680  0010DA  6EAD               	movwf	173,c	;volatile
  1681  0010DC                     l1170:
  1682  0010DC  EC38  F009         	call	_UART_TX_Busy	;wreg free
  1683  0010E0  0900               	iorlw	0
  1684  0010E2  A4D8               	btfss	status,2,c
  1685  0010E4  EF76  F008         	goto	u551
  1686  0010E8  EF78  F008         	goto	u550
  1687  0010EC                     u551:
  1688  0010EC  EF6E  F008         	goto	l1170
  1689  0010F0                     u550:
  1690  0010F0                     
  1691                           ;./uart.h: 49:      }
  1692  0010F0  4A05               	infsnz	UART_Write@i^0,f,c
  1693  0010F2  2A06               	incf	(UART_Write@i+1)^0,f,c
  1694  0010F4                     l1174:
  1695  0010F4  5005               	movf	UART_Write@i^0,w,c
  1696  0010F6  2401               	addwf	UART_Write@info^0,w,c
  1697  0010F8  6E03               	movwf	??_UART_Write^0,c
  1698  0010FA  5006               	movf	(UART_Write@i+1)^0,w,c
  1699  0010FC  2002               	addwfc	(UART_Write@info+1)^0,w,c
  1700  0010FE  6E04               	movwf	(??_UART_Write+1)^0,c
  1701  001100  C003  FFF6         	movff	??_UART_Write,tblptrl
  1702  001104  C004  FFF7         	movff	??_UART_Write+1,tblptrh
  1703  001108  6AF8               	clrf	tblptru,c
  1704  00110A  0E07               	movlw	(high __ramtop+-1)
  1705  00110C  64F7               	cpfsgt	tblptrh,c
  1706  00110E  D003               	bra	u567
  1707  001110  0008               	tblrd		*
  1708  001112  50F5               	movf	tablat,w,c
  1709  001114  D005               	bra	u560
  1710  001116                     u567:
  1711  001116  CFF6 FFE9          	movff	tblptrl,fsr0l
  1712  00111A  CFF7 FFEA          	movff	tblptrh,fsr0h
  1713  00111E  50EF               	movf	indf0,w,c
  1714  001120                     u560:
  1715  001120  0900               	iorlw	0
  1716  001122  A4D8               	btfss	status,2,c
  1717  001124  EF96  F008         	goto	u571
  1718  001128  EF98  F008         	goto	u570
  1719  00112C                     u571:
  1720  00112C  EF57  F008         	goto	l1168
  1721  001130                     u570:
  1722  001130  0012               	return		;funcret
  1723  001132                     __end_of_UART_Write:
  1724                           	callstack 0
  1725                           
  1726 ;; *************** function _UART_TX_Busy *****************
  1727 ;; Defined at:
  1728 ;;		line 36 in file "./uart.h"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;		None
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;		None
  1733 ;; Return value:  Size  Location     Type
  1734 ;;                  1    wreg      unsigned char 
  1735 ;; Registers used:
  1736 ;;		wreg
  1737 ;; Tracked objects:
  1738 ;;		On entry : 0/0
  1739 ;;		On exit  : 0/0
  1740 ;;		Unchanged: 0/0
  1741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1742 ;;      Params:         0       0       0       0       0       0       0       0       0
  1743 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1744 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1745 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1746 ;;Total ram usage:        0 bytes
  1747 ;; Hardware stack levels used: 1
  1748 ;; This function calls:
  1749 ;;		Nothing
  1750 ;; This function is called by:
  1751 ;;		_UART_Write
  1752 ;; This function uses a non-reentrant model
  1753 ;;
  1754                           
  1755                           	psect	text7
  1756  001270                     __ptext7:
  1757                           	callstack 0
  1758  001270                     _UART_TX_Busy:
  1759                           	callstack 29
  1760  001270                     
  1761                           ;./uart.h: 37:      return (char) !TXSTAbits.TRMT;
  1762  001270  A2AC               	btfss	172,1,c	;volatile
  1763  001272  EF3D  F009         	goto	u11
  1764  001276  EF40  F009         	goto	u10
  1765  00127A                     u11:
  1766  00127A  0E01               	movlw	1
  1767  00127C  EF41  F009         	goto	u20
  1768  001280                     u10:
  1769  001280  0E00               	movlw	0
  1770  001282                     u20:
  1771  001282  0012               	return		;funcret
  1772  001284                     __end_of_UART_TX_Busy:
  1773                           	callstack 0
  1774                           
  1775 ;; *************** function _UART_Read *****************
  1776 ;; Defined at:
  1777 ;;		line 52 in file "./uart.h"
  1778 ;; Parameters:    Size  Location     Type
  1779 ;;  info            2    0[COMRAM] PTR unsigned char 
  1780 ;;		 -> main@temp(10), 
  1781 ;; Auto vars:     Size  Location     Type
  1782 ;;  i               2    4[COMRAM] unsigned int 
  1783 ;; Return value:  Size  Location     Type
  1784 ;;                  1    wreg      void 
  1785 ;; Registers used:
  1786 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1787 ;; Tracked objects:
  1788 ;;		On entry : 0/0
  1789 ;;		On exit  : 0/0
  1790 ;;		Unchanged: 0/0
  1791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1792 ;;      Params:         2       0       0       0       0       0       0       0       0
  1793 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1794 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1795 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1796 ;;Total ram usage:        6 bytes
  1797 ;; Hardware stack levels used: 1
  1798 ;; Hardware stack levels required when called: 1
  1799 ;; This function calls:
  1800 ;;		_UART_RX_Ready
  1801 ;; This function is called by:
  1802 ;;		_main
  1803 ;; This function uses a non-reentrant model
  1804 ;;
  1805                           
  1806                           	psect	text8
  1807  001132                     __ptext8:
  1808                           	callstack 0
  1809  001132                     _UART_Read:
  1810                           	callstack 29
  1811  001132                     
  1812                           ;./uart.h: 53:      unsigned int i = 0;
  1813  001132  0E00               	movlw	0
  1814  001134  6E06               	movwf	(UART_Read@i+1)^0,c
  1815  001136  0E00               	movlw	0
  1816  001138  6E05               	movwf	UART_Read@i^0,c
  1817  00113A                     l1178:
  1818  00113A  EC47  F009         	call	_UART_RX_Ready	;wreg free
  1819  00113E  0900               	iorlw	0
  1820  001140  B4D8               	btfsc	status,2,c
  1821  001142  EFA5  F008         	goto	u581
  1822  001146  EFA7  F008         	goto	u580
  1823  00114A                     u581:
  1824  00114A  EF9D  F008         	goto	l1178
  1825  00114E                     u580:
  1826  00114E                     
  1827                           ;./uart.h: 56:           info[i] = RCREG;
  1828  00114E  5005               	movf	UART_Read@i^0,w,c
  1829  001150  2401               	addwf	UART_Read@info^0,w,c
  1830  001152  6ED9               	movwf	fsr2l,c
  1831  001154  5006               	movf	(UART_Read@i+1)^0,w,c
  1832  001156  2002               	addwfc	(UART_Read@info+1)^0,w,c
  1833  001158  6EDA               	movwf	fsr2h,c
  1834  00115A  CFAE FFDF          	movff	4014,indf2	;volatile
  1835                           
  1836                           ;./uart.h: 58:           if (info[i] != '\r' && info[i] != '\n')
  1837  00115E  5005               	movf	UART_Read@i^0,w,c
  1838  001160  2401               	addwf	UART_Read@info^0,w,c
  1839  001162  6ED9               	movwf	fsr2l,c
  1840  001164  5006               	movf	(UART_Read@i+1)^0,w,c
  1841  001166  2002               	addwfc	(UART_Read@info+1)^0,w,c
  1842  001168  6EDA               	movwf	fsr2h,c
  1843  00116A  0E0D               	movlw	13
  1844  00116C  18DE               	xorwf	postinc2,w,c
  1845  00116E  B4D8               	btfsc	status,2,c
  1846  001170  EFBC  F008         	goto	u591
  1847  001174  EFBE  F008         	goto	u590
  1848  001178                     u591:
  1849  001178  EFD1  F008         	goto	l1186
  1850  00117C                     u590:
  1851  00117C  5005               	movf	UART_Read@i^0,w,c
  1852  00117E  2401               	addwf	UART_Read@info^0,w,c
  1853  001180  6ED9               	movwf	fsr2l,c
  1854  001182  5006               	movf	(UART_Read@i+1)^0,w,c
  1855  001184  2002               	addwfc	(UART_Read@info+1)^0,w,c
  1856  001186  6EDA               	movwf	fsr2h,c
  1857  001188  0E0A               	movlw	10
  1858  00118A  18DE               	xorwf	postinc2,w,c
  1859  00118C  B4D8               	btfsc	status,2,c
  1860  00118E  EFCB  F008         	goto	u601
  1861  001192  EFCD  F008         	goto	u600
  1862  001196                     u601:
  1863  001196  EFD1  F008         	goto	l1186
  1864  00119A                     u600:
  1865  00119A                     
  1866                           ;./uart.h: 59:               i++;
  1867  00119A  4A05               	infsnz	UART_Read@i^0,f,c
  1868  00119C  2A06               	incf	(UART_Read@i+1)^0,f,c
  1869  00119E  EF9D  F008         	goto	l1178
  1870  0011A2                     l1186:
  1871                           
  1872                           ;./uart.h: 61:                info[i+1]='\0';
  1873  0011A2  5005               	movf	UART_Read@i^0,w,c
  1874  0011A4  2401               	addwf	UART_Read@info^0,w,c
  1875  0011A6  6E03               	movwf	??_UART_Read^0,c
  1876  0011A8  5006               	movf	(UART_Read@i+1)^0,w,c
  1877  0011AA  2002               	addwfc	(UART_Read@info+1)^0,w,c
  1878  0011AC  6E04               	movwf	(??_UART_Read+1)^0,c
  1879  0011AE  0E01               	movlw	1
  1880  0011B0  2403               	addwf	??_UART_Read^0,w,c
  1881  0011B2  6ED9               	movwf	fsr2l,c
  1882  0011B4  0E00               	movlw	0
  1883  0011B6  2004               	addwfc	(??_UART_Read+1)^0,w,c
  1884  0011B8  6EDA               	movwf	fsr2h,c
  1885  0011BA  0E00               	movlw	0
  1886  0011BC  6EDF               	movwf	indf2,c
  1887  0011BE  0012               	return		;funcret
  1888  0011C0                     __end_of_UART_Read:
  1889                           	callstack 0
  1890                           
  1891 ;; *************** function _UART_RX_Ready *****************
  1892 ;; Defined at:
  1893 ;;		line 40 in file "./uart.h"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;		None
  1896 ;; Auto vars:     Size  Location     Type
  1897 ;;		None
  1898 ;; Return value:  Size  Location     Type
  1899 ;;                  1    wreg      unsigned char 
  1900 ;; Registers used:
  1901 ;;		wreg
  1902 ;; Tracked objects:
  1903 ;;		On entry : 0/0
  1904 ;;		On exit  : 0/0
  1905 ;;		Unchanged: 0/0
  1906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1907 ;;      Params:         0       0       0       0       0       0       0       0       0
  1908 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1909 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1910 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1911 ;;Total ram usage:        0 bytes
  1912 ;; Hardware stack levels used: 1
  1913 ;; This function calls:
  1914 ;;		Nothing
  1915 ;; This function is called by:
  1916 ;;		_UART_Read
  1917 ;; This function uses a non-reentrant model
  1918 ;;
  1919                           
  1920                           	psect	text9
  1921  00128E                     __ptext9:
  1922                           	callstack 0
  1923  00128E                     _UART_RX_Ready:
  1924                           	callstack 29
  1925  00128E                     
  1926                           ;./uart.h: 41:      return (char) RCIF;
  1927  00128E  0E00               	movlw	0
  1928  001290  BA9E               	btfsc	3998,5,c	;volatile
  1929  001292  0E01               	movlw	1
  1930  001294  0012               	return		;funcret
  1931  001296                     __end_of_UART_RX_Ready:
  1932                           	callstack 0
  1933                           
  1934 ;; *************** function _UART_Open *****************
  1935 ;; Defined at:
  1936 ;;		line 8 in file "./uart.h"
  1937 ;; Parameters:    Size  Location     Type
  1938 ;;  baudrate        4   14[COMRAM] const long 
  1939 ;; Auto vars:     Size  Location     Type
  1940 ;;  x               2   26[COMRAM] unsigned int 
  1941 ;; Return value:  Size  Location     Type
  1942 ;;                  1    wreg      void 
  1943 ;; Registers used:
  1944 ;;		wreg, status,2, status,0, cstack
  1945 ;; Tracked objects:
  1946 ;;		On entry : 0/0
  1947 ;;		On exit  : 0/0
  1948 ;;		Unchanged: 0/0
  1949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1950 ;;      Params:         4       0       0       0       0       0       0       0       0
  1951 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1952 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1953 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1954 ;;Total ram usage:       14 bytes
  1955 ;; Hardware stack levels used: 1
  1956 ;; Hardware stack levels required when called: 1
  1957 ;; This function calls:
  1958 ;;		___aldiv
  1959 ;; This function is called by:
  1960 ;;		_main
  1961 ;; This function uses a non-reentrant model
  1962 ;;
  1963                           
  1964                           	psect	text10
  1965  000D98                     __ptext10:
  1966                           	callstack 0
  1967  000D98                     _UART_Open:
  1968                           	callstack 29
  1969  000D98                     
  1970                           ;./uart.h: 9:      unsigned int x;;./uart.h: 10:      x = (unsigned int)((4000000 - baud
      +                          rate * 64) / (baudrate * 64));
  1971  000D98  C00F  F013         	movff	UART_Open@baudrate,??_UART_Open
  1972  000D9C  C010  F014         	movff	UART_Open@baudrate+1,??_UART_Open+1
  1973  000DA0  C011  F015         	movff	UART_Open@baudrate+2,??_UART_Open+2
  1974  000DA4  C012  F016         	movff	UART_Open@baudrate+3,??_UART_Open+3
  1975  000DA8  0E06               	movlw	6
  1976  000DAA                     u485:
  1977  000DAA  90D8               	bcf	status,0,c
  1978  000DAC  3613               	rlcf	??_UART_Open^0,f,c
  1979  000DAE  3614               	rlcf	(??_UART_Open+1)^0,f,c
  1980  000DB0  3615               	rlcf	(??_UART_Open+2)^0,f,c
  1981  000DB2  3616               	rlcf	(??_UART_Open+3)^0,f,c
  1982  000DB4  2EE8               	decfsz	wreg,f,c
  1983  000DB6  EFD5  F006         	goto	u485
  1984  000DBA  5013               	movf	??_UART_Open^0,w,c
  1985  000DBC  0800               	sublw	0
  1986  000DBE  6E01               	movwf	___aldiv@dividend^0,c
  1987  000DC0  0E09               	movlw	9
  1988  000DC2  5414               	subfwb	(??_UART_Open+1)^0,w,c
  1989  000DC4  6E02               	movwf	(___aldiv@dividend+1)^0,c
  1990  000DC6  0E3D               	movlw	61
  1991  000DC8  5415               	subfwb	(??_UART_Open+2)^0,w,c
  1992  000DCA  6E03               	movwf	(___aldiv@dividend+2)^0,c
  1993  000DCC  0E00               	movlw	0
  1994  000DCE  5416               	subfwb	(??_UART_Open+3)^0,w,c
  1995  000DD0  6E04               	movwf	(___aldiv@dividend+3)^0,c
  1996  000DD2  C00F  F017         	movff	UART_Open@baudrate,??_UART_Open+4
  1997  000DD6  C010  F018         	movff	UART_Open@baudrate+1,??_UART_Open+5
  1998  000DDA  C011  F019         	movff	UART_Open@baudrate+2,??_UART_Open+6
  1999  000DDE  C012  F01A         	movff	UART_Open@baudrate+3,??_UART_Open+7
  2000  000DE2  0E06               	movlw	6
  2001  000DE4                     u495:
  2002  000DE4  90D8               	bcf	status,0,c
  2003  000DE6  3617               	rlcf	(??_UART_Open+4)^0,f,c
  2004  000DE8  3618               	rlcf	(??_UART_Open+5)^0,f,c
  2005  000DEA  3619               	rlcf	(??_UART_Open+6)^0,f,c
  2006  000DEC  361A               	rlcf	(??_UART_Open+7)^0,f,c
  2007  000DEE  2EE8               	decfsz	wreg,f,c
  2008  000DF0  EFF2  F006         	goto	u495
  2009  000DF4  C017  F005         	movff	??_UART_Open+4,___aldiv@divisor
  2010  000DF8  C018  F006         	movff	??_UART_Open+5,___aldiv@divisor+1
  2011  000DFC  C019  F007         	movff	??_UART_Open+6,___aldiv@divisor+2
  2012  000E00  C01A  F008         	movff	??_UART_Open+7,___aldiv@divisor+3
  2013  000E04  EC60  F007         	call	___aldiv	;wreg free
  2014  000E08  C001  F01B         	movff	?___aldiv,UART_Open@x
  2015  000E0C  C002  F01C         	movff	?___aldiv+1,UART_Open@x+1
  2016  000E10                     
  2017                           ;./uart.h: 11:      if (x > 255){
  2018  000E10  041C               	decf	(UART_Open@x+1)^0,w,c
  2019  000E12  A0D8               	btfss	status,0,c
  2020  000E14  EF0E  F007         	goto	u501
  2021  000E18  EF10  F007         	goto	u500
  2022  000E1C                     u501:
  2023  000E1C  EF4D  F007         	goto	l1162
  2024  000E20                     u500:
  2025  000E20                     
  2026                           ;./uart.h: 12:         x = (unsigned int)((4000000 - baudrate * 16) / (baudrate * 16));
  2027  000E20  C00F  F013         	movff	UART_Open@baudrate,??_UART_Open
  2028  000E24  C010  F014         	movff	UART_Open@baudrate+1,??_UART_Open+1
  2029  000E28  C011  F015         	movff	UART_Open@baudrate+2,??_UART_Open+2
  2030  000E2C  C012  F016         	movff	UART_Open@baudrate+3,??_UART_Open+3
  2031  000E30  0E04               	movlw	4
  2032  000E32                     u515:
  2033  000E32  90D8               	bcf	status,0,c
  2034  000E34  3613               	rlcf	??_UART_Open^0,f,c
  2035  000E36  3614               	rlcf	(??_UART_Open+1)^0,f,c
  2036  000E38  3615               	rlcf	(??_UART_Open+2)^0,f,c
  2037  000E3A  3616               	rlcf	(??_UART_Open+3)^0,f,c
  2038  000E3C  2EE8               	decfsz	wreg,f,c
  2039  000E3E  EF19  F007         	goto	u515
  2040  000E42  5013               	movf	??_UART_Open^0,w,c
  2041  000E44  0800               	sublw	0
  2042  000E46  6E01               	movwf	___aldiv@dividend^0,c
  2043  000E48  0E09               	movlw	9
  2044  000E4A  5414               	subfwb	(??_UART_Open+1)^0,w,c
  2045  000E4C  6E02               	movwf	(___aldiv@dividend+1)^0,c
  2046  000E4E  0E3D               	movlw	61
  2047  000E50  5415               	subfwb	(??_UART_Open+2)^0,w,c
  2048  000E52  6E03               	movwf	(___aldiv@dividend+2)^0,c
  2049  000E54  0E00               	movlw	0
  2050  000E56  5416               	subfwb	(??_UART_Open+3)^0,w,c
  2051  000E58  6E04               	movwf	(___aldiv@dividend+3)^0,c
  2052  000E5A  C00F  F017         	movff	UART_Open@baudrate,??_UART_Open+4
  2053  000E5E  C010  F018         	movff	UART_Open@baudrate+1,??_UART_Open+5
  2054  000E62  C011  F019         	movff	UART_Open@baudrate+2,??_UART_Open+6
  2055  000E66  C012  F01A         	movff	UART_Open@baudrate+3,??_UART_Open+7
  2056  000E6A  0E04               	movlw	4
  2057  000E6C                     u525:
  2058  000E6C  90D8               	bcf	status,0,c
  2059  000E6E  3617               	rlcf	(??_UART_Open+4)^0,f,c
  2060  000E70  3618               	rlcf	(??_UART_Open+5)^0,f,c
  2061  000E72  3619               	rlcf	(??_UART_Open+6)^0,f,c
  2062  000E74  361A               	rlcf	(??_UART_Open+7)^0,f,c
  2063  000E76  2EE8               	decfsz	wreg,f,c
  2064  000E78  EF36  F007         	goto	u525
  2065  000E7C  C017  F005         	movff	??_UART_Open+4,___aldiv@divisor
  2066  000E80  C018  F006         	movff	??_UART_Open+5,___aldiv@divisor+1
  2067  000E84  C019  F007         	movff	??_UART_Open+6,___aldiv@divisor+2
  2068  000E88  C01A  F008         	movff	??_UART_Open+7,___aldiv@divisor+3
  2069  000E8C  EC60  F007         	call	___aldiv	;wreg free
  2070  000E90  C001  F01B         	movff	?___aldiv,UART_Open@x
  2071  000E94  C002  F01C         	movff	?___aldiv+1,UART_Open@x+1
  2072  000E98                     
  2073                           ;./uart.h: 13:         TXSTAbits.BRGH = 1;
  2074  000E98  84AC               	bsf	172,2,c	;volatile
  2075  000E9A                     l1162:
  2076                           
  2077                           ;./uart.h: 15:      if (x < 256) {
  2078  000E9A  041C               	decf	(UART_Open@x+1)^0,w,c
  2079  000E9C  B0D8               	btfsc	status,0,c
  2080  000E9E  EF53  F007         	goto	u531
  2081  000EA2  EF55  F007         	goto	u530
  2082  000EA6                     u531:
  2083  000EA6  EF5F  F007         	goto	l33
  2084  000EAA                     u530:
  2085  000EAA                     
  2086                           ;./uart.h: 16:           SPBRG = x;
  2087  000EAA  C01B  FFAF         	movff	UART_Open@x,4015	;volatile
  2088                           
  2089                           ;./uart.h: 17:           TXSTAbits.SYNC = 0;
  2090  000EAE  98AC               	bcf	172,4,c	;volatile
  2091                           
  2092                           ;./uart.h: 18:           RCSTAbits.SPEN = 1;
  2093  000EB0  8EAB               	bsf	171,7,c	;volatile
  2094                           
  2095                           ;./uart.h: 19:           TRISCbits.RC7 = 1;
  2096  000EB2  8E94               	bsf	148,7,c	;volatile
  2097                           
  2098                           ;./uart.h: 20:           TRISCbits.RC6 = 0;
  2099  000EB4  9C94               	bcf	148,6,c	;volatile
  2100                           
  2101                           ;./uart.h: 21:           RCSTAbits.CREN = 1;
  2102  000EB6  88AB               	bsf	171,4,c	;volatile
  2103                           
  2104                           ;./uart.h: 22:           TXSTAbits.TXEN = 1;
  2105  000EB8  8AAC               	bsf	172,5,c	;volatile
  2106                           
  2107                           ;./uart.h: 23:           TXIE = 1;
  2108  000EBA  889D               	bsf	3997,4,c	;volatile
  2109                           
  2110                           ;./uart.h: 24:           RCIE = 1;
  2111  000EBC  8A9D               	bsf	3997,5,c	;volatile
  2112  000EBE                     l33:
  2113  000EBE  0012               	return		;funcret
  2114  000EC0                     __end_of_UART_Open:
  2115                           	callstack 0
  2116                           
  2117 ;; *************** function ___aldiv *****************
  2118 ;; Defined at:
  2119 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aldiv.c"
  2120 ;; Parameters:    Size  Location     Type
  2121 ;;  dividend        4    0[COMRAM] long 
  2122 ;;  divisor         4    4[COMRAM] long 
  2123 ;; Auto vars:     Size  Location     Type
  2124 ;;  quotient        4   10[COMRAM] long 
  2125 ;;  sign            1    9[COMRAM] unsigned char 
  2126 ;;  counter         1    8[COMRAM] unsigned char 
  2127 ;; Return value:  Size  Location     Type
  2128 ;;                  4    0[COMRAM] long 
  2129 ;; Registers used:
  2130 ;;		wreg, status,2, status,0
  2131 ;; Tracked objects:
  2132 ;;		On entry : 0/0
  2133 ;;		On exit  : 0/0
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2136 ;;      Params:         8       0       0       0       0       0       0       0       0
  2137 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2138 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2139 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2140 ;;Total ram usage:       14 bytes
  2141 ;; Hardware stack levels used: 1
  2142 ;; This function calls:
  2143 ;;		Nothing
  2144 ;; This function is called by:
  2145 ;;		_UART_Open
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148                           
  2149                           	psect	text11
  2150  000EC0                     __ptext11:
  2151                           	callstack 0
  2152  000EC0                     ___aldiv:
  2153                           	callstack 29
  2154  000EC0  0E00               	movlw	0
  2155  000EC2  6E0A               	movwf	___aldiv@sign^0,c
  2156  000EC4  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  2157  000EC6  EF69  F007         	goto	u380
  2158  000ECA  EF67  F007         	goto	u381
  2159  000ECE                     u381:
  2160  000ECE  EF73  F007         	goto	l1102
  2161  000ED2                     u380:
  2162  000ED2  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  2163  000ED4  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  2164  000ED6  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  2165  000ED8  6C05               	negf	___aldiv@divisor^0,c
  2166  000EDA  0E00               	movlw	0
  2167  000EDC  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  2168  000EDE  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  2169  000EE0  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  2170  000EE2  0E01               	movlw	1
  2171  000EE4  6E0A               	movwf	___aldiv@sign^0,c
  2172  000EE6                     l1102:
  2173  000EE6  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  2174  000EE8  EF7A  F007         	goto	u390
  2175  000EEC  EF78  F007         	goto	u391
  2176  000EF0                     u391:
  2177  000EF0  EF84  F007         	goto	l1108
  2178  000EF4                     u390:
  2179  000EF4  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  2180  000EF6  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  2181  000EF8  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  2182  000EFA  6C01               	negf	___aldiv@dividend^0,c
  2183  000EFC  0E00               	movlw	0
  2184  000EFE  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  2185  000F00  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  2186  000F02  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  2187  000F04  0E01               	movlw	1
  2188  000F06  1A0A               	xorwf	___aldiv@sign^0,f,c
  2189  000F08                     l1108:
  2190  000F08  0E00               	movlw	0
  2191  000F0A  6E0B               	movwf	___aldiv@quotient^0,c
  2192  000F0C  0E00               	movlw	0
  2193  000F0E  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  2194  000F10  0E00               	movlw	0
  2195  000F12  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  2196  000F14  0E00               	movlw	0
  2197  000F16  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  2198  000F18  5005               	movf	___aldiv@divisor^0,w,c
  2199  000F1A  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  2200  000F1C  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  2201  000F1E  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  2202  000F20  B4D8               	btfsc	status,2,c
  2203  000F22  EF95  F007         	goto	u401
  2204  000F26  EF97  F007         	goto	u400
  2205  000F2A                     u401:
  2206  000F2A  EFCD  F007         	goto	l1130
  2207  000F2E                     u400:
  2208  000F2E  0E01               	movlw	1
  2209  000F30  6E09               	movwf	___aldiv@counter^0,c
  2210  000F32  EFA1  F007         	goto	l1116
  2211  000F36                     l1114:
  2212  000F36  90D8               	bcf	status,0,c
  2213  000F38  3605               	rlcf	___aldiv@divisor^0,f,c
  2214  000F3A  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  2215  000F3C  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  2216  000F3E  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  2217  000F40  2A09               	incf	___aldiv@counter^0,f,c
  2218  000F42                     l1116:
  2219  000F42  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  2220  000F44  EFA6  F007         	goto	u411
  2221  000F48  EFA8  F007         	goto	u410
  2222  000F4C                     u411:
  2223  000F4C  EF9B  F007         	goto	l1114
  2224  000F50                     u410:
  2225  000F50                     l1118:
  2226  000F50  90D8               	bcf	status,0,c
  2227  000F52  360B               	rlcf	___aldiv@quotient^0,f,c
  2228  000F54  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  2229  000F56  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  2230  000F58  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  2231  000F5A  5005               	movf	___aldiv@divisor^0,w,c
  2232  000F5C  5C01               	subwf	___aldiv@dividend^0,w,c
  2233  000F5E  5006               	movf	(___aldiv@divisor+1)^0,w,c
  2234  000F60  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  2235  000F62  5007               	movf	(___aldiv@divisor+2)^0,w,c
  2236  000F64  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  2237  000F66  5008               	movf	(___aldiv@divisor+3)^0,w,c
  2238  000F68  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  2239  000F6A  A0D8               	btfss	status,0,c
  2240  000F6C  EFBA  F007         	goto	u421
  2241  000F70  EFBC  F007         	goto	u420
  2242  000F74                     u421:
  2243  000F74  EFC5  F007         	goto	l1126
  2244  000F78                     u420:
  2245  000F78  5005               	movf	___aldiv@divisor^0,w,c
  2246  000F7A  5E01               	subwf	___aldiv@dividend^0,f,c
  2247  000F7C  5006               	movf	(___aldiv@divisor+1)^0,w,c
  2248  000F7E  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  2249  000F80  5007               	movf	(___aldiv@divisor+2)^0,w,c
  2250  000F82  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  2251  000F84  5008               	movf	(___aldiv@divisor+3)^0,w,c
  2252  000F86  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  2253  000F88  800B               	bsf	___aldiv@quotient^0,0,c
  2254  000F8A                     l1126:
  2255  000F8A  90D8               	bcf	status,0,c
  2256  000F8C  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  2257  000F8E  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  2258  000F90  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  2259  000F92  3205               	rrcf	___aldiv@divisor^0,f,c
  2260  000F94  2E09               	decfsz	___aldiv@counter^0,f,c
  2261  000F96  EFA8  F007         	goto	l1118
  2262  000F9A                     l1130:
  2263  000F9A  500A               	movf	___aldiv@sign^0,w,c
  2264  000F9C  B4D8               	btfsc	status,2,c
  2265  000F9E  EFD3  F007         	goto	u431
  2266  000FA2  EFD5  F007         	goto	u430
  2267  000FA6                     u431:
  2268  000FA6  EFDD  F007         	goto	l1134
  2269  000FAA                     u430:
  2270  000FAA  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  2271  000FAC  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  2272  000FAE  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  2273  000FB0  6C0B               	negf	___aldiv@quotient^0,c
  2274  000FB2  0E00               	movlw	0
  2275  000FB4  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  2276  000FB6  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  2277  000FB8  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  2278  000FBA                     l1134:
  2279  000FBA  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  2280  000FBE  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  2281  000FC2  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  2282  000FC6  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  2283  000FCA  0012               	return		;funcret
  2284  000FCC                     __end_of___aldiv:
  2285                           	callstack 0
  2286                           
  2287 ;; *************** function _UART_Close *****************
  2288 ;; Defined at:
  2289 ;;		line 28 in file "./uart.h"
  2290 ;; Parameters:    Size  Location     Type
  2291 ;;		None
  2292 ;; Auto vars:     Size  Location     Type
  2293 ;;		None
  2294 ;; Return value:  Size  Location     Type
  2295 ;;                  1    wreg      void 
  2296 ;; Registers used:
  2297 ;;		None
  2298 ;; Tracked objects:
  2299 ;;		On entry : 0/0
  2300 ;;		On exit  : 0/0
  2301 ;;		Unchanged: 0/0
  2302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2303 ;;      Params:         0       0       0       0       0       0       0       0       0
  2304 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2305 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2306 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2307 ;;Total ram usage:        0 bytes
  2308 ;; Hardware stack levels used: 1
  2309 ;; This function calls:
  2310 ;;		Nothing
  2311 ;; This function is called by:
  2312 ;;		_main
  2313 ;; This function uses a non-reentrant model
  2314 ;;
  2315                           
  2316                           	psect	text12
  2317  001296                     __ptext12:
  2318                           	callstack 0
  2319  001296                     _UART_Close:
  2320                           	callstack 30
  2321  001296                     
  2322                           ;./uart.h: 29:      RCSTAbits.SPEN = 0;
  2323  001296  9EAB               	bcf	171,7,c	;volatile
  2324  001298  0012               	return		;funcret
  2325  00129A                     __end_of_UART_Close:
  2326                           	callstack 0
  2327                           
  2328                           	psect	rparam
  2329  0000                     
  2330                           	psect	idloc
  2331                           
  2332                           ;Config register IDLOC0 @ 0x200000
  2333                           ;	unspecified, using default values
  2334  200000                     	org	2097152
  2335  200000  FF                 	db	255
  2336                           
  2337                           ;Config register IDLOC1 @ 0x200001
  2338                           ;	unspecified, using default values
  2339  200001                     	org	2097153
  2340  200001  FF                 	db	255
  2341                           
  2342                           ;Config register IDLOC2 @ 0x200002
  2343                           ;	unspecified, using default values
  2344  200002                     	org	2097154
  2345  200002  FF                 	db	255
  2346                           
  2347                           ;Config register IDLOC3 @ 0x200003
  2348                           ;	unspecified, using default values
  2349  200003                     	org	2097155
  2350  200003  FF                 	db	255
  2351                           
  2352                           ;Config register IDLOC4 @ 0x200004
  2353                           ;	unspecified, using default values
  2354  200004                     	org	2097156
  2355  200004  FF                 	db	255
  2356                           
  2357                           ;Config register IDLOC5 @ 0x200005
  2358                           ;	unspecified, using default values
  2359  200005                     	org	2097157
  2360  200005  FF                 	db	255
  2361                           
  2362                           ;Config register IDLOC6 @ 0x200006
  2363                           ;	unspecified, using default values
  2364  200006                     	org	2097158
  2365  200006  FF                 	db	255
  2366                           
  2367                           ;Config register IDLOC7 @ 0x200007
  2368                           ;	unspecified, using default values
  2369  200007                     	org	2097159
  2370  200007  FF                 	db	255
  2371                           
  2372                           	psect	config
  2373                           
  2374                           ;Config register CONFIG1L @ 0x300000
  2375                           ;	PLL Prescaler Selection bits
  2376                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  2377                           ;	System Clock Postscaler Selection bits
  2378                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  2379                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2380                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  2381  300000                     	org	3145728
  2382  300000  00                 	db	0
  2383                           
  2384                           ;Config register CONFIG1H @ 0x300001
  2385                           ;	Oscillator Selection bits
  2386                           ;	FOSC = HS, HS oscillator (HS)
  2387                           ;	Fail-Safe Clock Monitor Enable bit
  2388                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2389                           ;	Internal/External Oscillator Switchover bit
  2390                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2391  300001                     	org	3145729
  2392  300001  0C                 	db	12
  2393                           
  2394                           ;Config register CONFIG2L @ 0x300002
  2395                           ;	Power-up Timer Enable bit
  2396                           ;	PWRT = OFF, PWRT disabled
  2397                           ;	Brown-out Reset Enable bits
  2398                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  2399                           ;	Brown-out Reset Voltage bits
  2400                           ;	BORV = 3, Minimum setting 2.05V
  2401                           ;	USB Voltage Regulator Enable bit
  2402                           ;	VREGEN = OFF, USB voltage regulator disabled
  2403  300002                     	org	3145730
  2404  300002  19                 	db	25
  2405                           
  2406                           ;Config register CONFIG2H @ 0x300003
  2407                           ;	Watchdog Timer Enable bit
  2408                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2409                           ;	Watchdog Timer Postscale Select bits
  2410                           ;	WDTPS = 32768, 1:32768
  2411  300003                     	org	3145731
  2412  300003  1E                 	db	30
  2413                           
  2414                           ; Padding undefined space
  2415  300004                     	org	3145732
  2416  300004  FF                 	db	255
  2417                           
  2418                           ;Config register CONFIG3H @ 0x300005
  2419                           ;	CCP2 MUX bit
  2420                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  2421                           ;	PORTB A/D Enable bit
  2422                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2423                           ;	Low-Power Timer 1 Oscillator Enable bit
  2424                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2425                           ;	MCLR Pin Enable bit
  2426                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2427  300005                     	org	3145733
  2428  300005  81                 	db	129
  2429                           
  2430                           ;Config register CONFIG4L @ 0x300006
  2431                           ;	Stack Full/Underflow Reset Enable bit
  2432                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  2433                           ;	Single-Supply ICSP Enable bit
  2434                           ;	LVP = OFF, Single-Supply ICSP disabled
  2435                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2436                           ;	ICPRT = OFF, ICPORT disabled
  2437                           ;	Extended Instruction Set Enable bit
  2438                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2439                           ;	Background Debugger Enable bit
  2440                           ;	DEBUG = 0x1, unprogrammed default
  2441  300006                     	org	3145734
  2442  300006  80                 	db	128
  2443                           
  2444                           ; Padding undefined space
  2445  300007                     	org	3145735
  2446  300007  FF                 	db	255
  2447                           
  2448                           ;Config register CONFIG5L @ 0x300008
  2449                           ;	Code Protection bit
  2450                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  2451                           ;	Code Protection bit
  2452                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  2453                           ;	Code Protection bit
  2454                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  2455                           ;	Code Protection bit
  2456                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  2457  300008                     	org	3145736
  2458  300008  0F                 	db	15
  2459                           
  2460                           ;Config register CONFIG5H @ 0x300009
  2461                           ;	Boot Block Code Protection bit
  2462                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  2463                           ;	Data EEPROM Code Protection bit
  2464                           ;	CPD = OFF, Data EEPROM is not code-protected
  2465  300009                     	org	3145737
  2466  300009  C0                 	db	192
  2467                           
  2468                           ;Config register CONFIG6L @ 0x30000A
  2469                           ;	Write Protection bit
  2470                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  2471                           ;	Write Protection bit
  2472                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  2473                           ;	Write Protection bit
  2474                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  2475                           ;	Write Protection bit
  2476                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  2477  30000A                     	org	3145738
  2478  30000A  0F                 	db	15
  2479                           
  2480                           ;Config register CONFIG6H @ 0x30000B
  2481                           ;	Configuration Register Write Protection bit
  2482                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  2483                           ;	Boot Block Write Protection bit
  2484                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  2485                           ;	Data EEPROM Write Protection bit
  2486                           ;	WRTD = OFF, Data EEPROM is not write-protected
  2487  30000B                     	org	3145739
  2488  30000B  E0                 	db	224
  2489                           
  2490                           ;Config register CONFIG7L @ 0x30000C
  2491                           ;	Table Read Protection bit
  2492                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2493                           ;	Table Read Protection bit
  2494                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2495                           ;	Table Read Protection bit
  2496                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2497                           ;	Table Read Protection bit
  2498                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2499  30000C                     	org	3145740
  2500  30000C  0F                 	db	15
  2501                           
  2502                           ;Config register CONFIG7H @ 0x30000D
  2503                           ;	Boot Block Table Read Protection bit
  2504                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  2505  30000D                     	org	3145741
  2506  30000D  40                 	db	64
  2507                           tosu	equ	0xFFF
  2508                           tosh	equ	0xFFE
  2509                           tosl	equ	0xFFD
  2510                           stkptr	equ	0xFFC
  2511                           pclatu	equ	0xFFB
  2512                           pclath	equ	0xFFA
  2513                           pcl	equ	0xFF9
  2514                           tblptru	equ	0xFF8
  2515                           tblptrh	equ	0xFF7
  2516                           tblptrl	equ	0xFF6
  2517                           tablat	equ	0xFF5
  2518                           prodh	equ	0xFF4
  2519                           prodl	equ	0xFF3
  2520                           indf0	equ	0xFEF
  2521                           postinc0	equ	0xFEE
  2522                           postdec0	equ	0xFED
  2523                           preinc0	equ	0xFEC
  2524                           plusw0	equ	0xFEB
  2525                           fsr0h	equ	0xFEA
  2526                           fsr0l	equ	0xFE9
  2527                           wreg	equ	0xFE8
  2528                           indf1	equ	0xFE7
  2529                           postinc1	equ	0xFE6
  2530                           postdec1	equ	0xFE5
  2531                           preinc1	equ	0xFE4
  2532                           plusw1	equ	0xFE3
  2533                           fsr1h	equ	0xFE2
  2534                           fsr1l	equ	0xFE1
  2535                           bsr	equ	0xFE0
  2536                           indf2	equ	0xFDF
  2537                           postinc2	equ	0xFDE
  2538                           postdec2	equ	0xFDD
  2539                           preinc2	equ	0xFDC
  2540                           plusw2	equ	0xFDB
  2541                           fsr2h	equ	0xFDA
  2542                           fsr2l	equ	0xFD9
  2543                           status	equ	0xFD8

Data Sizes:
    Strings     233
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     42      42
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_24(CODE[4]), STR_13(CODE[4]), STR_2(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_24(CODE[4]), STR_13(CODE[4]), STR_2(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 10
		 -> main@temp(COMRAM[10]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 10
		 -> main@temp(COMRAM[10]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 10
		 -> main@temp(COMRAM[10]), 

    UART_Read@info	PTR unsigned char  size(2) Largest target is 10
		 -> main@temp(COMRAM[10]), 

    UART_Write@info	PTR unsigned char  size(2) Largest target is 14
		 -> STR_26(CODE[10]), STR_25(CODE[14]), STR_23(CODE[11]), STR_22(CODE[11]), 
		 -> STR_21(CODE[11]), STR_20(CODE[11]), STR_19(CODE[11]), STR_18(CODE[11]), 
		 -> STR_17(CODE[11]), STR_16(CODE[11]), STR_15(CODE[11]), STR_14(CODE[10]), 
		 -> STR_12(CODE[11]), STR_11(CODE[10]), STR_10(CODE[10]), STR_9(CODE[10]), 
		 -> STR_8(CODE[10]), STR_7(CODE[10]), STR_6(CODE[10]), STR_5(CODE[10]), 
		 -> STR_4(CODE[10]), STR_3(CODE[10]), main@temp(COMRAM[10]), STR_1(CODE[9]), 


Critical Paths under _main in COMRAM

    _main->_UART_Open
    _atoi->_isspace
    _UART_Open->___aldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0    5604
                                             28 COMRAM    14    14      0
                         _UART_Close
                          _UART_Open
                          _UART_Read
                         _UART_Write
                               _atoi
                            _strncmp
 ---------------------------------------------------------------------------------
 (1) _strncmp                                             11     5      6     909
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (1) _atoi                                                10     8      2    1080
                                              7 COMRAM    10     8      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (2) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _UART_Write                                           6     4      2    2066
                                              0 COMRAM     6     4      2
                       _UART_TX_Busy
 ---------------------------------------------------------------------------------
 (2) _UART_TX_Busy                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Read                                            6     4      2     406
                                              0 COMRAM     6     4      2
                      _UART_RX_Ready
 ---------------------------------------------------------------------------------
 (2) _UART_RX_Ready                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Open                                           14    10      4     836
                                             14 COMRAM    14    10      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _UART_Close                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Close
   _UART_Open
     ___aldiv
   _UART_Read
     _UART_RX_Ready
   _UART_Write
     _UART_TX_Busy
   _atoi
     ___wmul
     _isdigit
     _isspace
   _strncmp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     2A      2A       1       44.2%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
DATA                 0      0       0       4        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBIGSFRhh         50      0       0      21        0.0%
BITBIGSFRlhh         C      0       0      22        0.0%
BITBIGSFRlhl         8      0       0      23        0.0%
BITBIGSFRllh        11      0       0      24        0.0%
BITBIGSFRlll        21      0       0      25        0.0%
BIGRAM             7FF      0       0      26        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue May 31 18:08:12 2022

                     l33 0EBE                       l42 1282                       l36 1298  
                     l45 1294                       l54 1130                       l80 0A06  
                     l65 11BE                       l81 0A18                       l73 099A  
                     l90 0B48                       l91 0B5A                       l75 09AC  
                     l92 0B6C                       l76 09BE                       l93 0B7E  
                     l85 0B00                       l77 09D0                       l78 09E2  
                     l87 0B12                       l79 09F4                       l88 0B24  
                     l89 0B36                       l98 0C44                       u10 1280  
                     u11 127A                       u20 1282      ___wmul@multiplicand 0003  
                    l101 126E                      l180 0FCA                      l800 1248  
                    l822 1270                      l815 10A0                      l808 1210  
                    l826 128E                      l908 1296                      l794 0D8E  
                    l797 0D96                      u400 0F2E                      u401 0F2A  
                    u410 0F50                      u411 0F4C                      u420 0F78  
                    u500 0E20                      u421 0F74                      u501 0E1C  
                    u430 0FAA                      u431 0FA6                      u600 119A  
                    u440 11D8                      u601 1196                      u441 11D4  
                    u530 0EAA                      u450 1206                      u610 0FF6  
                    u531 0EA6                      u515 0E32                      u451 1202  
                    u611 0FF2                      u380 0ED2                      u540 10DA  
                    u460 1242                      u620 1028                      u700 095E  
                    u381 0ECE                      u525 0E6C                      u461 123C  
                    u621 1024                      u701 095A                      u390 0EF4  
                    u550 10F0                      u470 1244                      u630 1044  
                    u710 0AC4                      u391 0EF0                      u551 10EC  
                    u631 1040                      u711 0AC0                      u560 1120  
                    u640 1056                      u720 0C2A                      u641 1052  
                    u721 0C26                      u570 1130                      u650 107E  
                    u571 112C                      u547 10D0                      u651 107A  
                    u580 114E                      u660 0C7A                      u485 0DAA  
                    u581 114A                      u661 0C76                      u590 117C  
                    u670 0CAE                      u495 0DE4                      u591 1178  
                    u567 1116                      u671 0CAA                      u680 0D60  
                    u681 0D5C                      u690 0D72                      u691 0D6E  
                    wreg 000FE8                     l1100 0EE2                     l1110 0F18  
                   l1102 0EE6                     l1120 0F5A                     l1112 0F2E  
                   l1104 0EF4                     l1200 1044                     l1122 0F78  
                   l1114 0F36                     l1130 0F9A                     l1106 0F04  
                   l1210 0C5C                     l1202 1056                     l1132 0FAA  
                   l1124 0F88                     l1116 0F42                     l1108 0F08  
                   l1140 11C4                     l1220 0CBA                     l1204 107E  
                   l1300 0B4A                     l1134 0FBA                     l1126 0F8A  
                   l1118 0F50                     l1150 1212                     l1142 11D8  
                   l1230 0D2C                     l1222 0CC2                     l1214 0C60  
                   l1302 0B5C                     l1310 0BA0                     l1128 0F94  
                   l1160 0E98                     l1144 1206                     l1232 0D60  
                   l1224 0CF4                     l1216 0C7A                     l1208 0C48  
                   l1304 0B6E                     l1312 0BFC                     l1240 08EC  
                   l1162 0E9A                     l1154 0D98                     l1170 10DC  
                   l1090 1266                     l1146 120A                     l1138 11C0  
                   l1234 0D72                     l1218 0CB2                     l1314 0C2A  
                   l1306 0B80                     l1250 0924                     l1242 08F4  
                   l1164 0EAA                     l1156 0E10                     l1180 114E  
                   l1172 10F0                     l1316 0C36                     l1308 0B90  
                   l1340 0A50                     l1260 0982                     l1252 0930  
                   l1244 08F8                     l1094 0EC0                     l1158 0E20  
                   l1182 117C                     l1174 10F4                     l1166 10A2  
                   l1190 0FF6                     l1318 0C38                     l1342 0BB6  
                   l1270 09E4                     l1262 099C                     l1254 095E  
                   l1246 090C                     l1096 0EC4                     l1184 119A  
                   l1176 1132                     l1168 10AE                     l1088 124A  
                   l1344 0CDE                     l1272 09F6                     l1264 09AE  
                   l1280 0A3A                     l1256 096A                     l1248 0918  
                   l1098 0ED2                     l1186 11A2                     l1178 113A  
                   l1194 1002                     l1290 0AE8                     l1274 0A08  
                   l1266 09C0                     l1258 0976                     l1282 0A96  
                   l1196 1010                     l1188 0FCC                     l1292 0B02  
                   l1284 0AC4                     l1276 0A1A                     l1268 09D2  
                   l1198 1028                     l1294 0B14                     l1286 0AD0  
                   l1278 0A2A                     l1296 0B26                     l1288 0ADC  
                   l1298 0B38                     STR_1 08D6                     STR_2 08E7  
                   STR_3 08CC                     STR_4 087C                     STR_5 0886  
                   STR_6 0890                     STR_7 089A                     STR_8 08A4  
                   STR_9 08AE                     _RCIE 007CED                     _RCIF 007CF5  
                   _TXIE 007CEC                     _atoi 0C48                     _main 08EC  
                   fsr0h 000FEA                     indf0 000FEF                     fsr2h 000FDA  
                   fsr0l 000FE9                     indf2 000FDF                     fsr2l 000FD9  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
           ___param_bank 000000          __end_of___aldiv 0FCC                    ?_atoi 0008  
                  ?_main 0001                    STR_10 08B8                    STR_11 08C2  
                  STR_12 0867                    STR_20 0846                    STR_13 08DF  
                  STR_21 0851                    STR_14 08CC                    STR_22 085C  
                  STR_23 0867                    STR_15 080F                    STR_24 08E3  
                  STR_16 081A                    STR_17 0825                    STR_25 0801  
                  STR_26 0872                    STR_18 0830                    STR_19 083B  
                  _RCREG 000FAE                    _SPBRG 000FAF                    _PORTB 000F81  
                  _TRISB 000F93              ?_UART_Close 0001                    _TXREG 000FAD  
            ?_UART_Write 0001        UART_Open@baudrate 000F          __end_of_isdigit 124A  
           main@numPorta 0029                    atoi@n 0010                    atoi@s 0008  
        __end_of_isspace 1212                    tablat 000FF5                    status 000FD8  
        __end_of_strncmp 10A2          __initialization 1284             __end_of_atoi 0D98  
           __end_of_main 0C48                   ??_atoi 000A                   ??_main 001D  
          __activetblptr 000002        __end_of_UART_Read 11C0        __end_of_UART_Open 0EC0  
              ??___aldiv 0009                   ___wmul 124A    __end_of_UART_RX_Ready 1296  
                 isa$std 000001                ??_isdigit 0003             __mediumconst 0000  
              ??_isspace 0003                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8                ??_strncmp 0007               __accesstop 0060  
__end_of__initialization 1284            ___rparam_used 000001           __pcstackCOMRAM 0001  
                ?___wmul 0001             ??_UART_Close 0001             ??_UART_Write 0003  
          ?_UART_TX_Busy 0001                  __Hparam 0000                  __Lparam 0000  
     __end_of_UART_Close 129A                  ___aldiv 0EC0       __end_of_UART_Write 1132  
           __psmallconst 0800                  __pcinit 1284                  __ramtop 0800  
                __ptext0 08EC                  __ptext1 0FCC                  __ptext2 0C48  
                __ptext3 11C0                  __ptext4 1212                  __ptext5 124A  
                __ptext6 10A2                  __ptext7 1270                  __ptext8 1132  
                __ptext9 128E                  _isdigit 1212         ___aldiv@dividend 0001  
                _isspace 11C0              UART_Write@i 0005                  atoi@neg 000E  
         ??_UART_TX_Busy 0001                  _strncmp 0FCC     end_of_initialization 1284  
          __Lmediumconst 0000                _RCSTAbits 000FAB         ___aldiv@quotient 000B  
                postinc2 000FDE                _UART_Read 1132                _UART_Open 0D98  
              _PORTBbits 000F81           UART_Write@info 0001                _TRISCbits 000F94  
              _TXSTAbits 000FAC           __end_of___wmul 1270               ?_UART_Read 0001  
             ?_UART_Open 000F      start_initialization 1284                 ??___wmul 0005  
   __end_of_UART_TX_Busy 1284                 ?___aldiv 0001            UART_Read@info 0001  
            ??_UART_Read 0003              ??_UART_Open 0013            _UART_RX_Ready 128E  
            __smallconst 0800                 ?_isdigit 0001                 ?_isspace 0001  
               ?_strncmp 0001               UART_Read@i 0005               UART_Open@x 001B  
        ___aldiv@divisor 0005          ___aldiv@counter 0009           ___wmul@product 0005  
         ?_UART_RX_Ready 0001        ___wmul@multiplier 0001                 __Hrparam 0000  
               __Lrparam 0000                 __ptext10 0D98                 __ptext11 0EC0  
               __ptext12 1296             _UART_TX_Busy 1270                 isa$xinst 000000  
        ??_UART_RX_Ready 0001                 main@temp 001F              _isspace$775 0007  
               isdigit@c 0001                 isspace@c 0001                strncmp@_l 0001  
              strncmp@_r 0003               _UART_Close 1296                 strncmp@l 0008  
               strncmp@n 0005                 strncmp@r 000A             ___aldiv@sign 000A  
             _UART_Write 10A2  
