

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue May 31 21:27:00 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16  0000                     
    17                           ; Version 2.40
    18                           ; Generated 17/11/2021 GMT
    19                           ; 
    20                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4550 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     
    53                           	psect	idataCOMRAM
    54  007E1C                     __pidataCOMRAM:
    55                           	callstack 0
    56                           
    57                           ;initializer for _aux
    58  007E1C  0001               	dw	1
    59  0000                     _PORTBbits	set	3969
    60  0000                     _PORTB	set	3969
    61  0000                     _TRISB	set	3987
    62  0000                     _TRISCbits	set	3988
    63  0000                     _T3CONbits	set	4017
    64  0000                     _CCP2CON	set	4026
    65  0000                     _T1CON	set	4045
    66  0000                     _CCPR2H	set	4028
    67  0000                     _CCPR2L	set	4027
    68  0000                     _TMR1L	set	4046
    69  0000                     _TMR1H	set	4047
    70  0000                     _PIR2bits	set	4001
    71                           
    72                           ; #config settings
    73                           
    74                           	psect	cinit
    75  007E1E                     __pcinit:
    76                           	callstack 0
    77  007E1E                     start_initialization:
    78                           	callstack 0
    79  007E1E                     __initialization:
    80                           	callstack 0
    81                           
    82                           ; Initialize objects allocated to COMRAM (2 bytes)
    83                           ; load TBLPTR registers with __pidataCOMRAM
    84  007E1E  0E1C               	movlw	low __pidataCOMRAM
    85  007E20  6EF6               	movwf	tblptrl,c
    86  007E22  0E7E               	movlw	high __pidataCOMRAM
    87  007E24  6EF7               	movwf	tblptrh,c
    88  007E26  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    89  007E28  6EF8               	movwf	tblptru,c
    90  007E2A  0009               	tblrd		*+	;fetch initializer
    91  007E2C  CFF5 F00B          	movff	tablat,__pdataCOMRAM
    92  007E30  0009               	tblrd		*+	;fetch initializer
    93  007E32  CFF5 F00C          	movff	tablat,__pdataCOMRAM+1
    94                           
    95                           ; Clear objects allocated to COMRAM (2 bytes)
    96  007E36  6A0A               	clrf	(__pbssCOMRAM+1)& (0+255),c
    97  007E38  6A09               	clrf	__pbssCOMRAM& (0+255),c
    98  007E3A                     end_of_initialization:
    99                           	callstack 0
   100  007E3A                     __end_of__initialization:
   101                           	callstack 0
   102  007E3A  0100               	movlb	0
   103  007E3C  EF82  F03F         	goto	_main	;jump to C main() function
   104                           
   105                           	psect	bssCOMRAM
   106  000009                     __pbssCOMRAM:
   107                           	callstack 0
   108  000009                     _sentido:
   109                           	callstack 0
   110  000009                     	ds	2
   111                           
   112                           	psect	dataCOMRAM
   113  00000B                     __pdataCOMRAM:
   114                           	callstack 0
   115  00000B                     _aux:
   116                           	callstack 0
   117  00000B                     	ds	2
   118                           
   119                           	psect	cstackCOMRAM
   120  000001                     __pcstackCOMRAM:
   121                           	callstack 0
   122  000001                     ?___awdiv:
   123                           	callstack 0
   124  000001                     ___awdiv@dividend:
   125                           	callstack 0
   126                           
   127                           ; 2 bytes @ 0x0
   128  000001                     	ds	2
   129  000003                     ___awdiv@divisor:
   130                           	callstack 0
   131                           
   132                           ; 2 bytes @ 0x2
   133  000003                     	ds	2
   134  000005                     ___awdiv@counter:
   135                           	callstack 0
   136                           
   137                           ; 1 bytes @ 0x4
   138  000005                     	ds	1
   139  000006                     ___awdiv@sign:
   140                           	callstack 0
   141                           
   142                           ; 1 bytes @ 0x5
   143  000006                     	ds	1
   144  000007                     ___awdiv@quotient:
   145                           	callstack 0
   146                           
   147                           ; 2 bytes @ 0x6
   148  000007                     	ds	2
   149  000009                     
   150                           ; 1 bytes @ 0x8
   151 ;;
   152 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   153 ;;
   154 ;; *************** function _main *****************
   155 ;; Defined at:
   156 ;;		line 83 in file "main.c"
   157 ;; Parameters:    Size  Location     Type
   158 ;;		None
   159 ;; Auto vars:     Size  Location     Type
   160 ;;		None
   161 ;; Return value:  Size  Location     Type
   162 ;;                  1    wreg      void 
   163 ;; Registers used:
   164 ;;		wreg, status,2, status,0, cstack
   165 ;; Tracked objects:
   166 ;;		On entry : 0/0
   167 ;;		On exit  : 0/0
   168 ;;		Unchanged: 0/0
   169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   170 ;;      Params:         0       0       0       0       0       0       0       0       0
   171 ;;      Locals:         0       0       0       0       0       0       0       0       0
   172 ;;      Temps:          0       0       0       0       0       0       0       0       0
   173 ;;      Totals:         0       0       0       0       0       0       0       0       0
   174 ;;Total ram usage:        0 bytes
   175 ;; Hardware stack levels required when called: 1
   176 ;; This function calls:
   177 ;;		___awdiv
   178 ;; This function is called by:
   179 ;;		Startup code after reset
   180 ;; This function uses a non-reentrant model
   181 ;;
   182                           
   183                           	psect	text0
   184  007F04                     __ptext0:
   185                           	callstack 0
   186  007F04                     _main:
   187                           	callstack 30
   188  007F04                     
   189                           ;main.c: 85:     CCP2CON = 0b00001011;
   190  007F04  0E0B               	movlw	11
   191  007F06  6EBA               	movwf	186,c	;volatile
   192  007F08                     
   193                           ;main.c: 89:     T3CONbits.T3CCP1 = 0;
   194  007F08  96B1               	bcf	177,3,c	;volatile
   195  007F0A                     
   196                           ;main.c: 90:     T3CONbits.T3CCP2 = 0;
   197  007F0A  9CB1               	bcf	177,6,c	;volatile
   198                           
   199                           ;main.c: 92:     ((void)(TMR1H=((3036)>>8),TMR1L=((3036)&0xFF)));
   200  007F0C  0E0B               	movlw	11
   201  007F0E  6ECF               	movwf	207,c	;volatile
   202  007F10  0EDC               	movlw	220
   203  007F12  6ECE               	movwf	206,c	;volatile
   204  007F14                     
   205                           ;main.c: 94:     CCPR2L = 0xFF;
   206  007F14  68BB               	setf	187,c	;volatile
   207  007F16                     
   208                           ;main.c: 95:     CCPR2H = 0xFF;
   209  007F16  68BC               	setf	188,c	;volatile
   210                           
   211                           ;main.c: 100:     T1CON = 0b11110001;
   212  007F18  0EF1               	movlw	241
   213  007F1A  6ECD               	movwf	205,c	;volatile
   214  007F1C                     
   215                           ;main.c: 102:     TRISCbits.RC1 = 0;
   216  007F1C  9294               	bcf	148,1,c	;volatile
   217                           
   218                           ;main.c: 103:     TRISB = 0b11110000;
   219  007F1E  0EF0               	movlw	240
   220  007F20  6E93               	movwf	147,c	;volatile
   221                           
   222                           ;main.c: 104:     PORTB = 0x01;
   223  007F22  0E01               	movlw	1
   224  007F24  6E81               	movwf	129,c	;volatile
   225  007F26                     l863:
   226                           
   227                           ;main.c: 108:         if(PIR2bits.CCP2IF == 1){
   228  007F26  A0A1               	btfss	161,0,c	;volatile
   229  007F28  EF98  F03F         	goto	u191
   230  007F2C  EF9A  F03F         	goto	u190
   231  007F30                     u191:
   232  007F30  EFE1  F03F         	goto	l881
   233  007F34                     u190:
   234  007F34                     
   235                           ;main.c: 110:             if(sentido == 0){
   236  007F34  5009               	movf	_sentido^0,w,c
   237  007F36  100A               	iorwf	(_sentido+1)^0,w,c
   238  007F38  A4D8               	btfss	status,2,c
   239  007F3A  EFA1  F03F         	goto	u201
   240  007F3E  EFA3  F03F         	goto	u200
   241  007F42                     u201:
   242  007F42  EFBC  F03F         	goto	l871
   243  007F46                     u200:
   244  007F46                     
   245                           ;main.c: 111:                 aux = aux*2;
   246  007F46  90D8               	bcf	status,0,c
   247  007F48  340B               	rlcf	_aux^0,w,c
   248  007F4A  6E0B               	movwf	_aux^0,c
   249  007F4C  340C               	rlcf	(_aux+1)^0,w,c
   250  007F4E  6E0C               	movwf	(_aux+1)^0,c
   251                           
   252                           ;main.c: 112:                 if(aux > 8)
   253  007F50  BE0C               	btfsc	(_aux+1)^0,7,c
   254  007F52  EFB4  F03F         	goto	u211
   255  007F56  500C               	movf	(_aux+1)^0,w,c
   256  007F58  E109               	bnz	u210
   257  007F5A  0E09               	movlw	9
   258  007F5C  5C0B               	subwf	_aux^0,w,c
   259  007F5E  A0D8               	btfss	status,0,c
   260  007F60  EFB4  F03F         	goto	u211
   261  007F64  EFB6  F03F         	goto	u210
   262  007F68                     u211:
   263  007F68  EFDE  F03F         	goto	l877
   264  007F6C                     u210:
   265  007F6C                     
   266                           ;main.c: 113:                     aux = 1;
   267  007F6C  0E00               	movlw	0
   268  007F6E  6E0C               	movwf	(_aux+1)^0,c
   269  007F70  0E01               	movlw	1
   270  007F72  6E0B               	movwf	_aux^0,c
   271  007F74  EFDE  F03F         	goto	l877
   272  007F78                     l871:
   273                           
   274                           ;main.c: 115:                 if(aux > 1)
   275  007F78  BE0C               	btfsc	(_aux+1)^0,7,c
   276  007F7A  EFC8  F03F         	goto	u221
   277  007F7E  500C               	movf	(_aux+1)^0,w,c
   278  007F80  E109               	bnz	u220
   279  007F82  0E02               	movlw	2
   280  007F84  5C0B               	subwf	_aux^0,w,c
   281  007F86  A0D8               	btfss	status,0,c
   282  007F88  EFC8  F03F         	goto	u221
   283  007F8C  EFCA  F03F         	goto	u220
   284  007F90                     u221:
   285  007F90  EFDA  F03F         	goto	l875
   286  007F94                     u220:
   287  007F94                     
   288                           ;main.c: 116:                     aux = aux/2;
   289  007F94  C00B  F001         	movff	_aux,___awdiv@dividend
   290  007F98  C00C  F002         	movff	_aux+1,___awdiv@dividend+1
   291  007F9C  0E00               	movlw	0
   292  007F9E  6E04               	movwf	(___awdiv@divisor+1)^0,c
   293  007FA0  0E02               	movlw	2
   294  007FA2  6E03               	movwf	___awdiv@divisor^0,c
   295  007FA4  EC20  F03F         	call	___awdiv	;wreg free
   296  007FA8  C001  F00B         	movff	?___awdiv,_aux
   297  007FAC  C002  F00C         	movff	?___awdiv+1,_aux+1
   298  007FB0  EFDE  F03F         	goto	l877
   299  007FB4                     l875:
   300                           
   301                           ;main.c: 118:                     aux = 8;
   302  007FB4  0E00               	movlw	0
   303  007FB6  6E0C               	movwf	(_aux+1)^0,c
   304  007FB8  0E08               	movlw	8
   305  007FBA  6E0B               	movwf	_aux^0,c
   306  007FBC                     l877:
   307                           
   308                           ;main.c: 121:             PORTB = aux;
   309  007FBC  C00B  FF81         	movff	_aux,3969	;volatile
   310  007FC0                     
   311                           ;main.c: 122:             PIR2bits.CCP2IF=0;
   312  007FC0  90A1               	bcf	161,0,c	;volatile
   313  007FC2                     l881:
   314                           
   315                           ;main.c: 126:         if(PORTBbits.RB4 == 0){
   316  007FC2  B881               	btfsc	129,4,c	;volatile
   317  007FC4  EFE6  F03F         	goto	u231
   318  007FC8  EFE8  F03F         	goto	u230
   319  007FCC                     u231:
   320  007FCC  EF93  F03F         	goto	l863
   321  007FD0                     u230:
   322  007FD0                     
   323                           ;main.c: 127:             if(sentido == 0)
   324  007FD0  5009               	movf	_sentido^0,w,c
   325  007FD2  100A               	iorwf	(_sentido+1)^0,w,c
   326  007FD4  A4D8               	btfss	status,2,c
   327  007FD6  EFEF  F03F         	goto	u241
   328  007FDA  EFF1  F03F         	goto	u240
   329  007FDE                     u241:
   330  007FDE  EFF7  F03F         	goto	l887
   331  007FE2                     u240:
   332  007FE2                     
   333                           ;main.c: 128:                 sentido = 1;
   334  007FE2  0E00               	movlw	0
   335  007FE4  6E0A               	movwf	(_sentido+1)^0,c
   336  007FE6  0E01               	movlw	1
   337  007FE8  6E09               	movwf	_sentido^0,c
   338  007FEA  EFFB  F03F         	goto	l889
   339  007FEE                     l887:
   340                           
   341                           ;main.c: 130:                 sentido = 0;
   342  007FEE  0E00               	movlw	0
   343  007FF0  6E0A               	movwf	(_sentido+1)^0,c
   344  007FF2  0E00               	movlw	0
   345  007FF4  6E09               	movwf	_sentido^0,c
   346  007FF6                     l889:
   347                           
   348                           ;main.c: 132:             _delay((unsigned long)((1)*(4000000/4000000.0)));
   349  007FF6  F000               	nop	
   350  007FF8  EF93  F03F         	goto	l863
   351  007FFC  EF00  F000         	goto	start
   352  008000                     __end_of_main:
   353                           	callstack 0
   354                           
   355 ;; *************** function ___awdiv *****************
   356 ;; Defined at:
   357 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
   358 ;; Parameters:    Size  Location     Type
   359 ;;  dividend        2    0[COMRAM] int 
   360 ;;  divisor         2    2[COMRAM] int 
   361 ;; Auto vars:     Size  Location     Type
   362 ;;  quotient        2    6[COMRAM] int 
   363 ;;  sign            1    5[COMRAM] unsigned char 
   364 ;;  counter         1    4[COMRAM] unsigned char 
   365 ;; Return value:  Size  Location     Type
   366 ;;                  2    0[COMRAM] int 
   367 ;; Registers used:
   368 ;;		wreg, status,2, status,0
   369 ;; Tracked objects:
   370 ;;		On entry : 0/0
   371 ;;		On exit  : 0/0
   372 ;;		Unchanged: 0/0
   373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   374 ;;      Params:         4       0       0       0       0       0       0       0       0
   375 ;;      Locals:         4       0       0       0       0       0       0       0       0
   376 ;;      Temps:          0       0       0       0       0       0       0       0       0
   377 ;;      Totals:         8       0       0       0       0       0       0       0       0
   378 ;;Total ram usage:        8 bytes
   379 ;; Hardware stack levels used: 1
   380 ;; This function calls:
   381 ;;		Nothing
   382 ;; This function is called by:
   383 ;;		_main
   384 ;; This function uses a non-reentrant model
   385 ;;
   386                           
   387                           	psect	text1
   388  007E40                     __ptext1:
   389                           	callstack 0
   390  007E40                     ___awdiv:
   391                           	callstack 30
   392  007E40  0E00               	movlw	0
   393  007E42  6E06               	movwf	___awdiv@sign^0,c
   394  007E44  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
   395  007E46  EF29  F03F         	goto	u130
   396  007E4A  EF27  F03F         	goto	u131
   397  007E4E                     u131:
   398  007E4E  EF2F  F03F         	goto	l815
   399  007E52                     u130:
   400  007E52  6C03               	negf	___awdiv@divisor^0,c
   401  007E54  1E04               	comf	(___awdiv@divisor+1)^0,f,c
   402  007E56  B0D8               	btfsc	status,0,c
   403  007E58  2A04               	incf	(___awdiv@divisor+1)^0,f,c
   404  007E5A  0E01               	movlw	1
   405  007E5C  6E06               	movwf	___awdiv@sign^0,c
   406  007E5E                     l815:
   407  007E5E  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
   408  007E60  EF36  F03F         	goto	u140
   409  007E64  EF34  F03F         	goto	u141
   410  007E68                     u141:
   411  007E68  EF3C  F03F         	goto	l821
   412  007E6C                     u140:
   413  007E6C  6C01               	negf	___awdiv@dividend^0,c
   414  007E6E  1E02               	comf	(___awdiv@dividend+1)^0,f,c
   415  007E70  B0D8               	btfsc	status,0,c
   416  007E72  2A02               	incf	(___awdiv@dividend+1)^0,f,c
   417  007E74  0E01               	movlw	1
   418  007E76  1A06               	xorwf	___awdiv@sign^0,f,c
   419  007E78                     l821:
   420  007E78  0E00               	movlw	0
   421  007E7A  6E08               	movwf	(___awdiv@quotient+1)^0,c
   422  007E7C  0E00               	movlw	0
   423  007E7E  6E07               	movwf	___awdiv@quotient^0,c
   424  007E80  5003               	movf	___awdiv@divisor^0,w,c
   425  007E82  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
   426  007E84  B4D8               	btfsc	status,2,c
   427  007E86  EF47  F03F         	goto	u151
   428  007E8A  EF49  F03F         	goto	u150
   429  007E8E                     u151:
   430  007E8E  EF71  F03F         	goto	l843
   431  007E92                     u150:
   432  007E92  0E01               	movlw	1
   433  007E94  6E05               	movwf	___awdiv@counter^0,c
   434  007E96  EF51  F03F         	goto	l829
   435  007E9A                     l827:
   436  007E9A  90D8               	bcf	status,0,c
   437  007E9C  3603               	rlcf	___awdiv@divisor^0,f,c
   438  007E9E  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
   439  007EA0  2A05               	incf	___awdiv@counter^0,f,c
   440  007EA2                     l829:
   441  007EA2  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
   442  007EA4  EF56  F03F         	goto	u161
   443  007EA8  EF58  F03F         	goto	u160
   444  007EAC                     u161:
   445  007EAC  EF4D  F03F         	goto	l827
   446  007EB0                     u160:
   447  007EB0                     l831:
   448  007EB0  90D8               	bcf	status,0,c
   449  007EB2  3607               	rlcf	___awdiv@quotient^0,f,c
   450  007EB4  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
   451  007EB6  5003               	movf	___awdiv@divisor^0,w,c
   452  007EB8  5C01               	subwf	___awdiv@dividend^0,w,c
   453  007EBA  5004               	movf	(___awdiv@divisor+1)^0,w,c
   454  007EBC  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
   455  007EBE  A0D8               	btfss	status,0,c
   456  007EC0  EF64  F03F         	goto	u171
   457  007EC4  EF66  F03F         	goto	u170
   458  007EC8                     u171:
   459  007EC8  EF6B  F03F         	goto	l839
   460  007ECC                     u170:
   461  007ECC  5003               	movf	___awdiv@divisor^0,w,c
   462  007ECE  5E01               	subwf	___awdiv@dividend^0,f,c
   463  007ED0  5004               	movf	(___awdiv@divisor+1)^0,w,c
   464  007ED2  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
   465  007ED4  8007               	bsf	___awdiv@quotient^0,0,c
   466  007ED6                     l839:
   467  007ED6  90D8               	bcf	status,0,c
   468  007ED8  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
   469  007EDA  3203               	rrcf	___awdiv@divisor^0,f,c
   470  007EDC  2E05               	decfsz	___awdiv@counter^0,f,c
   471  007EDE  EF58  F03F         	goto	l831
   472  007EE2                     l843:
   473  007EE2  5006               	movf	___awdiv@sign^0,w,c
   474  007EE4  B4D8               	btfsc	status,2,c
   475  007EE6  EF77  F03F         	goto	u181
   476  007EEA  EF79  F03F         	goto	u180
   477  007EEE                     u181:
   478  007EEE  EF7D  F03F         	goto	l847
   479  007EF2                     u180:
   480  007EF2  6C07               	negf	___awdiv@quotient^0,c
   481  007EF4  1E08               	comf	(___awdiv@quotient+1)^0,f,c
   482  007EF6  B0D8               	btfsc	status,0,c
   483  007EF8  2A08               	incf	(___awdiv@quotient+1)^0,f,c
   484  007EFA                     l847:
   485  007EFA  C007  F001         	movff	___awdiv@quotient,?___awdiv
   486  007EFE  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
   487  007F02  0012               	return		;funcret
   488  007F04                     __end_of___awdiv:
   489                           	callstack 0
   490  0000                     
   491                           	psect	rparam
   492  0000                     
   493                           	psect	idloc
   494                           
   495                           ;Config register IDLOC0 @ 0x200000
   496                           ;	unspecified, using default values
   497  200000                     	org	2097152
   498  200000  FF                 	db	255
   499                           
   500                           ;Config register IDLOC1 @ 0x200001
   501                           ;	unspecified, using default values
   502  200001                     	org	2097153
   503  200001  FF                 	db	255
   504                           
   505                           ;Config register IDLOC2 @ 0x200002
   506                           ;	unspecified, using default values
   507  200002                     	org	2097154
   508  200002  FF                 	db	255
   509                           
   510                           ;Config register IDLOC3 @ 0x200003
   511                           ;	unspecified, using default values
   512  200003                     	org	2097155
   513  200003  FF                 	db	255
   514                           
   515                           ;Config register IDLOC4 @ 0x200004
   516                           ;	unspecified, using default values
   517  200004                     	org	2097156
   518  200004  FF                 	db	255
   519                           
   520                           ;Config register IDLOC5 @ 0x200005
   521                           ;	unspecified, using default values
   522  200005                     	org	2097157
   523  200005  FF                 	db	255
   524                           
   525                           ;Config register IDLOC6 @ 0x200006
   526                           ;	unspecified, using default values
   527  200006                     	org	2097158
   528  200006  FF                 	db	255
   529                           
   530                           ;Config register IDLOC7 @ 0x200007
   531                           ;	unspecified, using default values
   532  200007                     	org	2097159
   533  200007  FF                 	db	255
   534                           
   535                           	psect	config
   536                           
   537                           ;Config register CONFIG1L @ 0x300000
   538                           ;	PLL Prescaler Selection bits
   539                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   540                           ;	System Clock Postscaler Selection bits
   541                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   542                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   543                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   544  300000                     	org	3145728
   545  300000  00                 	db	0
   546                           
   547                           ;Config register CONFIG1H @ 0x300001
   548                           ;	Oscillator Selection bits
   549                           ;	FOSC = EC_EC, EC oscillator, CLKO function on RA6 (EC)
   550                           ;	Fail-Safe Clock Monitor Enable bit
   551                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   552                           ;	Internal/External Oscillator Switchover bit
   553                           ;	IESO = OFF, Oscillator Switchover mode disabled
   554  300001                     	org	3145729
   555  300001  05                 	db	5
   556                           
   557                           ;Config register CONFIG2L @ 0x300002
   558                           ;	Power-up Timer Enable bit
   559                           ;	PWRT = OFF, PWRT disabled
   560                           ;	Brown-out Reset Enable bits
   561                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   562                           ;	Brown-out Reset Voltage bits
   563                           ;	BORV = 3, Minimum setting 2.05V
   564                           ;	USB Voltage Regulator Enable bit
   565                           ;	VREGEN = OFF, USB voltage regulator disabled
   566  300002                     	org	3145730
   567  300002  1F                 	db	31
   568                           
   569                           ;Config register CONFIG2H @ 0x300003
   570                           ;	Watchdog Timer Enable bit
   571                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   572                           ;	Watchdog Timer Postscale Select bits
   573                           ;	WDTPS = 32768, 1:32768
   574  300003                     	org	3145731
   575  300003  1E                 	db	30
   576                           
   577                           ; Padding undefined space
   578  300004                     	org	3145732
   579  300004  FF                 	db	255
   580                           
   581                           ;Config register CONFIG3H @ 0x300005
   582                           ;	CCP2 MUX bit
   583                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   584                           ;	PORTB A/D Enable bit
   585                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   586                           ;	Low-Power Timer 1 Oscillator Enable bit
   587                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   588                           ;	MCLR Pin Enable bit
   589                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   590  300005                     	org	3145733
   591  300005  81                 	db	129
   592                           
   593                           ;Config register CONFIG4L @ 0x300006
   594                           ;	Stack Full/Underflow Reset Enable bit
   595                           ;	STVREN = ON, Stack full/underflow will cause Reset
   596                           ;	Single-Supply ICSP Enable bit
   597                           ;	LVP = ON, Single-Supply ICSP enabled
   598                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   599                           ;	ICPRT = OFF, ICPORT disabled
   600                           ;	Extended Instruction Set Enable bit
   601                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   602                           ;	Background Debugger Enable bit
   603                           ;	DEBUG = 0x1, unprogrammed default
   604  300006                     	org	3145734
   605  300006  85                 	db	133
   606                           
   607                           ; Padding undefined space
   608  300007                     	org	3145735
   609  300007  FF                 	db	255
   610                           
   611                           ;Config register CONFIG5L @ 0x300008
   612                           ;	Code Protection bit
   613                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   614                           ;	Code Protection bit
   615                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   616                           ;	Code Protection bit
   617                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   618                           ;	Code Protection bit
   619                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   620  300008                     	org	3145736
   621  300008  0F                 	db	15
   622                           
   623                           ;Config register CONFIG5H @ 0x300009
   624                           ;	Boot Block Code Protection bit
   625                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   626                           ;	Data EEPROM Code Protection bit
   627                           ;	CPD = OFF, Data EEPROM is not code-protected
   628  300009                     	org	3145737
   629  300009  C0                 	db	192
   630                           
   631                           ;Config register CONFIG6L @ 0x30000A
   632                           ;	Write Protection bit
   633                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   634                           ;	Write Protection bit
   635                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   636                           ;	Write Protection bit
   637                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   638                           ;	Write Protection bit
   639                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   640  30000A                     	org	3145738
   641  30000A  0F                 	db	15
   642                           
   643                           ;Config register CONFIG6H @ 0x30000B
   644                           ;	Configuration Register Write Protection bit
   645                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   646                           ;	Boot Block Write Protection bit
   647                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   648                           ;	Data EEPROM Write Protection bit
   649                           ;	WRTD = OFF, Data EEPROM is not write-protected
   650  30000B                     	org	3145739
   651  30000B  E0                 	db	224
   652                           
   653                           ;Config register CONFIG7L @ 0x30000C
   654                           ;	Table Read Protection bit
   655                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   656                           ;	Table Read Protection bit
   657                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   658                           ;	Table Read Protection bit
   659                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   660                           ;	Table Read Protection bit
   661                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   662  30000C                     	org	3145740
   663  30000C  0F                 	db	15
   664                           
   665                           ;Config register CONFIG7H @ 0x30000D
   666                           ;	Boot Block Table Read Protection bit
   667                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   668  30000D                     	org	3145741
   669  30000D  40                 	db	64
   670                           tosu	equ	0xFFF
   671                           tosh	equ	0xFFE
   672                           tosl	equ	0xFFD
   673                           stkptr	equ	0xFFC
   674                           pclatu	equ	0xFFB
   675                           pclath	equ	0xFFA
   676                           pcl	equ	0xFF9
   677                           tblptru	equ	0xFF8
   678                           tblptrh	equ	0xFF7
   679                           tblptrl	equ	0xFF6
   680                           tablat	equ	0xFF5
   681                           prodh	equ	0xFF4
   682                           prodl	equ	0xFF3
   683                           indf0	equ	0xFEF
   684                           postinc0	equ	0xFEE
   685                           postdec0	equ	0xFED
   686                           preinc0	equ	0xFEC
   687                           plusw0	equ	0xFEB
   688                           fsr0h	equ	0xFEA
   689                           fsr0l	equ	0xFE9
   690                           wreg	equ	0xFE8
   691                           indf1	equ	0xFE7
   692                           postinc1	equ	0xFE6
   693                           postdec1	equ	0xFE5
   694                           preinc1	equ	0xFE4
   695                           plusw1	equ	0xFE3
   696                           fsr1h	equ	0xFE2
   697                           fsr1l	equ	0xFE1
   698                           bsr	equ	0xFE0
   699                           indf2	equ	0xFDF
   700                           postinc2	equ	0xFDE
   701                           postdec2	equ	0xFDD
   702                           preinc2	equ	0xFDC
   703                           plusw2	equ	0xFDB
   704                           fsr2h	equ	0xFDA
   705                           fsr2l	equ	0xFD9
   706                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      8      12
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     452
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      28        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      8       C       1       12.6%
BITBIGSFRhh         30      0       0      20        0.0%
BITBIGSFRllll       21      0       0      26        0.0%
BITBIGSFRlllh       11      0       0      25        0.0%
BITBIGSFRhl         10      0       0      21        0.0%
BITBIGSFRllhh        F      0       0      23        0.0%
BITBIGSFRllhl        C      0       0      24        0.0%
BITBIGSFRlh          8      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       C      27        0.0%
DATA                 0      0       C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue May 31 21:27:00 2022

           ___awdiv@sign 0006                      l281 7F02                      l811 7E52  
                    l821 7E78                      l813 7E5A                      l831 7EB0  
                    l823 7E80                      l815 7E5E                      l807 7E40  
                    l841 7EDC                      l833 7EB6                      l825 7E92  
                    l817 7E6C                      l809 7E44                      l835 7ECC  
                    l827 7E9A                      l843 7EE2                      l819 7E74  
                    l851 7F04                      l845 7EF2                      l837 7ED4  
                    l829 7EA2                      l861 7F1C                      l853 7F08  
                    l847 7EFA                      l839 7ED6                      l871 7F78  
                    l863 7F26                      l855 7F0A                      l873 7F94  
                    l865 7F34                      l881 7FC2                      l857 7F14  
                    l883 7FD0                      l875 7FB4                      l867 7F46  
                    l859 7F16                      l885 7FE2                      l869 7F6C  
                    l877 7FBC                      l887 7FEE                      l879 7FC0  
                    l889 7FF6                      u200 7F46                      u201 7F42  
                    u130 7E52                      u210 7F6C                      u131 7E4E  
                    u211 7F68                      u140 7E6C                      u220 7F94  
                    u141 7E68                      u221 7F90                      u150 7E92  
                    u230 7FD0                      u151 7E8E                      u231 7FCC  
                    u160 7EB0                      u240 7FE2                      u161 7EAC  
                    u241 7FDE                      u170 7ECC                      u171 7EC8  
                    u180 7EF2                      u181 7EEE                      u190 7F34  
                    u191 7F30                      _aux 000B                     _main 7F04  
                   start 0000             ___param_bank 000000                    ?_main 0001  
        __end_of___awdiv 7F04          ___awdiv@divisor 0003                    _T1CON 000FCD  
        ___awdiv@counter 0005                    _TMR1H 000FCF                    _TMR1L 000FCE  
                  _PORTB 000F81                    _TRISB 000F93                    tablat 000FF5  
                  status 000FD8          __initialization 7E1E             __end_of_main 8000  
                 ??_main 0009            __activetblptr 000000                   _CCPR2H 000FBC  
                 _CCPR2L 000FBB         ___awdiv@dividend 0001                ??___awdiv 0005  
       ___awdiv@quotient 0007                   isa$std 000001             __pdataCOMRAM 000B  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 7E3A            ___rparam_used 000001  
         __pcstackCOMRAM 0001                  _CCP2CON 000FBA                  __Hparam 0000  
                __Lparam 0000                  ___awdiv 7E40                  __pcinit 7E1E  
                __ramtop 0800                  __ptext0 7F04                  __ptext1 7E40  
              _T3CONbits 000FB1                  _sentido 0009     end_of_initialization 7E3A  
              _PORTBbits 000F81                _TRISCbits 000F94            __pidataCOMRAM 7E1C  
    start_initialization 7E1E              __pbssCOMRAM 0009                 ?___awdiv 0001  
               _PIR2bits 000FA1                 __Hrparam 0000                 __Lrparam 0000  
               isa$xinst 000000  
