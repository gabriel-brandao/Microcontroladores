

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Mar 15 16:58:02 2022

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    14  0000                     
    15                           ; Version 2.10
    16                           ; Generated 31/07/2019 GMT
    17                           ; 
    18                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4550 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     _PORTD	set	3971
    50  0000                     _INTCON2bits	set	4081
    51  0000                     _RCONbits	set	4048
    52  0000                     _TRISD	set	3989
    53  0000                     _PORTDbits	set	3971
    54  0000                     _INTCON3bits	set	4080
    55  0000                     _INTCONbits	set	4082
    56                           
    57                           ; #config settings
    58  0000                     
    59                           	psect	cinit
    60  000100                     __pcinit:
    61                           	opt callstack 0
    62  000100                     start_initialization:
    63                           	opt callstack 0
    64  000100                     __initialization:
    65                           	opt callstack 0
    66                           
    67                           ; Clear objects allocated to COMRAM (2 bytes)
    68  000100  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
    69  000102  6A01               	clrf	__pbssCOMRAM& (0+255),c
    70  000104                     end_of_initialization:
    71                           	opt callstack 0
    72  000104                     __end_of__initialization:
    73                           	opt callstack 0
    74  000104  9005               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    75  000106  9205               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    76  000108  0E00               	movlw	low (__Lmediumconst shr (0+16))
    77  00010A  6EF8               	movwf	tblptru,c
    78  00010C  0100               	movlb	0
    79  00010E  EF09  F000         	goto	_main	;jump to C main() function
    80                           
    81                           	psect	bssCOMRAM
    82  000001                     __pbssCOMRAM:
    83                           	opt callstack 0
    84  000001                     _opcao:
    85                           	opt callstack 0
    86  000001                     	ds	2
    87                           
    88                           	psect	cstackCOMRAM
    89  000003                     __pcstackCOMRAM:
    90                           	opt callstack 0
    91  000003                     ??_main:
    92                           
    93                           ; 1 bytes @ 0x0
    94  000003                     	ds	2
    95                           
    96 ;;
    97 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
    98 ;;
    99 ;; *************** function _main *****************
   100 ;; Defined at:
   101 ;;		line 86 in file "main.c"
   102 ;; Parameters:    Size  Location     Type
   103 ;;		None
   104 ;; Auto vars:     Size  Location     Type
   105 ;;		None
   106 ;; Return value:  Size  Location     Type
   107 ;;                  1    wreg      void 
   108 ;; Registers used:
   109 ;;		wreg, status,2, status,0
   110 ;; Tracked objects:
   111 ;;		On entry : 0/0
   112 ;;		On exit  : 0/0
   113 ;;		Unchanged: 0/0
   114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   115 ;;      Params:         0       0       0       0       0       0       0       0       0
   116 ;;      Locals:         0       0       0       0       0       0       0       0       0
   117 ;;      Temps:          2       0       0       0       0       0       0       0       0
   118 ;;      Totals:         2       0       0       0       0       0       0       0       0
   119 ;;Total ram usage:        2 bytes
   120 ;; Hardware stack levels required when called:    1
   121 ;; This function calls:
   122 ;;		Nothing
   123 ;; This function is called by:
   124 ;;		Startup code after reset
   125 ;; This function uses a non-reentrant model
   126 ;;
   127                           
   128                           	psect	text0
   129  000012                     __ptext0:
   130                           	opt callstack 0
   131  000012                     _main:
   132                           	opt callstack 30
   133  000012                     
   134                           ;main.c: 87:     TRISD = 0b00000000;
   135  000012  0E00               	movlw	0
   136  000014  6E95               	movwf	149,c	;volatile
   137  000016                     
   138                           ;main.c: 89:     RCONbits.IPEN = 1;
   139  000016  8ED0               	bsf	208,7,c	;volatile
   140  000018                     
   141                           ;main.c: 90:     INTCONbits.GIEH = 1;
   142  000018  8EF2               	bsf	242,7,c	;volatile
   143  00001A                     
   144                           ;main.c: 91:     INTCONbits.GIEL = 0;
   145  00001A  9CF2               	bcf	242,6,c	;volatile
   146  00001C                     
   147                           ;main.c: 92:     INTCONbits.INT0IE = 1;
   148  00001C  88F2               	bsf	242,4,c	;volatile
   149  00001E                     
   150                           ;main.c: 93:     INTCONbits.INT0IF = 0;
   151  00001E  92F2               	bcf	242,1,c	;volatile
   152  000020                     
   153                           ;main.c: 94:     INTCON2bits.INTEDG0 = 1;
   154  000020  8CF1               	bsf	241,6,c	;volatile
   155  000022                     
   156                           ;main.c: 97:     INTCON3bits.INT1IP = 1;
   157  000022  8CF0               	bsf	240,6,c	;volatile
   158  000024                     
   159                           ;main.c: 98:     INTCON3bits.INT1E = 1;
   160  000024  86F0               	bsf	240,3,c	;volatile
   161  000026                     
   162                           ;main.c: 99:     INTCON3bits.INT1F = 0;
   163  000026  90F0               	bcf	240,0,c	;volatile
   164  000028                     
   165                           ;main.c: 100:     INTCON2bits.INTEDG1 = 0;
   166  000028  9AF1               	bcf	241,5,c	;volatile
   167  00002A  EF2C  F000         	goto	l766
   168  00002E                     l756:
   169  00002E  0E00               	movlw	0
   170  000030  6E83               	movwf	131,c	;volatile
   171  000032  EF2C  F000         	goto	l766
   172  000036                     l758:
   173  000036  2A83               	incf	131,f,c	;volatile
   174  000038                     l760:
   175  000038  0E03               	movlw	3
   176  00003A  6E04               	movwf	(??_main+1)^0,c
   177  00003C  0E8A               	movlw	138
   178  00003E  6E03               	movwf	??_main^0,c
   179  000040  0E56               	movlw	86
   180  000042                     u67:
   181  000042  2EE8               	decfsz	wreg,f,c
   182  000044  D7FE               	bra	u67
   183  000046  2E03               	decfsz	??_main^0,f,c
   184  000048  D7FC               	bra	u67
   185  00004A  2E04               	decfsz	(??_main+1)^0,f,c
   186  00004C  D7FA               	bra	u67
   187  00004E  EF2C  F000         	goto	l766
   188  000052                     l762:
   189  000052  0683               	decf	131,f,c	;volatile
   190  000054  EF1C  F000         	goto	l760
   191  000058                     l766:
   192  000058  C001  F003         	movff	_opcao,??_main
   193  00005C  C002  F004         	movff	_opcao+1,??_main+1
   194                           
   195                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   196                           ; Switch size 1, requested type "simple"
   197                           ; Number of cases is 1, Range of values is 0 to 0
   198                           ; switch strategies available:
   199                           ; Name         Instructions Cycles
   200                           ; simple_byte            4     3 (average)
   201                           ;	Chosen strategy is simple_byte
   202  000060  5004               	movf	(??_main+1)^0,w,c
   203  000062  0A00               	xorlw	0	; case 0
   204  000064  B4D8               	btfsc	status,2,c
   205  000066  EF37  F000         	goto	l776
   206  00006A  EF2C  F000         	goto	l766
   207  00006E                     l776:
   208                           
   209                           ; Switch size 1, requested type "simple"
   210                           ; Number of cases is 3, Range of values is 0 to 2
   211                           ; switch strategies available:
   212                           ; Name         Instructions Cycles
   213                           ; simple_byte           10     6 (average)
   214                           ;	Chosen strategy is simple_byte
   215  00006E  5003               	movf	??_main^0,w,c
   216  000070  0A00               	xorlw	0	; case 0
   217  000072  B4D8               	btfsc	status,2,c
   218  000074  EF17  F000         	goto	l756
   219  000078  0A01               	xorlw	1	; case 1
   220  00007A  B4D8               	btfsc	status,2,c
   221  00007C  EF1B  F000         	goto	l758
   222  000080  0A03               	xorlw	3	; case 2
   223  000082  B4D8               	btfsc	status,2,c
   224  000084  EF29  F000         	goto	l762
   225  000088  EF2C  F000         	goto	l766
   226  00008C  EF07  F000         	goto	start
   227  000090                     __end_of_main:
   228                           	opt callstack 0
   229                           
   230 ;; *************** function _funcInt *****************
   231 ;; Defined at:
   232 ;;		line 73 in file "main.c"
   233 ;; Parameters:    Size  Location     Type
   234 ;;		None
   235 ;; Auto vars:     Size  Location     Type
   236 ;;		None
   237 ;; Return value:  Size  Location     Type
   238 ;;                  1    wreg      void 
   239 ;; Registers used:
   240 ;;		wreg, status,2, status,0
   241 ;; Tracked objects:
   242 ;;		On entry : 0/0
   243 ;;		On exit  : 0/0
   244 ;;		Unchanged: 0/0
   245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   246 ;;      Params:         0       0       0       0       0       0       0       0       0
   247 ;;      Locals:         0       0       0       0       0       0       0       0       0
   248 ;;      Temps:          0       0       0       0       0       0       0       0       0
   249 ;;      Totals:         0       0       0       0       0       0       0       0       0
   250 ;;Total ram usage:        0 bytes
   251 ;; Hardware stack levels used:    1
   252 ;; This function calls:
   253 ;;		Nothing
   254 ;; This function is called by:
   255 ;;		Interrupt level 2
   256 ;; This function uses a non-reentrant model
   257 ;;
   258                           
   259                           	psect	intcode
   260  000008                     __pintcode:
   261                           	opt callstack 0
   262  000008                     _funcInt:
   263                           	opt callstack 30
   264                           
   265                           ;incstack = 0
   266  000008  8205               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   267  00000A  ED48  F000         	call	int_func,f	;refresh shadow registers
   268                           
   269                           	psect	intcode_body
   270  000090                     __pintcode_body:
   271                           	opt callstack 30
   272  000090                     int_func:
   273                           	opt callstack 30
   274  000090  0006               	pop		; remove dummy address from shadow register refresh
   275  000092                     
   276                           ;main.c: 74:     if(INTCONbits.INT0IE && INTCONbits.INT0IF){
   277  000092  A8F2               	btfss	242,4,c	;volatile
   278  000094  EF4E  F000         	goto	i2u1_41
   279  000098  EF50  F000         	goto	i2u1_40
   280  00009C                     i2u1_41:
   281  00009C  EF6E  F000         	goto	i2l728
   282  0000A0                     i2u1_40:
   283  0000A0  A2F2               	btfss	242,1,c	;volatile
   284  0000A2  EF55  F000         	goto	i2u2_41
   285  0000A6  EF57  F000         	goto	i2u2_40
   286  0000AA                     i2u2_41:
   287  0000AA  EF6E  F000         	goto	i2l728
   288  0000AE                     i2u2_40:
   289  0000AE                     
   290                           ;main.c: 75:         if(opcao<2){opcao++;
   291  0000AE  BE02               	btfsc	(_opcao+1)^0,7,c
   292  0000B0  EF65  F000         	goto	i2u3_40
   293  0000B4  5002               	movf	(_opcao+1)^0,w,c
   294  0000B6  E107               	bnz	i2u3_41
   295  0000B8  0E02               	movlw	2
   296  0000BA  5C01               	subwf	_opcao^0,w,c
   297  0000BC  B0D8               	btfsc	status,0,c
   298  0000BE  EF63  F000         	goto	i2u3_41
   299  0000C2  EF65  F000         	goto	i2u3_40
   300  0000C6                     i2u3_41:
   301  0000C6  EF69  F000         	goto	i2l724
   302  0000CA                     i2u3_40:
   303  0000CA  4A01               	infsnz	_opcao^0,f,c
   304  0000CC  2A02               	incf	(_opcao+1)^0,f,c
   305                           
   306                           ;main.c: 76:         }else{opcao = 0;}
   307  0000CE  EF6D  F000         	goto	i2l726
   308  0000D2                     i2l724:
   309  0000D2  0E00               	movlw	0
   310  0000D4  6E02               	movwf	(_opcao+1)^0,c
   311  0000D6  0E00               	movlw	0
   312  0000D8  6E01               	movwf	_opcao^0,c
   313  0000DA                     i2l726:
   314                           
   315                           ;main.c: 77:         INTCONbits.INT0IF=0;
   316  0000DA  92F2               	bcf	242,1,c	;volatile
   317  0000DC                     i2l728:
   318                           
   319                           ;main.c: 80:     if(INTCON3bits.INT1IE && INTCON3bits.INT1IF){
   320  0000DC  A6F0               	btfss	240,3,c	;volatile
   321  0000DE  EF73  F000         	goto	i2u4_41
   322  0000E2  EF75  F000         	goto	i2u4_40
   323  0000E6                     i2u4_41:
   324  0000E6  EF7E  F000         	goto	i2l27
   325  0000EA                     i2u4_40:
   326  0000EA  A0F0               	btfss	240,0,c	;volatile
   327  0000EC  EF7A  F000         	goto	i2u5_41
   328  0000F0  EF7C  F000         	goto	i2u5_40
   329  0000F4                     i2u5_41:
   330  0000F4  EF7E  F000         	goto	i2l27
   331  0000F8                     i2u5_40:
   332  0000F8                     
   333                           ;main.c: 81:         PORTDbits.RD7 = 1;
   334  0000F8  8E83               	bsf	131,7,c	;volatile
   335                           
   336                           ;main.c: 82:         INTCON3bits.INT1IF = 0;
   337  0000FA  90F0               	bcf	240,0,c	;volatile
   338  0000FC                     i2l27:
   339  0000FC  9205               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   340  0000FE  0011               	retfie		f
   341  000100                     __end_of_funcInt:
   342                           	opt callstack 0
   343  0000                     
   344                           	psect	rparam
   345  0000                     
   346                           	psect	temp
   347  000005                     btemp:
   348                           	opt callstack 0
   349  000005                     	ds	1
   350  0000                     int$flags	set	btemp
   351  0000                     wtemp8	set	btemp+1
   352  0000                     ttemp5	set	btemp+1
   353  0000                     ttemp6	set	btemp+4
   354  0000                     ttemp7	set	btemp+8
   355                           tosu	equ	0xFFF
   356                           tosh	equ	0xFFE
   357                           tosl	equ	0xFFD
   358                           stkptr	equ	0xFFC
   359                           pclatu	equ	0xFFB
   360                           pclath	equ	0xFFA
   361                           pcl	equ	0xFF9
   362                           tblptru	equ	0xFF8
   363                           tblptrh	equ	0xFF7
   364                           tblptrl	equ	0xFF6
   365                           tablat	equ	0xFF5
   366                           prodh	equ	0xFF4
   367                           prodl	equ	0xFF3
   368                           indf0	equ	0xFEF
   369                           postinc0	equ	0xFEE
   370                           postdec0	equ	0xFED
   371                           preinc0	equ	0xFEC
   372                           plusw0	equ	0xFEB
   373                           fsr0h	equ	0xFEA
   374                           fsr0l	equ	0xFE9
   375                           wreg	equ	0xFE8
   376                           indf1	equ	0xFE7
   377                           postinc1	equ	0xFE6
   378                           postdec1	equ	0xFE5
   379                           preinc1	equ	0xFE4
   380                           plusw1	equ	0xFE3
   381                           fsr1h	equ	0xFE2
   382                           fsr1l	equ	0xFE1
   383                           bsr	equ	0xFE0
   384                           indf2	equ	0xFDF
   385                           postinc2	equ	0xFDE
   386                           postdec2	equ	0xFDD
   387                           preinc2	equ	0xFDC
   388                           plusw2	equ	0xFDB
   389                           fsr2h	equ	0xFDA
   390                           fsr2l	equ	0xFD9
   391                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      2       4
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _funcInt in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _funcInt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _funcInt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _funcInt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _funcInt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _funcInt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _funcInt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _funcInt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _funcInt in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _funcInt                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _funcInt (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      2       4       1        4.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       4      20        0.0%
DATA                 0      0       4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Mar 15 16:58:02 2022

                     u67 0042              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
                    l740 001A                      l750 0024                      l742 001C  
                    l734 0012                      l760 0038                      l752 0026  
                    l744 001E                      l736 0016                      l762 0052  
                    l754 0028                      l746 0020                      l738 0018  
                    l756 002E                      l748 0022                      l758 0036  
                    l766 0058                      l776 006E             __CFG_CPB$OFF 000000  
           __CFG_CPD$OFF 000000             __CFG_BOR$OFF 000000                      wreg 000FE8  
           __CFG_FOSC$HS 000000             __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000  
                   i2l27 00FC                     _main 0012                     btemp 0005  
                   start 000E            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
           ___param_bank 000000            __CFG_PLLDIV$1 000000                    ?_main 0003  
                  i2l720 00AE                    i2l730 00EA                    i2l722 00CA  
                  i2l732 00F8                    i2l724 00D2                    i2l716 0092  
                  i2l726 00DA                    i2l718 00A0                    i2l728 00DC  
                  _PORTD 000F83            __CFG_USBDIV$1 000000                    _TRISD 000F95  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000          __end_of_funcInt 0100  
                  _opcao 0001                    ttemp5 0006                    ttemp6 0009  
                  ttemp7 000D                    status 000FD8                    wtemp8 0006  
         __CFG_ICPRT$OFF 000000          __initialization 0100             __end_of_main 0090  
                 ??_main 0003            __activetblptr 000002          __CFG_CCP2MX$OFF 000000  
                 i2u1_40 00A0                   i2u1_41 009C                   i2u2_40 00AE  
                 i2u2_41 00AA                   i2u3_40 00CA                   i2u3_41 00C6  
                 i2u4_40 00EA                   i2u4_41 00E6                   i2u5_40 00F8  
                 i2u5_41 00F4           __CFG_XINST$OFF 000000                ??_funcInt 0003  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 0104  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001           __pcstackCOMRAM 0003  
        __CFG_VREGEN$OFF 000000                  __Hparam 0000                  __Lparam 0000  
        __CFG_STVREN$OFF 000000                  __pcinit 0100                  __ramtop 0800  
                __ptext0 0012                  _funcInt 0008           __pintcode_body 0090  
   end_of_initialization 0104            __Lmediumconst 0000                  int_func 0090  
              _PORTDbits 000F83      start_initialization 0100         __CFG_LPT1OSC$OFF 000000  
            __pbssCOMRAM 0001                __pintcode 0008                 ?_funcInt 0003  
               _RCONbits 000FD0         __CFG_WDTPS$32768 000000              _INTCON2bits 000FF1  
            _INTCON3bits 000FF0                 __Hrparam 0000                 __Lrparam 0000  
       __size_of_funcInt 00F8            __size_of_main 007E                 int$flags 0005  
  __CFG_CPUDIV$OSC1_PLL2 000000               _INTCONbits 000FF2                 intlevel2 0000  
