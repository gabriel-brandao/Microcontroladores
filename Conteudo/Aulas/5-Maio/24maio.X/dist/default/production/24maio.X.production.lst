

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue May 24 16:23:45 2022

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23  0000                     
    24                           ; Version 2.10
    25                           ; Generated 31/07/2019 GMT
    26                           ; 
    27                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4550 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     _PORTBbits	set	3969
    59  0000                     _PORTB	set	3969
    60  0000                     _TRISB	set	3987
    61  0000                     _RCREG	set	4014
    62  0000                     _TXREG	set	4013
    63  0000                     _TRISCbits	set	3988
    64  0000                     _RCSTAbits	set	4011
    65  0000                     _SPBRG	set	4015
    66  0000                     _TXSTAbits	set	4012
    67  0000                     _RCIF	set	31989
    68  0000                     _RCIE	set	31981
    69  0000                     _TXIE	set	31980
    70                           
    71                           	psect	smallconst
    72  000800                     __psmallconst:
    73                           	opt callstack 0
    74  000800  00                 	db	0
    75  000801                     STR_26:
    76  000801  50                 	db	80	;'P'
    77  000802  72                 	db	114	;'r'
    78  000803  6F                 	db	111	;'o'
    79  000804  67                 	db	103	;'g'
    80  000805  72                 	db	114	;'r'
    81  000806  61                 	db	97	;'a'
    82  000807  6D                 	db	109	;'m'
    83  000808  20                 	db	32
    84  000809  4F                 	db	79	;'O'
    85  00080A  75                 	db	117	;'u'
    86  00080B  74                 	db	116	;'t'
    87  00080C  0D                 	db	13
    88  00080D  0A                 	db	10
    89  00080E  00                 	db	0
    90  00080F                     STR_16:
    91  00080F  4C                 	db	76	;'L'
    92  000810  45                 	db	69	;'E'
    93  000811  44                 	db	68	;'D'
    94  000812  30                 	db	48	;'0'
    95  000813  20                 	db	32
    96  000814  4F                 	db	79	;'O'
    97  000815  46                 	db	70	;'F'
    98  000816  46                 	db	70	;'F'
    99  000817  0D                 	db	13
   100  000818  0A                 	db	10
   101  000819  00                 	db	0
   102  00081A                     STR_17:
   103  00081A  4C                 	db	76	;'L'
   104  00081B  45                 	db	69	;'E'
   105  00081C  44                 	db	68	;'D'
   106  00081D  31                 	db	49	;'1'
   107  00081E  20                 	db	32
   108  00081F  4F                 	db	79	;'O'
   109  000820  46                 	db	70	;'F'
   110  000821  46                 	db	70	;'F'
   111  000822  0D                 	db	13
   112  000823  0A                 	db	10
   113  000824  00                 	db	0
   114  000825                     STR_18:
   115  000825  4C                 	db	76	;'L'
   116  000826  45                 	db	69	;'E'
   117  000827  44                 	db	68	;'D'
   118  000828  32                 	db	50	;'2'
   119  000829  20                 	db	32
   120  00082A  4F                 	db	79	;'O'
   121  00082B  46                 	db	70	;'F'
   122  00082C  46                 	db	70	;'F'
   123  00082D  0D                 	db	13
   124  00082E  0A                 	db	10
   125  00082F  00                 	db	0
   126  000830                     STR_19:
   127  000830  4C                 	db	76	;'L'
   128  000831  45                 	db	69	;'E'
   129  000832  44                 	db	68	;'D'
   130  000833  33                 	db	51	;'3'
   131  000834  20                 	db	32
   132  000835  4F                 	db	79	;'O'
   133  000836  46                 	db	70	;'F'
   134  000837  46                 	db	70	;'F'
   135  000838  0D                 	db	13
   136  000839  0A                 	db	10
   137  00083A  00                 	db	0
   138  00083B                     STR_20:
   139  00083B  4C                 	db	76	;'L'
   140  00083C  45                 	db	69	;'E'
   141  00083D  44                 	db	68	;'D'
   142  00083E  34                 	db	52	;'4'
   143  00083F  20                 	db	32
   144  000840  4F                 	db	79	;'O'
   145  000841  46                 	db	70	;'F'
   146  000842  46                 	db	70	;'F'
   147  000843  0D                 	db	13
   148  000844  0A                 	db	10
   149  000845  00                 	db	0
   150  000846                     STR_21:
   151  000846  4C                 	db	76	;'L'
   152  000847  45                 	db	69	;'E'
   153  000848  44                 	db	68	;'D'
   154  000849  35                 	db	53	;'5'
   155  00084A  20                 	db	32
   156  00084B  4F                 	db	79	;'O'
   157  00084C  46                 	db	70	;'F'
   158  00084D  46                 	db	70	;'F'
   159  00084E  0D                 	db	13
   160  00084F  0A                 	db	10
   161  000850  00                 	db	0
   162  000851                     STR_22:
   163  000851  4C                 	db	76	;'L'
   164  000852  45                 	db	69	;'E'
   165  000853  44                 	db	68	;'D'
   166  000854  36                 	db	54	;'6'
   167  000855  20                 	db	32
   168  000856  4F                 	db	79	;'O'
   169  000857  46                 	db	70	;'F'
   170  000858  46                 	db	70	;'F'
   171  000859  0D                 	db	13
   172  00085A  0A                 	db	10
   173  00085B  00                 	db	0
   174  00085C                     STR_23:
   175  00085C  4C                 	db	76	;'L'
   176  00085D  45                 	db	69	;'E'
   177  00085E  44                 	db	68	;'D'
   178  00085F  37                 	db	55	;'7'
   179  000860  20                 	db	32
   180  000861  4F                 	db	79	;'O'
   181  000862  46                 	db	70	;'F'
   182  000863  46                 	db	70	;'F'
   183  000864  0D                 	db	13
   184  000865  0A                 	db	10
   185  000866  00                 	db	0
   186  000867                     STR_12:
   187  000867  49                 	db	73	;'I'
   188  000868  6E                 	db	110	;'n'
   189  000869  76                 	db	118	;'v'
   190  00086A  61                 	db	97	;'a'
   191  00086B  6C                 	db	108	;'l'
   192  00086C  69                 	db	105	;'i'
   193  00086D  64                 	db	100	;'d'
   194  00086E  6F                 	db	111	;'o'
   195  00086F  0D                 	db	13
   196  000870  0A                 	db	10
   197  000871  00                 	db	0
   198  000872                     STR_27:
   199  000872  46                 	db	70	;'F'
   200  000873  69                 	db	105	;'i'
   201  000874  6E                 	db	110	;'n'
   202  000875  69                 	db	105	;'i'
   203  000876  73                 	db	115	;'s'
   204  000877  68                 	db	104	;'h'
   205  000878  21                 	db	33
   206  000879  0D                 	db	13
   207  00087A  0A                 	db	10
   208  00087B  00                 	db	0
   209  00087C                     STR_14:
   210  00087C  4C                 	db	76	;'L'
   211  00087D  45                 	db	69	;'E'
   212  00087E  44                 	db	68	;'D'
   213  00087F  20                 	db	32
   214  000880  4F                 	db	79	;'O'
   215  000881  46                 	db	70	;'F'
   216  000882  46                 	db	70	;'F'
   217  000883  0D                 	db	13
   218  000884  0A                 	db	10
   219  000885  00                 	db	0
   220  000886                     STR_4:
   221  000886  4C                 	db	76	;'L'
   222  000887  45                 	db	69	;'E'
   223  000888  44                 	db	68	;'D'
   224  000889  30                 	db	48	;'0'
   225  00088A  20                 	db	32
   226  00088B  4F                 	db	79	;'O'
   227  00088C  4E                 	db	78	;'N'
   228  00088D  0D                 	db	13
   229  00088E  0A                 	db	10
   230  00088F  00                 	db	0
   231  000890                     STR_5:
   232  000890  4C                 	db	76	;'L'
   233  000891  45                 	db	69	;'E'
   234  000892  44                 	db	68	;'D'
   235  000893  31                 	db	49	;'1'
   236  000894  20                 	db	32
   237  000895  4F                 	db	79	;'O'
   238  000896  4E                 	db	78	;'N'
   239  000897  0D                 	db	13
   240  000898  0A                 	db	10
   241  000899  00                 	db	0
   242  00089A                     STR_6:
   243  00089A  4C                 	db	76	;'L'
   244  00089B  45                 	db	69	;'E'
   245  00089C  44                 	db	68	;'D'
   246  00089D  32                 	db	50	;'2'
   247  00089E  20                 	db	32
   248  00089F  4F                 	db	79	;'O'
   249  0008A0  4E                 	db	78	;'N'
   250  0008A1  0D                 	db	13
   251  0008A2  0A                 	db	10
   252  0008A3  00                 	db	0
   253  0008A4                     STR_7:
   254  0008A4  4C                 	db	76	;'L'
   255  0008A5  45                 	db	69	;'E'
   256  0008A6  44                 	db	68	;'D'
   257  0008A7  33                 	db	51	;'3'
   258  0008A8  20                 	db	32
   259  0008A9  4F                 	db	79	;'O'
   260  0008AA  4E                 	db	78	;'N'
   261  0008AB  0D                 	db	13
   262  0008AC  0A                 	db	10
   263  0008AD  00                 	db	0
   264  0008AE                     STR_8:
   265  0008AE  4C                 	db	76	;'L'
   266  0008AF  45                 	db	69	;'E'
   267  0008B0  44                 	db	68	;'D'
   268  0008B1  34                 	db	52	;'4'
   269  0008B2  20                 	db	32
   270  0008B3  4F                 	db	79	;'O'
   271  0008B4  4E                 	db	78	;'N'
   272  0008B5  0D                 	db	13
   273  0008B6  0A                 	db	10
   274  0008B7  00                 	db	0
   275  0008B8                     STR_9:
   276  0008B8  4C                 	db	76	;'L'
   277  0008B9  45                 	db	69	;'E'
   278  0008BA  44                 	db	68	;'D'
   279  0008BB  35                 	db	53	;'5'
   280  0008BC  20                 	db	32
   281  0008BD  4F                 	db	79	;'O'
   282  0008BE  4E                 	db	78	;'N'
   283  0008BF  0D                 	db	13
   284  0008C0  0A                 	db	10
   285  0008C1  00                 	db	0
   286  0008C2                     STR_10:
   287  0008C2  4C                 	db	76	;'L'
   288  0008C3  45                 	db	69	;'E'
   289  0008C4  44                 	db	68	;'D'
   290  0008C5  36                 	db	54	;'6'
   291  0008C6  20                 	db	32
   292  0008C7  4F                 	db	79	;'O'
   293  0008C8  4E                 	db	78	;'N'
   294  0008C9  0D                 	db	13
   295  0008CA  0A                 	db	10
   296  0008CB  00                 	db	0
   297  0008CC                     STR_11:
   298  0008CC  4C                 	db	76	;'L'
   299  0008CD  45                 	db	69	;'E'
   300  0008CE  44                 	db	68	;'D'
   301  0008CF  37                 	db	55	;'7'
   302  0008D0  20                 	db	32
   303  0008D1  4F                 	db	79	;'O'
   304  0008D2  4E                 	db	78	;'N'
   305  0008D3  0D                 	db	13
   306  0008D4  0A                 	db	10
   307  0008D5  00                 	db	0
   308  0008D6                     STR_3:
   309  0008D6  4E                 	db	78	;'N'
   310  0008D7  75                 	db	117	;'u'
   311  0008D8  6D                 	db	109	;'m'
   312  0008D9  20                 	db	32
   313  0008DA  70                 	db	112	;'p'
   314  0008DB  6F                 	db	111	;'o'
   315  0008DC  72                 	db	114	;'r'
   316  0008DD  74                 	db	116	;'t'
   317  0008DE  61                 	db	97	;'a'
   318  0008DF  00                 	db	0
   319  0008E0                     STR_1:
   320  0008E0  53                 	db	83	;'S'
   321  0008E1  74                 	db	116	;'t'
   322  0008E2  61                 	db	97	;'a'
   323  0008E3  72                 	db	114	;'r'
   324  0008E4  74                 	db	116	;'t'
   325  0008E5  21                 	db	33
   326  0008E6  0D                 	db	13
   327  0008E7  0A                 	db	10
   328  0008E8  00                 	db	0
   329  0008E9                     STR_13:
   330  0008E9  4F                 	db	79	;'O'
   331  0008EA  46                 	db	70	;'F'
   332  0008EB  46                 	db	70	;'F'
   333  0008EC  00                 	db	0
   334  0008ED                     STR_25:
   335  0008ED  4F                 	db	79	;'O'
   336  0008EE  75                 	db	117	;'u'
   337  0008EF  74                 	db	116	;'t'
   338  0008F0  00                 	db	0
   339  0008F1                     STR_2:
   340  0008F1  4F                 	db	79	;'O'
   341  0008F2  4E                 	db	78	;'N'
   342  0008F3  00                 	db	0
   343  0000                     
   344                           ; #config settings
   345  0008F4  00                 	db	0	; dummy byte at the end
   346  0000                     
   347                           	psect	cinit
   348  0012C8                     __pcinit:
   349                           	opt callstack 0
   350  0012C8                     start_initialization:
   351                           	opt callstack 0
   352  0012C8                     __initialization:
   353                           	opt callstack 0
   354  0012C8                     end_of_initialization:
   355                           	opt callstack 0
   356  0012C8                     __end_of__initialization:
   357                           	opt callstack 0
   358  0012C8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   359  0012CA  6EF8               	movwf	tblptru,c
   360  0012CC  0100               	movlb	0
   361  0012CE  EF7B  F004         	goto	_main	;jump to C main() function
   362                           
   363                           	psect	cstackCOMRAM
   364  000001                     __pcstackCOMRAM:
   365                           	opt callstack 0
   366  000001                     ?_strncmp:
   367                           	opt callstack 0
   368  000001                     ?_isspace:
   369                           	opt callstack 0
   370  000001                     ?_isdigit:
   371                           	opt callstack 0
   372  000001                     ?___wmul:
   373                           	opt callstack 0
   374  000001                     ?___aldiv:
   375                           	opt callstack 0
   376  000001                     UART_Write@info:
   377                           	opt callstack 0
   378  000001                     UART_Read@info:
   379                           	opt callstack 0
   380  000001                     ___wmul@multiplier:
   381                           	opt callstack 0
   382  000001                     isdigit@c:
   383                           	opt callstack 0
   384  000001                     isspace@c:
   385                           	opt callstack 0
   386  000001                     strncmp@_l:
   387                           	opt callstack 0
   388  000001                     ___aldiv@dividend:
   389                           	opt callstack 0
   390                           
   391                           ; 4 bytes @ 0x0
   392  000001                     	ds	2
   393  000003                     ??_isspace:
   394  000003                     ??_isdigit:
   395  000003                     ??_UART_Write:
   396  000003                     ??_UART_Read:
   397  000003                     ___wmul@multiplicand:
   398                           	opt callstack 0
   399  000003                     strncmp@_r:
   400                           	opt callstack 0
   401                           
   402                           ; 2 bytes @ 0x2
   403  000003                     	ds	2
   404  000005                     UART_Write@i:
   405                           	opt callstack 0
   406  000005                     UART_Read@i:
   407                           	opt callstack 0
   408  000005                     ___wmul@product:
   409                           	opt callstack 0
   410  000005                     strncmp@n:
   411                           	opt callstack 0
   412  000005                     ___aldiv@divisor:
   413                           	opt callstack 0
   414                           
   415                           ; 4 bytes @ 0x4
   416  000005                     	ds	2
   417  000007                     ??_strncmp:
   418  000007                     _isspace$779:
   419                           	opt callstack 0
   420                           
   421                           ; 1 bytes @ 0x6
   422  000007                     	ds	1
   423  000008                     ?_atoi:
   424                           	opt callstack 0
   425  000008                     atoi@s:
   426                           	opt callstack 0
   427  000008                     strncmp@l:
   428                           	opt callstack 0
   429                           
   430                           ; 2 bytes @ 0x7
   431  000008                     	ds	1
   432  000009                     ___aldiv@counter:
   433                           	opt callstack 0
   434                           
   435                           ; 1 bytes @ 0x8
   436  000009                     	ds	1
   437  00000A                     ??_atoi:
   438  00000A                     ___aldiv@sign:
   439                           	opt callstack 0
   440  00000A                     strncmp@r:
   441                           	opt callstack 0
   442                           
   443                           ; 2 bytes @ 0x9
   444  00000A                     	ds	1
   445  00000B                     ___aldiv@quotient:
   446                           	opt callstack 0
   447                           
   448                           ; 4 bytes @ 0xA
   449  00000B                     	ds	3
   450  00000E                     atoi@neg:
   451                           	opt callstack 0
   452                           
   453                           ; 2 bytes @ 0xD
   454  00000E                     	ds	1
   455  00000F                     UART_Open@baudrate:
   456                           	opt callstack 0
   457                           
   458                           ; 4 bytes @ 0xE
   459  00000F                     	ds	1
   460  000010                     _atoi$761:
   461                           	opt callstack 0
   462                           
   463                           ; 2 bytes @ 0xF
   464  000010                     	ds	2
   465  000012                     _atoi$763:
   466                           	opt callstack 0
   467                           
   468                           ; 2 bytes @ 0x11
   469  000012                     	ds	1
   470  000013                     ??_UART_Open:
   471                           
   472                           ; 1 bytes @ 0x12
   473  000013                     	ds	1
   474  000014                     _atoi$762:
   475                           	opt callstack 0
   476                           
   477                           ; 1 bytes @ 0x13
   478  000014                     	ds	1
   479  000015                     atoi@n:
   480                           	opt callstack 0
   481                           
   482                           ; 2 bytes @ 0x14
   483  000015                     	ds	6
   484  00001B                     UART_Open@x:
   485                           	opt callstack 0
   486                           
   487                           ; 2 bytes @ 0x1A
   488  00001B                     	ds	2
   489  00001D                     ??_main:
   490                           
   491                           ; 1 bytes @ 0x1C
   492  00001D                     	ds	2
   493  00001F                     main@temp:
   494                           	opt callstack 0
   495                           
   496                           ; 10 bytes @ 0x1E
   497  00001F                     	ds	10
   498  000029                     main@numPorta:
   499                           	opt callstack 0
   500                           
   501                           ; 1 bytes @ 0x28
   502  000029                     	ds	1
   503                           
   504 ;;
   505 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   506 ;;
   507 ;; *************** function _main *****************
   508 ;; Defined at:
   509 ;;		line 78 in file "main.c"
   510 ;; Parameters:    Size  Location     Type
   511 ;;		None
   512 ;; Auto vars:     Size  Location     Type
   513 ;;  temp           10   30[COMRAM] unsigned char [10]
   514 ;;  numPorta        1   40[COMRAM] unsigned char 
   515 ;; Return value:  Size  Location     Type
   516 ;;                  1    wreg      void 
   517 ;; Registers used:
   518 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   519 ;; Tracked objects:
   520 ;;		On entry : 0/0
   521 ;;		On exit  : 0/0
   522 ;;		Unchanged: 0/0
   523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   524 ;;      Params:         0       0       0       0       0       0       0       0       0
   525 ;;      Locals:        11       0       0       0       0       0       0       0       0
   526 ;;      Temps:          2       0       0       0       0       0       0       0       0
   527 ;;      Totals:        13       0       0       0       0       0       0       0       0
   528 ;;Total ram usage:       13 bytes
   529 ;; Hardware stack levels required when called:    2
   530 ;; This function calls:
   531 ;;		_UART_Close
   532 ;;		_UART_Open
   533 ;;		_UART_Read
   534 ;;		_UART_Write
   535 ;;		_atoi
   536 ;;		_strncmp
   537 ;; This function is called by:
   538 ;;		Startup code after reset
   539 ;; This function uses a non-reentrant model
   540 ;;
   541                           
   542                           	psect	text0
   543  0008F6                     __ptext0:
   544                           	opt callstack 0
   545  0008F6                     _main:
   546                           	opt callstack 29
   547  0008F6                     
   548                           ;main.c: 79:      TRISB = 0;
   549  0008F6  0E00               	movlw	0
   550  0008F8  6E93               	movwf	147,c	;volatile
   551                           
   552                           ;main.c: 80:      PORTB = 0;
   553  0008FA  0E00               	movlw	0
   554  0008FC  6E81               	movwf	129,c	;volatile
   555  0008FE                     
   556                           ;main.c: 81:      char numPorta;;main.c: 82:      char temp[10];;main.c: 83:      UART_C
      +                          lose();
   557  0008FE  EC6D  F009         	call	_UART_Close	;wreg free
   558  000902                     
   559                           ;main.c: 84:      UART_Open(9600);
   560  000902  0E80               	movlw	128
   561  000904  6E0F               	movwf	UART_Open@baudrate^0,c
   562  000906  0E25               	movlw	37
   563  000908  6E10               	movwf	(UART_Open@baudrate+1)^0,c
   564  00090A  0E00               	movlw	0
   565  00090C  6E11               	movwf	(UART_Open@baudrate+2)^0,c
   566  00090E  0E00               	movlw	0
   567  000910  6E12               	movwf	(UART_Open@baudrate+3)^0,c
   568  000912  ECEE  F006         	call	_UART_Open	;wreg free
   569  000916                     
   570                           ;main.c: 85:      UART_Write("Start!\r\n");
   571  000916  0EE0               	movlw	low STR_1
   572  000918  6E01               	movwf	UART_Write@info^0,c
   573  00091A  0E08               	movlw	high STR_1
   574  00091C  6E02               	movwf	(UART_Write@info+1)^0,c
   575  00091E  EC73  F008         	call	_UART_Write	;wreg free
   576  000922                     l1274:
   577                           
   578                           ;main.c: 88:           UART_Read(temp);
   579  000922  0E1F               	movlw	low main@temp
   580  000924  6E01               	movwf	UART_Read@info^0,c
   581  000926  0E00               	movlw	high main@temp
   582  000928  6E02               	movwf	(UART_Read@info+1)^0,c
   583  00092A  ECBB  F008         	call	_UART_Read	;wreg free
   584  00092E                     
   585                           ;main.c: 89:           UART_Write(temp);
   586  00092E  0E1F               	movlw	low main@temp
   587  000930  6E01               	movwf	UART_Write@info^0,c
   588  000932  0E00               	movlw	high main@temp
   589  000934  6E02               	movwf	(UART_Write@info+1)^0,c
   590  000936  EC73  F008         	call	_UART_Write	;wreg free
   591  00093A                     
   592                           ;main.c: 90:           if (strncmp(temp,"ON",2) == 0){
   593  00093A  0E1F               	movlw	low main@temp
   594  00093C  6E01               	movwf	strncmp@_l^0,c
   595  00093E  0E00               	movlw	high main@temp
   596  000940  6E02               	movwf	(strncmp@_l+1)^0,c
   597  000942  0EF1               	movlw	low STR_2
   598  000944  6E03               	movwf	strncmp@_r^0,c
   599  000946  0E08               	movlw	high STR_2
   600  000948  6E04               	movwf	(strncmp@_r+1)^0,c
   601  00094A  0E00               	movlw	0
   602  00094C  6E06               	movwf	(strncmp@n+1)^0,c
   603  00094E  0E02               	movlw	2
   604  000950  6E05               	movwf	strncmp@n^0,c
   605  000952  EC08  F008         	call	_strncmp	;wreg free
   606  000956  5001               	movf	?_strncmp^0,w,c
   607  000958  1002               	iorwf	(?_strncmp+1)^0,w,c
   608  00095A  A4D8               	btfss	status,2,c
   609  00095C  EFB2  F004         	goto	u761
   610  000960  EFB4  F004         	goto	u760
   611  000964                     u761:
   612  000964  EF4D  F005         	goto	l1308
   613  000968                     u760:
   614  000968                     
   615                           ;main.c: 91:               UART_Write("Num porta");
   616  000968  0ED6               	movlw	low STR_3
   617  00096A  6E01               	movwf	UART_Write@info^0,c
   618  00096C  0E08               	movlw	high STR_3
   619  00096E  6E02               	movwf	(UART_Write@info+1)^0,c
   620  000970  EC73  F008         	call	_UART_Write	;wreg free
   621  000974                     
   622                           ;main.c: 92:               UART_Read(temp);
   623  000974  0E1F               	movlw	low main@temp
   624  000976  6E01               	movwf	UART_Read@info^0,c
   625  000978  0E00               	movlw	high main@temp
   626  00097A  6E02               	movwf	(UART_Read@info+1)^0,c
   627  00097C  ECBB  F008         	call	_UART_Read	;wreg free
   628  000980                     
   629                           ;main.c: 93:               UART_Write(temp);
   630  000980  0E1F               	movlw	low main@temp
   631  000982  6E01               	movwf	UART_Write@info^0,c
   632  000984  0E00               	movlw	high main@temp
   633  000986  6E02               	movwf	(UART_Write@info+1)^0,c
   634  000988  EC73  F008         	call	_UART_Write	;wreg free
   635  00098C                     
   636                           ;main.c: 94:               numPorta = atoi(temp);
   637  00098C  0E1F               	movlw	low main@temp
   638  00098E  6E08               	movwf	atoi@s^0,c
   639  000990  0E00               	movlw	high main@temp
   640  000992  6E09               	movwf	(atoi@s+1)^0,c
   641  000994  EC29  F006         	call	_atoi	;wreg free
   642  000998  5008               	movf	?_atoi^0,w,c
   643  00099A  6E29               	movwf	main@numPorta^0,c
   644                           
   645                           ;main.c: 95:               switch(numPorta){
   646  00099C  EF20  F005         	goto	l1306
   647  0009A0                     l73:
   648                           
   649                           ;main.c: 97:                       PORTBbits.RB0 = 1;
   650  0009A0  8081               	bsf	129,0,c	;volatile
   651  0009A2                     
   652                           ;main.c: 98:                       UART_Write("LED0 ON\r\n");
   653  0009A2  0E86               	movlw	low STR_4
   654  0009A4  6E01               	movwf	UART_Write@info^0,c
   655  0009A6  0E08               	movlw	high STR_4
   656  0009A8  6E02               	movwf	(UART_Write@info+1)^0,c
   657  0009AA  EC73  F008         	call	_UART_Write	;wreg free
   658                           
   659                           ;main.c: 99:                       break;
   660  0009AE  EF4D  F005         	goto	l1308
   661  0009B2                     l75:
   662                           
   663                           ;main.c: 101:                       PORTBbits.RB1 = 1;
   664  0009B2  8281               	bsf	129,1,c	;volatile
   665  0009B4                     
   666                           ;main.c: 102:                       UART_Write("LED1 ON\r\n");
   667  0009B4  0E90               	movlw	low STR_5
   668  0009B6  6E01               	movwf	UART_Write@info^0,c
   669  0009B8  0E08               	movlw	high STR_5
   670  0009BA  6E02               	movwf	(UART_Write@info+1)^0,c
   671  0009BC  EC73  F008         	call	_UART_Write	;wreg free
   672                           
   673                           ;main.c: 103:                       break;
   674  0009C0  EF4D  F005         	goto	l1308
   675  0009C4                     l76:
   676                           
   677                           ;main.c: 105:                       PORTBbits.RB2 = 1;
   678  0009C4  8481               	bsf	129,2,c	;volatile
   679  0009C6                     
   680                           ;main.c: 106:                       UART_Write("LED2 ON\r\n");
   681  0009C6  0E9A               	movlw	low STR_6
   682  0009C8  6E01               	movwf	UART_Write@info^0,c
   683  0009CA  0E08               	movlw	high STR_6
   684  0009CC  6E02               	movwf	(UART_Write@info+1)^0,c
   685  0009CE  EC73  F008         	call	_UART_Write	;wreg free
   686                           
   687                           ;main.c: 107:                       break;
   688  0009D2  EF4D  F005         	goto	l1308
   689  0009D6                     l77:
   690                           
   691                           ;main.c: 109:                       PORTBbits.RB3 = 1;
   692  0009D6  8681               	bsf	129,3,c	;volatile
   693  0009D8                     
   694                           ;main.c: 110:                       UART_Write("LED3 ON\r\n");
   695  0009D8  0EA4               	movlw	low STR_7
   696  0009DA  6E01               	movwf	UART_Write@info^0,c
   697  0009DC  0E08               	movlw	high STR_7
   698  0009DE  6E02               	movwf	(UART_Write@info+1)^0,c
   699  0009E0  EC73  F008         	call	_UART_Write	;wreg free
   700                           
   701                           ;main.c: 111:                       break;
   702  0009E4  EF4D  F005         	goto	l1308
   703  0009E8                     l78:
   704                           
   705                           ;main.c: 113:                       PORTBbits.RB4 = 1;
   706  0009E8  8881               	bsf	129,4,c	;volatile
   707  0009EA                     
   708                           ;main.c: 114:                       UART_Write("LED4 ON\r\n");
   709  0009EA  0EAE               	movlw	low STR_8
   710  0009EC  6E01               	movwf	UART_Write@info^0,c
   711  0009EE  0E08               	movlw	high STR_8
   712  0009F0  6E02               	movwf	(UART_Write@info+1)^0,c
   713  0009F2  EC73  F008         	call	_UART_Write	;wreg free
   714                           
   715                           ;main.c: 115:                       break;
   716  0009F6  EF4D  F005         	goto	l1308
   717  0009FA                     l79:
   718                           
   719                           ;main.c: 117:                       PORTBbits.RB5 = 1;
   720  0009FA  8A81               	bsf	129,5,c	;volatile
   721  0009FC                     
   722                           ;main.c: 118:                       UART_Write("LED5 ON\r\n");
   723  0009FC  0EB8               	movlw	low STR_9
   724  0009FE  6E01               	movwf	UART_Write@info^0,c
   725  000A00  0E08               	movlw	high STR_9
   726  000A02  6E02               	movwf	(UART_Write@info+1)^0,c
   727  000A04  EC73  F008         	call	_UART_Write	;wreg free
   728                           
   729                           ;main.c: 119:                       break;
   730  000A08  EF4D  F005         	goto	l1308
   731  000A0C                     l80:
   732                           
   733                           ;main.c: 121:                       PORTBbits.RB6 = 1;
   734  000A0C  8C81               	bsf	129,6,c	;volatile
   735  000A0E                     
   736                           ;main.c: 122:                       UART_Write("LED6 ON\r\n");
   737  000A0E  0EC2               	movlw	low STR_10
   738  000A10  6E01               	movwf	UART_Write@info^0,c
   739  000A12  0E08               	movlw	high STR_10
   740  000A14  6E02               	movwf	(UART_Write@info+1)^0,c
   741  000A16  EC73  F008         	call	_UART_Write	;wreg free
   742                           
   743                           ;main.c: 123:                       break;
   744  000A1A  EF4D  F005         	goto	l1308
   745  000A1E                     l81:
   746                           
   747                           ;main.c: 125:                       PORTBbits.RB7 = 1;
   748  000A1E  8E81               	bsf	129,7,c	;volatile
   749  000A20                     
   750                           ;main.c: 126:                       UART_Write("LED7 ON\r\n");
   751  000A20  0ECC               	movlw	low STR_11
   752  000A22  6E01               	movwf	UART_Write@info^0,c
   753  000A24  0E08               	movlw	high STR_11
   754  000A26  6E02               	movwf	(UART_Write@info+1)^0,c
   755  000A28  EC73  F008         	call	_UART_Write	;wreg free
   756                           
   757                           ;main.c: 127:                       break;
   758  000A2C  EF4D  F005         	goto	l1308
   759  000A30                     l1304:
   760                           
   761                           ;main.c: 129:                       UART_Write("Invalido\r\n");
   762  000A30  0E67               	movlw	low STR_12
   763  000A32  6E01               	movwf	UART_Write@info^0,c
   764  000A34  0E08               	movlw	high STR_12
   765  000A36  6E02               	movwf	(UART_Write@info+1)^0,c
   766  000A38  EC73  F008         	call	_UART_Write	;wreg free
   767                           
   768                           ;main.c: 130:               }
   769  000A3C  EF4D  F005         	goto	l1308
   770  000A40                     l1306:
   771  000A40  5029               	movf	main@numPorta^0,w,c
   772  000A42  6E1D               	movwf	??_main^0,c
   773  000A44  6A1E               	clrf	(??_main+1)^0,c
   774                           
   775                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   776                           ; Switch size 1, requested type "simple"
   777                           ; Number of cases is 1, Range of values is 0 to 0
   778                           ; switch strategies available:
   779                           ; Name         Instructions Cycles
   780                           ; simple_byte            4     3 (average)
   781                           ;	Chosen strategy is simple_byte
   782  000A46  501E               	movf	(??_main+1)^0,w,c
   783  000A48  0A00               	xorlw	0	; case 0
   784  000A4A  B4D8               	btfsc	status,2,c
   785  000A4C  EF2A  F005         	goto	l1366
   786  000A50  EF18  F005         	goto	l1304
   787  000A54                     l1366:
   788                           
   789                           ; Switch size 1, requested type "simple"
   790                           ; Number of cases is 8, Range of values is 0 to 7
   791                           ; switch strategies available:
   792                           ; Name         Instructions Cycles
   793                           ; simple_byte           25    13 (average)
   794                           ;	Chosen strategy is simple_byte
   795  000A54  501D               	movf	??_main^0,w,c
   796  000A56  0A00               	xorlw	0	; case 0
   797  000A58  B4D8               	btfsc	status,2,c
   798  000A5A  EFD0  F004         	goto	l73
   799  000A5E  0A01               	xorlw	1	; case 1
   800  000A60  B4D8               	btfsc	status,2,c
   801  000A62  EFD9  F004         	goto	l75
   802  000A66  0A03               	xorlw	3	; case 2
   803  000A68  B4D8               	btfsc	status,2,c
   804  000A6A  EFE2  F004         	goto	l76
   805  000A6E  0A01               	xorlw	1	; case 3
   806  000A70  B4D8               	btfsc	status,2,c
   807  000A72  EFEB  F004         	goto	l77
   808  000A76  0A07               	xorlw	7	; case 4
   809  000A78  B4D8               	btfsc	status,2,c
   810  000A7A  EFF4  F004         	goto	l78
   811  000A7E  0A01               	xorlw	1	; case 5
   812  000A80  B4D8               	btfsc	status,2,c
   813  000A82  EFFD  F004         	goto	l79
   814  000A86  0A03               	xorlw	3	; case 6
   815  000A88  B4D8               	btfsc	status,2,c
   816  000A8A  EF06  F005         	goto	l80
   817  000A8E  0A01               	xorlw	1	; case 7
   818  000A90  B4D8               	btfsc	status,2,c
   819  000A92  EF0F  F005         	goto	l81
   820  000A96  EF18  F005         	goto	l1304
   821  000A9A                     l1308:
   822                           
   823                           ;main.c: 132:           if (strncmp(temp,"OFF",3) == 0) {
   824  000A9A  0E1F               	movlw	low main@temp
   825  000A9C  6E01               	movwf	strncmp@_l^0,c
   826  000A9E  0E00               	movlw	high main@temp
   827  000AA0  6E02               	movwf	(strncmp@_l+1)^0,c
   828  000AA2  0EE9               	movlw	low STR_13
   829  000AA4  6E03               	movwf	strncmp@_r^0,c
   830  000AA6  0E08               	movlw	high STR_13
   831  000AA8  6E04               	movwf	(strncmp@_r+1)^0,c
   832  000AAA  0E00               	movlw	0
   833  000AAC  6E06               	movwf	(strncmp@n+1)^0,c
   834  000AAE  0E03               	movlw	3
   835  000AB0  6E05               	movwf	strncmp@n^0,c
   836  000AB2  EC08  F008         	call	_strncmp	;wreg free
   837  000AB6  5001               	movf	?_strncmp^0,w,c
   838  000AB8  1002               	iorwf	(?_strncmp+1)^0,w,c
   839  000ABA  A4D8               	btfss	status,2,c
   840  000ABC  EF62  F005         	goto	u771
   841  000AC0  EF64  F005         	goto	u770
   842  000AC4                     u771:
   843  000AC4  EF03  F006         	goto	l1338
   844  000AC8                     u770:
   845  000AC8                     
   846                           ;main.c: 133:               UART_Write("LED OFF\r\n");
   847  000AC8  0E7C               	movlw	low STR_14
   848  000ACA  6E01               	movwf	UART_Write@info^0,c
   849  000ACC  0E08               	movlw	high STR_14
   850  000ACE  6E02               	movwf	(UART_Write@info+1)^0,c
   851  000AD0  EC73  F008         	call	_UART_Write	;wreg free
   852                           
   853                           ;main.c: 134:               UART_Write("Num porta");
   854  000AD4  0ED6               	movlw	low STR_3
   855  000AD6  6E01               	movwf	UART_Write@info^0,c
   856  000AD8  0E08               	movlw	high STR_3
   857  000ADA  6E02               	movwf	(UART_Write@info+1)^0,c
   858  000ADC  EC73  F008         	call	_UART_Write	;wreg free
   859  000AE0                     
   860                           ;main.c: 135:               UART_Read(temp);
   861  000AE0  0E1F               	movlw	low main@temp
   862  000AE2  6E01               	movwf	UART_Read@info^0,c
   863  000AE4  0E00               	movlw	high main@temp
   864  000AE6  6E02               	movwf	(UART_Read@info+1)^0,c
   865  000AE8  ECBB  F008         	call	_UART_Read	;wreg free
   866  000AEC                     
   867                           ;main.c: 136:               UART_Write(temp);
   868  000AEC  0E1F               	movlw	low main@temp
   869  000AEE  6E01               	movwf	UART_Write@info^0,c
   870  000AF0  0E00               	movlw	high main@temp
   871  000AF2  6E02               	movwf	(UART_Write@info+1)^0,c
   872  000AF4  EC73  F008         	call	_UART_Write	;wreg free
   873  000AF8                     
   874                           ;main.c: 137:               numPorta = atoi(temp);
   875  000AF8  0E1F               	movlw	low main@temp
   876  000AFA  6E08               	movwf	atoi@s^0,c
   877  000AFC  0E00               	movlw	high main@temp
   878  000AFE  6E09               	movwf	(atoi@s+1)^0,c
   879  000B00  EC29  F006         	call	_atoi	;wreg free
   880  000B04  5008               	movf	?_atoi^0,w,c
   881  000B06  6E29               	movwf	main@numPorta^0,c
   882                           
   883                           ;main.c: 138:               switch(numPorta){
   884  000B08  EFD6  F005         	goto	l1336
   885  000B0C                     l85:
   886                           
   887                           ;main.c: 140:                       PORTBbits.RB0 = 0;
   888  000B0C  9081               	bcf	129,0,c	;volatile
   889  000B0E                     
   890                           ;main.c: 141:                       UART_Write("LED0 OFF\r\n");
   891  000B0E  0E0F               	movlw	low STR_16
   892  000B10  6E01               	movwf	UART_Write@info^0,c
   893  000B12  0E08               	movlw	high STR_16
   894  000B14  6E02               	movwf	(UART_Write@info+1)^0,c
   895  000B16  EC73  F008         	call	_UART_Write	;wreg free
   896                           
   897                           ;main.c: 142:                       break;
   898  000B1A  EF03  F006         	goto	l1338
   899  000B1E                     l87:
   900                           
   901                           ;main.c: 144:                       PORTBbits.RB1 = 0;
   902  000B1E  9281               	bcf	129,1,c	;volatile
   903  000B20                     
   904                           ;main.c: 145:                       UART_Write("LED1 OFF\r\n");
   905  000B20  0E1A               	movlw	low STR_17
   906  000B22  6E01               	movwf	UART_Write@info^0,c
   907  000B24  0E08               	movlw	high STR_17
   908  000B26  6E02               	movwf	(UART_Write@info+1)^0,c
   909  000B28  EC73  F008         	call	_UART_Write	;wreg free
   910                           
   911                           ;main.c: 146:                       break;
   912  000B2C  EF03  F006         	goto	l1338
   913  000B30                     l88:
   914                           
   915                           ;main.c: 148:                       PORTBbits.RB2 = 0;
   916  000B30  9481               	bcf	129,2,c	;volatile
   917  000B32                     
   918                           ;main.c: 149:                       UART_Write("LED2 OFF\r\n");
   919  000B32  0E25               	movlw	low STR_18
   920  000B34  6E01               	movwf	UART_Write@info^0,c
   921  000B36  0E08               	movlw	high STR_18
   922  000B38  6E02               	movwf	(UART_Write@info+1)^0,c
   923  000B3A  EC73  F008         	call	_UART_Write	;wreg free
   924                           
   925                           ;main.c: 150:                       break;
   926  000B3E  EF03  F006         	goto	l1338
   927  000B42                     l89:
   928                           
   929                           ;main.c: 152:                       PORTBbits.RB3 = 0;
   930  000B42  9681               	bcf	129,3,c	;volatile
   931  000B44                     
   932                           ;main.c: 153:                       UART_Write("LED3 OFF\r\n");
   933  000B44  0E30               	movlw	low STR_19
   934  000B46  6E01               	movwf	UART_Write@info^0,c
   935  000B48  0E08               	movlw	high STR_19
   936  000B4A  6E02               	movwf	(UART_Write@info+1)^0,c
   937  000B4C  EC73  F008         	call	_UART_Write	;wreg free
   938                           
   939                           ;main.c: 154:                       break;
   940  000B50  EF03  F006         	goto	l1338
   941  000B54                     l90:
   942                           
   943                           ;main.c: 156:                       PORTBbits.RB4 = 0;
   944  000B54  9881               	bcf	129,4,c	;volatile
   945  000B56                     
   946                           ;main.c: 157:                       UART_Write("LED4 OFF\r\n");
   947  000B56  0E3B               	movlw	low STR_20
   948  000B58  6E01               	movwf	UART_Write@info^0,c
   949  000B5A  0E08               	movlw	high STR_20
   950  000B5C  6E02               	movwf	(UART_Write@info+1)^0,c
   951  000B5E  EC73  F008         	call	_UART_Write	;wreg free
   952                           
   953                           ;main.c: 158:                       break;
   954  000B62  EF03  F006         	goto	l1338
   955  000B66                     l91:
   956                           
   957                           ;main.c: 160:                       PORTBbits.RB5 = 0;
   958  000B66  9A81               	bcf	129,5,c	;volatile
   959  000B68                     
   960                           ;main.c: 161:                       UART_Write("LED5 OFF\r\n");
   961  000B68  0E46               	movlw	low STR_21
   962  000B6A  6E01               	movwf	UART_Write@info^0,c
   963  000B6C  0E08               	movlw	high STR_21
   964  000B6E  6E02               	movwf	(UART_Write@info+1)^0,c
   965  000B70  EC73  F008         	call	_UART_Write	;wreg free
   966                           
   967                           ;main.c: 162:                       break;
   968  000B74  EF03  F006         	goto	l1338
   969  000B78                     l92:
   970                           
   971                           ;main.c: 164:                       PORTBbits.RB6 = 0;
   972  000B78  9C81               	bcf	129,6,c	;volatile
   973  000B7A                     
   974                           ;main.c: 165:                       UART_Write("LED6 OFF\r\n");
   975  000B7A  0E51               	movlw	low STR_22
   976  000B7C  6E01               	movwf	UART_Write@info^0,c
   977  000B7E  0E08               	movlw	high STR_22
   978  000B80  6E02               	movwf	(UART_Write@info+1)^0,c
   979  000B82  EC73  F008         	call	_UART_Write	;wreg free
   980                           
   981                           ;main.c: 166:                       break;
   982  000B86  EF03  F006         	goto	l1338
   983  000B8A                     l93:
   984                           
   985                           ;main.c: 168:                       PORTBbits.RB7 = 0;
   986  000B8A  9E81               	bcf	129,7,c	;volatile
   987  000B8C                     
   988                           ;main.c: 169:                       UART_Write("LED7 OFF\r\n");
   989  000B8C  0E5C               	movlw	low STR_23
   990  000B8E  6E01               	movwf	UART_Write@info^0,c
   991  000B90  0E08               	movlw	high STR_23
   992  000B92  6E02               	movwf	(UART_Write@info+1)^0,c
   993  000B94  EC73  F008         	call	_UART_Write	;wreg free
   994                           
   995                           ;main.c: 170:                       break;
   996  000B98  EF03  F006         	goto	l1338
   997  000B9C                     l1334:
   998                           
   999                           ;main.c: 172:                       UART_Write("Invalido\r\n");
  1000  000B9C  0E67               	movlw	low STR_12
  1001  000B9E  6E01               	movwf	UART_Write@info^0,c
  1002  000BA0  0E08               	movlw	high STR_12
  1003  000BA2  6E02               	movwf	(UART_Write@info+1)^0,c
  1004  000BA4  EC73  F008         	call	_UART_Write	;wreg free
  1005                           
  1006                           ;main.c: 173:               }
  1007  000BA8  EF03  F006         	goto	l1338
  1008  000BAC                     l1336:
  1009  000BAC  5029               	movf	main@numPorta^0,w,c
  1010  000BAE  6E1D               	movwf	??_main^0,c
  1011  000BB0  6A1E               	clrf	(??_main+1)^0,c
  1012                           
  1013                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1014                           ; Switch size 1, requested type "simple"
  1015                           ; Number of cases is 1, Range of values is 0 to 0
  1016                           ; switch strategies available:
  1017                           ; Name         Instructions Cycles
  1018                           ; simple_byte            4     3 (average)
  1019                           ;	Chosen strategy is simple_byte
  1020  000BB2  501E               	movf	(??_main+1)^0,w,c
  1021  000BB4  0A00               	xorlw	0	; case 0
  1022  000BB6  B4D8               	btfsc	status,2,c
  1023  000BB8  EFE0  F005         	goto	l1368
  1024  000BBC  EFCE  F005         	goto	l1334
  1025  000BC0                     l1368:
  1026                           
  1027                           ; Switch size 1, requested type "simple"
  1028                           ; Number of cases is 8, Range of values is 0 to 7
  1029                           ; switch strategies available:
  1030                           ; Name         Instructions Cycles
  1031                           ; simple_byte           25    13 (average)
  1032                           ;	Chosen strategy is simple_byte
  1033  000BC0  501D               	movf	??_main^0,w,c
  1034  000BC2  0A00               	xorlw	0	; case 0
  1035  000BC4  B4D8               	btfsc	status,2,c
  1036  000BC6  EF86  F005         	goto	l85
  1037  000BCA  0A01               	xorlw	1	; case 1
  1038  000BCC  B4D8               	btfsc	status,2,c
  1039  000BCE  EF8F  F005         	goto	l87
  1040  000BD2  0A03               	xorlw	3	; case 2
  1041  000BD4  B4D8               	btfsc	status,2,c
  1042  000BD6  EF98  F005         	goto	l88
  1043  000BDA  0A01               	xorlw	1	; case 3
  1044  000BDC  B4D8               	btfsc	status,2,c
  1045  000BDE  EFA1  F005         	goto	l89
  1046  000BE2  0A07               	xorlw	7	; case 4
  1047  000BE4  B4D8               	btfsc	status,2,c
  1048  000BE6  EFAA  F005         	goto	l90
  1049  000BEA  0A01               	xorlw	1	; case 5
  1050  000BEC  B4D8               	btfsc	status,2,c
  1051  000BEE  EFB3  F005         	goto	l91
  1052  000BF2  0A03               	xorlw	3	; case 6
  1053  000BF4  B4D8               	btfsc	status,2,c
  1054  000BF6  EFBC  F005         	goto	l92
  1055  000BFA  0A01               	xorlw	1	; case 7
  1056  000BFC  B4D8               	btfsc	status,2,c
  1057  000BFE  EFC5  F005         	goto	l93
  1058  000C02  EFCE  F005         	goto	l1334
  1059  000C06                     l1338:
  1060                           
  1061                           ;main.c: 175:           if (strncmp(temp,"Out",3) == 0) {
  1062  000C06  0E1F               	movlw	low main@temp
  1063  000C08  6E01               	movwf	strncmp@_l^0,c
  1064  000C0A  0E00               	movlw	high main@temp
  1065  000C0C  6E02               	movwf	(strncmp@_l+1)^0,c
  1066  000C0E  0EED               	movlw	low STR_25
  1067  000C10  6E03               	movwf	strncmp@_r^0,c
  1068  000C12  0E08               	movlw	high STR_25
  1069  000C14  6E04               	movwf	(strncmp@_r+1)^0,c
  1070  000C16  0E00               	movlw	0
  1071  000C18  6E06               	movwf	(strncmp@n+1)^0,c
  1072  000C1A  0E03               	movlw	3
  1073  000C1C  6E05               	movwf	strncmp@n^0,c
  1074  000C1E  EC08  F008         	call	_strncmp	;wreg free
  1075  000C22  5001               	movf	?_strncmp^0,w,c
  1076  000C24  1002               	iorwf	(?_strncmp+1)^0,w,c
  1077  000C26  A4D8               	btfss	status,2,c
  1078  000C28  EF18  F006         	goto	u781
  1079  000C2C  EF1A  F006         	goto	u780
  1080  000C30                     u781:
  1081  000C30  EF91  F004         	goto	l1274
  1082  000C34                     u780:
  1083  000C34                     
  1084                           ;main.c: 176:                UART_Write("Program Out\r\n");
  1085  000C34  0E01               	movlw	low STR_26
  1086  000C36  6E01               	movwf	UART_Write@info^0,c
  1087  000C38  0E08               	movlw	high STR_26
  1088  000C3A  6E02               	movwf	(UART_Write@info+1)^0,c
  1089  000C3C  EC73  F008         	call	_UART_Write	;wreg free
  1090  000C40                     
  1091                           ;main.c: 177:                PORTBbits.RB1 = 0;
  1092  000C40  9281               	bcf	129,1,c	;volatile
  1093  000C42                     
  1094                           ;main.c: 181:      UART_Write("Finish!\r\n");
  1095  000C42  0E72               	movlw	low STR_27
  1096  000C44  6E01               	movwf	UART_Write@info^0,c
  1097  000C46  0E08               	movlw	high STR_27
  1098  000C48  6E02               	movwf	(UART_Write@info+1)^0,c
  1099  000C4A  EC73  F008         	call	_UART_Write	;wreg free
  1100  000C4E  EF00  F000         	goto	start
  1101  000C52                     __end_of_main:
  1102                           	opt callstack 0
  1103                           
  1104 ;; *************** function _strncmp *****************
  1105 ;; Defined at:
  1106 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  1107 ;; Parameters:    Size  Location     Type
  1108 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  1109 ;;		 -> main@temp(10), 
  1110 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  1111 ;;		 -> STR_25(4), STR_13(4), STR_2(3), 
  1112 ;;  n               2    4[COMRAM] unsigned int 
  1113 ;; Auto vars:     Size  Location     Type
  1114 ;;  r               2    9[COMRAM] PTR const unsigned char 
  1115 ;;		 -> STR_25(4), STR_13(4), STR_2(3), 
  1116 ;;  l               2    7[COMRAM] PTR const unsigned char 
  1117 ;;		 -> main@temp(10), 
  1118 ;; Return value:  Size  Location     Type
  1119 ;;                  2    0[COMRAM] int 
  1120 ;; Registers used:
  1121 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1122 ;; Tracked objects:
  1123 ;;		On entry : 0/0
  1124 ;;		On exit  : 0/0
  1125 ;;		Unchanged: 0/0
  1126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1127 ;;      Params:         6       0       0       0       0       0       0       0       0
  1128 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1129 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1130 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1131 ;;Total ram usage:       11 bytes
  1132 ;; Hardware stack levels used:    1
  1133 ;; This function calls:
  1134 ;;		Nothing
  1135 ;; This function is called by:
  1136 ;;		_main
  1137 ;; This function uses a non-reentrant model
  1138 ;;
  1139                           
  1140                           	psect	text1
  1141  001010                     __ptext1:
  1142                           	opt callstack 0
  1143  001010                     _strncmp:
  1144                           	opt callstack 30
  1145  001010  C001  F008         	movff	strncmp@_l,strncmp@l
  1146  001014  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  1147  001018  C003  F00A         	movff	strncmp@_r,strncmp@r
  1148  00101C  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  1149  001020  0605               	decf	strncmp@n^0,f,c
  1150  001022  A0D8               	btfss	status,0,c
  1151  001024  0606               	decf	(strncmp@n+1)^0,f,c
  1152  001026  2805               	incf	strncmp@n^0,w,c
  1153  001028  E106               	bnz	u641
  1154  00102A  2806               	incf	(strncmp@n+1)^0,w,c
  1155  00102C  A4D8               	btfss	status,2,c
  1156  00102E  EF1B  F008         	goto	u641
  1157  001032  EF1D  F008         	goto	u640
  1158  001036                     u641:
  1159  001036  EF2A  F008         	goto	l1212
  1160  00103A                     u640:
  1161  00103A  0E00               	movlw	0
  1162  00103C  6E02               	movwf	(?_strncmp+1)^0,c
  1163  00103E  0E00               	movlw	0
  1164  001040  6E01               	movwf	?_strncmp^0,c
  1165  001042  EF72  F008         	goto	l821
  1166  001046                     l1210:
  1167  001046  4A08               	infsnz	strncmp@l^0,f,c
  1168  001048  2A09               	incf	(strncmp@l+1)^0,f,c
  1169  00104A  4A0A               	infsnz	strncmp@r^0,f,c
  1170  00104C  2A0B               	incf	(strncmp@r+1)^0,f,c
  1171  00104E  0605               	decf	strncmp@n^0,f,c
  1172  001050  A0D8               	btfss	status,0,c
  1173  001052  0606               	decf	(strncmp@n+1)^0,f,c
  1174  001054                     l1212:
  1175  001054  C008  FFD9         	movff	strncmp@l,fsr2l
  1176  001058  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1177  00105C  50DF               	movf	indf2,w,c
  1178  00105E  B4D8               	btfsc	status,2,c
  1179  001060  EF34  F008         	goto	u651
  1180  001064  EF36  F008         	goto	u650
  1181  001068                     u651:
  1182  001068  EF61  F008         	goto	l1220
  1183  00106C                     u650:
  1184  00106C  C00A  FFF6         	movff	strncmp@r,tblptrl
  1185  001070  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1186  001074                     	if	0	;tblptru may be non-zero
  1187  001074                     	endif
  1188  001074                     	if	0	;tblptru may be non-zero
  1189  001074                     	endif
  1190  001074  0008               	tblrd		*
  1191  001076  50F5               	movf	tablat,w,c
  1192  001078  0900               	iorlw	0
  1193  00107A  B4D8               	btfsc	status,2,c
  1194  00107C  EF42  F008         	goto	u661
  1195  001080  EF44  F008         	goto	u660
  1196  001084                     u661:
  1197  001084  EF61  F008         	goto	l1220
  1198  001088                     u660:
  1199  001088  5005               	movf	strncmp@n^0,w,c
  1200  00108A  1006               	iorwf	(strncmp@n+1)^0,w,c
  1201  00108C  B4D8               	btfsc	status,2,c
  1202  00108E  EF4B  F008         	goto	u671
  1203  001092  EF4D  F008         	goto	u670
  1204  001096                     u671:
  1205  001096  EF61  F008         	goto	l1220
  1206  00109A                     u670:
  1207  00109A  C008  FFD9         	movff	strncmp@l,fsr2l
  1208  00109E  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1209  0010A2  50DF               	movf	indf2,w,c
  1210  0010A4  6E07               	movwf	??_strncmp^0,c
  1211  0010A6  C00A  FFF6         	movff	strncmp@r,tblptrl
  1212  0010AA  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1213  0010AE                     	if	0	;tblptru may be non-zero
  1214  0010AE                     	endif
  1215  0010AE                     	if	0	;tblptru may be non-zero
  1216  0010AE                     	endif
  1217  0010AE  0008               	tblrd		*
  1218  0010B0  50F5               	movf	tablat,w,c
  1219  0010B2  1807               	xorwf	??_strncmp^0,w,c
  1220  0010B4  B4D8               	btfsc	status,2,c
  1221  0010B6  EF5F  F008         	goto	u681
  1222  0010BA  EF61  F008         	goto	u680
  1223  0010BE                     u681:
  1224  0010BE  EF23  F008         	goto	l1210
  1225  0010C2                     u680:
  1226  0010C2                     l1220:
  1227  0010C2  C008  FFD9         	movff	strncmp@l,fsr2l
  1228  0010C6  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1229  0010CA  50DF               	movf	indf2,w,c
  1230  0010CC  6E07               	movwf	??_strncmp^0,c
  1231  0010CE  C00A  FFF6         	movff	strncmp@r,tblptrl
  1232  0010D2  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1233  0010D6                     	if	0	;tblptru may be non-zero
  1234  0010D6                     	endif
  1235  0010D6                     	if	0	;tblptru may be non-zero
  1236  0010D6                     	endif
  1237  0010D6  0008               	tblrd		*
  1238  0010D8  50F5               	movf	tablat,w,c
  1239  0010DA  5C07               	subwf	??_strncmp^0,w,c
  1240  0010DC  6E01               	movwf	?_strncmp^0,c
  1241  0010DE  6A02               	clrf	(?_strncmp+1)^0,c
  1242  0010E0  A0D8               	btfss	status,0,c
  1243  0010E2  0602               	decf	(?_strncmp+1)^0,f,c
  1244  0010E4                     l821:
  1245  0010E4  0012               	return		;funcret
  1246  0010E6                     __end_of_strncmp:
  1247                           	opt callstack 0
  1248                           
  1249 ;; *************** function _atoi *****************
  1250 ;; Defined at:
  1251 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  1252 ;; Parameters:    Size  Location     Type
  1253 ;;  s               2    7[COMRAM] PTR const unsigned char 
  1254 ;;		 -> main@temp(10), 
  1255 ;; Auto vars:     Size  Location     Type
  1256 ;;  n               2   20[COMRAM] int 
  1257 ;;  neg             2   13[COMRAM] int 
  1258 ;; Return value:  Size  Location     Type
  1259 ;;                  2    7[COMRAM] int 
  1260 ;; Registers used:
  1261 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1262 ;; Tracked objects:
  1263 ;;		On entry : 0/0
  1264 ;;		On exit  : 0/0
  1265 ;;		Unchanged: 0/0
  1266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1267 ;;      Params:         2       0       0       0       0       0       0       0       0
  1268 ;;      Locals:         9       0       0       0       0       0       0       0       0
  1269 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1270 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1271 ;;Total ram usage:       15 bytes
  1272 ;; Hardware stack levels used:    1
  1273 ;; Hardware stack levels required when called:    1
  1274 ;; This function calls:
  1275 ;;		___wmul
  1276 ;;		_isdigit
  1277 ;;		_isspace
  1278 ;; This function is called by:
  1279 ;;		_main
  1280 ;; This function uses a non-reentrant model
  1281 ;;
  1282                           
  1283                           	psect	text2
  1284  000C52                     __ptext2:
  1285                           	opt callstack 0
  1286  000C52                     _atoi:
  1287                           	opt callstack 29
  1288  000C52  0E00               	movlw	0
  1289  000C54  6E16               	movwf	(atoi@n+1)^0,c
  1290  000C56  0E00               	movlw	0
  1291  000C58  6E15               	movwf	atoi@n^0,c
  1292  000C5A  0E00               	movlw	0
  1293  000C5C  6E0F               	movwf	(atoi@neg+1)^0,c
  1294  000C5E  0E00               	movlw	0
  1295  000C60  6E0E               	movwf	atoi@neg^0,c
  1296  000C62  EF35  F006         	goto	l1228
  1297  000C66                     l1226:
  1298  000C66  4A08               	infsnz	atoi@s^0,f,c
  1299  000C68  2A09               	incf	(atoi@s+1)^0,f,c
  1300  000C6A                     l1228:
  1301  000C6A  0E01               	movlw	1
  1302  000C6C  6E14               	movwf	_atoi$762^0,c
  1303  000C6E  C008  FFD9         	movff	atoi@s,fsr2l
  1304  000C72  C009  FFDA         	movff	atoi@s+1,fsr2h
  1305  000C76  0E20               	movlw	32
  1306  000C78  18DE               	xorwf	postinc2,w,c
  1307  000C7A  B4D8               	btfsc	status,2,c
  1308  000C7C  EF42  F006         	goto	u691
  1309  000C80  EF44  F006         	goto	u690
  1310  000C84                     u691:
  1311  000C84  EF60  F006         	goto	l1236
  1312  000C88                     u690:
  1313  000C88  0EF7               	movlw	247
  1314  000C8A  6E0A               	movwf	??_atoi^0,c
  1315  000C8C  0EFF               	movlw	255
  1316  000C8E  6E0B               	movwf	(??_atoi+1)^0,c
  1317  000C90  C008  FFD9         	movff	atoi@s,fsr2l
  1318  000C94  C009  FFDA         	movff	atoi@s+1,fsr2h
  1319  000C98  50DF               	movf	indf2,w,c
  1320  000C9A  6E0C               	movwf	(??_atoi+2)^0,c
  1321  000C9C  6A0D               	clrf	(??_atoi+3)^0,c
  1322  000C9E  500A               	movf	??_atoi^0,w,c
  1323  000CA0  260C               	addwf	(??_atoi+2)^0,f,c
  1324  000CA2  500B               	movf	(??_atoi+1)^0,w,c
  1325  000CA4  220D               	addwfc	(??_atoi+3)^0,f,c
  1326  000CA6  500D               	movf	(??_atoi+3)^0,w,c
  1327  000CA8  E109               	bnz	u700
  1328  000CAA  0E05               	movlw	5
  1329  000CAC  5C0C               	subwf	(??_atoi+2)^0,w,c
  1330  000CAE  A0D8               	btfss	status,0,c
  1331  000CB0  EF5C  F006         	goto	u701
  1332  000CB4  EF5E  F006         	goto	u700
  1333  000CB8                     u701:
  1334  000CB8  EF60  F006         	goto	l1236
  1335  000CBC                     u700:
  1336  000CBC  0E00               	movlw	0
  1337  000CBE  6E14               	movwf	_atoi$762^0,c
  1338  000CC0                     l1236:
  1339  000CC0  C014  F010         	movff	_atoi$762,_atoi$761
  1340  000CC4  6A11               	clrf	(_atoi$761+1)^0,c
  1341  000CC6  5010               	movf	_atoi$761^0,w,c
  1342  000CC8  1011               	iorwf	(_atoi$761+1)^0,w,c
  1343  000CCA  A4D8               	btfss	status,2,c
  1344  000CCC  EF6A  F006         	goto	u711
  1345  000CD0  EF6C  F006         	goto	u710
  1346  000CD4                     u711:
  1347  000CD4  EF33  F006         	goto	l1226
  1348  000CD8                     u710:
  1349  000CD8  EF76  F006         	goto	l1246
  1350  000CDC                     l1242:
  1351  000CDC  0E00               	movlw	0
  1352  000CDE  6E0F               	movwf	(atoi@neg+1)^0,c
  1353  000CE0  0E01               	movlw	1
  1354  000CE2  6E0E               	movwf	atoi@neg^0,c
  1355  000CE4                     l1244:
  1356  000CE4  4A08               	infsnz	atoi@s^0,f,c
  1357  000CE6  2A09               	incf	(atoi@s+1)^0,f,c
  1358  000CE8  EFAB  F006         	goto	l1252
  1359  000CEC                     l1246:
  1360  000CEC  C008  FFD9         	movff	atoi@s,fsr2l
  1361  000CF0  C009  FFDA         	movff	atoi@s+1,fsr2h
  1362  000CF4  50DF               	movf	indf2,w,c
  1363  000CF6  6E0A               	movwf	??_atoi^0,c
  1364  000CF8  6A0B               	clrf	(??_atoi+1)^0,c
  1365                           
  1366                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1367                           ; Switch size 1, requested type "simple"
  1368                           ; Number of cases is 1, Range of values is 0 to 0
  1369                           ; switch strategies available:
  1370                           ; Name         Instructions Cycles
  1371                           ; simple_byte            4     3 (average)
  1372                           ;	Chosen strategy is simple_byte
  1373  000CFA  500B               	movf	(??_atoi+1)^0,w,c
  1374  000CFC  0A00               	xorlw	0	; case 0
  1375  000CFE  B4D8               	btfsc	status,2,c
  1376  000D00  EF84  F006         	goto	l1370
  1377  000D04  EFAB  F006         	goto	l1252
  1378  000D08                     l1370:
  1379                           
  1380                           ; Switch size 1, requested type "simple"
  1381                           ; Number of cases is 2, Range of values is 43 to 45
  1382                           ; switch strategies available:
  1383                           ; Name         Instructions Cycles
  1384                           ; simple_byte            7     4 (average)
  1385                           ;	Chosen strategy is simple_byte
  1386  000D08  500A               	movf	??_atoi^0,w,c
  1387  000D0A  0A2B               	xorlw	43	; case 43
  1388  000D0C  B4D8               	btfsc	status,2,c
  1389  000D0E  EF72  F006         	goto	l1244
  1390  000D12  0A06               	xorlw	6	; case 45
  1391  000D14  B4D8               	btfsc	status,2,c
  1392  000D16  EF6E  F006         	goto	l1242
  1393  000D1A  EFAB  F006         	goto	l1252
  1394  000D1E                     l1248:
  1395  000D1E  C015  F001         	movff	atoi@n,___wmul@multiplier
  1396  000D22  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  1397  000D26  0E00               	movlw	0
  1398  000D28  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1399  000D2A  0E0A               	movlw	10
  1400  000D2C  6E03               	movwf	___wmul@multiplicand^0,c
  1401  000D2E  EC47  F009         	call	___wmul	;wreg free
  1402  000D32  C008  FFD9         	movff	atoi@s,fsr2l
  1403  000D36  C009  FFDA         	movff	atoi@s+1,fsr2h
  1404  000D3A  50DF               	movf	indf2,w,c
  1405  000D3C  6E0A               	movwf	??_atoi^0,c
  1406  000D3E  500A               	movf	??_atoi^0,w,c
  1407  000D40  5E01               	subwf	?___wmul^0,f,c
  1408  000D42  0E00               	movlw	0
  1409  000D44  5A02               	subwfb	(?___wmul+1)^0,f,c
  1410  000D46  0E30               	movlw	48
  1411  000D48  2401               	addwf	?___wmul^0,w,c
  1412  000D4A  6E15               	movwf	atoi@n^0,c
  1413  000D4C  0E00               	movlw	0
  1414  000D4E  2002               	addwfc	(?___wmul+1)^0,w,c
  1415  000D50  6E16               	movwf	(atoi@n+1)^0,c
  1416  000D52  EF72  F006         	goto	l1244
  1417  000D56                     l1252:
  1418  000D56  0ED0               	movlw	208
  1419  000D58  6E0A               	movwf	??_atoi^0,c
  1420  000D5A  0EFF               	movlw	255
  1421  000D5C  6E0B               	movwf	(??_atoi+1)^0,c
  1422  000D5E  C008  FFD9         	movff	atoi@s,fsr2l
  1423  000D62  C009  FFDA         	movff	atoi@s+1,fsr2h
  1424  000D66  50DF               	movf	indf2,w,c
  1425  000D68  6E0C               	movwf	(??_atoi+2)^0,c
  1426  000D6A  6A0D               	clrf	(??_atoi+3)^0,c
  1427  000D6C  500A               	movf	??_atoi^0,w,c
  1428  000D6E  260C               	addwf	(??_atoi+2)^0,f,c
  1429  000D70  500B               	movf	(??_atoi+1)^0,w,c
  1430  000D72  220D               	addwfc	(??_atoi+3)^0,f,c
  1431  000D74  500D               	movf	(??_atoi+3)^0,w,c
  1432  000D76  E10A               	bnz	u720
  1433  000D78  0E0A               	movlw	10
  1434  000D7A  5C0C               	subwf	(??_atoi+2)^0,w,c
  1435  000D7C  A0D8               	btfss	status,0,c
  1436  000D7E  EFC3  F006         	goto	u721
  1437  000D82  EFC6  F006         	goto	u720
  1438  000D86                     u721:
  1439  000D86  0E01               	movlw	1
  1440  000D88  EFC7  F006         	goto	u730
  1441  000D8C                     u720:
  1442  000D8C  0E00               	movlw	0
  1443  000D8E                     u730:
  1444  000D8E  6E12               	movwf	_atoi$763^0,c
  1445  000D90  6A13               	clrf	(_atoi$763+1)^0,c
  1446  000D92  5012               	movf	_atoi$763^0,w,c
  1447  000D94  1013               	iorwf	(_atoi$763+1)^0,w,c
  1448  000D96  A4D8               	btfss	status,2,c
  1449  000D98  EFD0  F006         	goto	u741
  1450  000D9C  EFD2  F006         	goto	u740
  1451  000DA0                     u741:
  1452  000DA0  EF8F  F006         	goto	l1248
  1453  000DA4                     u740:
  1454  000DA4  500E               	movf	atoi@neg^0,w,c
  1455  000DA6  100F               	iorwf	(atoi@neg+1)^0,w,c
  1456  000DA8  A4D8               	btfss	status,2,c
  1457  000DAA  EFD9  F006         	goto	u751
  1458  000DAE  EFDB  F006         	goto	u750
  1459  000DB2                     u751:
  1460  000DB2  EFE9  F006         	goto	l800
  1461  000DB6                     u750:
  1462  000DB6  C015  F00A         	movff	atoi@n,??_atoi
  1463  000DBA  C016  F00B         	movff	atoi@n+1,??_atoi+1
  1464  000DBE  1E0A               	comf	??_atoi^0,f,c
  1465  000DC0  1E0B               	comf	(??_atoi+1)^0,f,c
  1466  000DC2  4A0A               	infsnz	??_atoi^0,f,c
  1467  000DC4  2A0B               	incf	(??_atoi+1)^0,f,c
  1468  000DC6  C00A  F008         	movff	??_atoi,?_atoi
  1469  000DCA  C00B  F009         	movff	??_atoi+1,?_atoi+1
  1470  000DCE  EFED  F006         	goto	l803
  1471  000DD2                     l800:
  1472  000DD2  C015  F008         	movff	atoi@n,?_atoi
  1473  000DD6  C016  F009         	movff	atoi@n+1,?_atoi+1
  1474  000DDA                     l803:
  1475  000DDA  0012               	return		;funcret
  1476  000DDC                     __end_of_atoi:
  1477                           	opt callstack 0
  1478                           
  1479 ;; *************** function _isspace *****************
  1480 ;; Defined at:
  1481 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;  c               2    0[COMRAM] int 
  1484 ;; Auto vars:     Size  Location     Type
  1485 ;;		None
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  2    0[COMRAM] int 
  1488 ;; Registers used:
  1489 ;;		wreg, status,2, status,0
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1495 ;;      Params:         2       0       0       0       0       0       0       0       0
  1496 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1497 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1498 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1499 ;;Total ram usage:        7 bytes
  1500 ;; Hardware stack levels used:    1
  1501 ;; This function calls:
  1502 ;;		Nothing
  1503 ;; This function is called by:
  1504 ;;		_atoi
  1505 ;; This function uses a non-reentrant model
  1506 ;;
  1507                           
  1508                           	psect	text3
  1509  001204                     __ptext3:
  1510                           	opt callstack 0
  1511  001204                     _isspace:
  1512                           	opt callstack 29
  1513  001204  0E01               	movlw	1
  1514  001206  6E07               	movwf	_isspace$779^0,c
  1515  001208  0E20               	movlw	32
  1516  00120A  1801               	xorwf	isspace@c^0,w,c
  1517  00120C  1002               	iorwf	(isspace@c+1)^0,w,c
  1518  00120E  B4D8               	btfsc	status,2,c
  1519  001210  EF0C  F009         	goto	u471
  1520  001214  EF0E  F009         	goto	u470
  1521  001218                     u471:
  1522  001218  EF27  F009         	goto	l1162
  1523  00121C                     u470:
  1524  00121C  0EF7               	movlw	247
  1525  00121E  6E03               	movwf	??_isspace^0,c
  1526  001220  0EFF               	movlw	255
  1527  001222  6E04               	movwf	(??_isspace+1)^0,c
  1528  001224  C001  F005         	movff	isspace@c,??_isspace+2
  1529  001228  C002  F006         	movff	isspace@c+1,??_isspace+3
  1530  00122C  5003               	movf	??_isspace^0,w,c
  1531  00122E  2605               	addwf	(??_isspace+2)^0,f,c
  1532  001230  5004               	movf	(??_isspace+1)^0,w,c
  1533  001232  2206               	addwfc	(??_isspace+3)^0,f,c
  1534  001234  5006               	movf	(??_isspace+3)^0,w,c
  1535  001236  E109               	bnz	u480
  1536  001238  0E05               	movlw	5
  1537  00123A  5C05               	subwf	(??_isspace+2)^0,w,c
  1538  00123C  A0D8               	btfss	status,0,c
  1539  00123E  EF23  F009         	goto	u481
  1540  001242  EF25  F009         	goto	u480
  1541  001246                     u481:
  1542  001246  EF27  F009         	goto	l1162
  1543  00124A                     u480:
  1544  00124A  0E00               	movlw	0
  1545  00124C  6E07               	movwf	_isspace$779^0,c
  1546  00124E                     l1162:
  1547  00124E  C007  F001         	movff	_isspace$779,?_isspace
  1548  001252  6A02               	clrf	(?_isspace+1)^0,c
  1549  001254  0012               	return		;funcret
  1550  001256                     __end_of_isspace:
  1551                           	opt callstack 0
  1552                           
  1553 ;; *************** function _isdigit *****************
  1554 ;; Defined at:
  1555 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  1556 ;; Parameters:    Size  Location     Type
  1557 ;;  c               2    0[COMRAM] int 
  1558 ;; Auto vars:     Size  Location     Type
  1559 ;;		None
  1560 ;; Return value:  Size  Location     Type
  1561 ;;                  2    0[COMRAM] int 
  1562 ;; Registers used:
  1563 ;;		wreg, status,2, status,0
  1564 ;; Tracked objects:
  1565 ;;		On entry : 0/0
  1566 ;;		On exit  : 0/0
  1567 ;;		Unchanged: 0/0
  1568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1569 ;;      Params:         2       0       0       0       0       0       0       0       0
  1570 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1571 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1572 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1573 ;;Total ram usage:        6 bytes
  1574 ;; Hardware stack levels used:    1
  1575 ;; This function calls:
  1576 ;;		Nothing
  1577 ;; This function is called by:
  1578 ;;		_atoi
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581                           
  1582                           	psect	text4
  1583  001256                     __ptext4:
  1584                           	opt callstack 0
  1585  001256                     _isdigit:
  1586                           	opt callstack 29
  1587  001256  0ED0               	movlw	208
  1588  001258  6E03               	movwf	??_isdigit^0,c
  1589  00125A  0EFF               	movlw	255
  1590  00125C  6E04               	movwf	(??_isdigit+1)^0,c
  1591  00125E  C001  F005         	movff	isdigit@c,??_isdigit+2
  1592  001262  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  1593  001266  5003               	movf	??_isdigit^0,w,c
  1594  001268  2605               	addwf	(??_isdigit+2)^0,f,c
  1595  00126A  5004               	movf	(??_isdigit+1)^0,w,c
  1596  00126C  2206               	addwfc	(??_isdigit+3)^0,f,c
  1597  00126E  5006               	movf	(??_isdigit+3)^0,w,c
  1598  001270  E10A               	bnz	u490
  1599  001272  0E0A               	movlw	10
  1600  001274  5C05               	subwf	(??_isdigit+2)^0,w,c
  1601  001276  A0D8               	btfss	status,0,c
  1602  001278  EF40  F009         	goto	u491
  1603  00127C  EF43  F009         	goto	u490
  1604  001280                     u491:
  1605  001280  0E01               	movlw	1
  1606  001282  EF44  F009         	goto	u500
  1607  001286                     u490:
  1608  001286  0E00               	movlw	0
  1609  001288                     u500:
  1610  001288  6E01               	movwf	?_isdigit^0,c
  1611  00128A  6A02               	clrf	(?_isdigit+1)^0,c
  1612  00128C  0012               	return		;funcret
  1613  00128E                     __end_of_isdigit:
  1614                           	opt callstack 0
  1615                           
  1616 ;; *************** function ___wmul *****************
  1617 ;; Defined at:
  1618 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  1619 ;; Parameters:    Size  Location     Type
  1620 ;;  multiplier      2    0[COMRAM] unsigned int 
  1621 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1622 ;; Auto vars:     Size  Location     Type
  1623 ;;  product         2    4[COMRAM] unsigned int 
  1624 ;; Return value:  Size  Location     Type
  1625 ;;                  2    0[COMRAM] unsigned int 
  1626 ;; Registers used:
  1627 ;;		wreg, status,2, status,0, prodl, prodh
  1628 ;; Tracked objects:
  1629 ;;		On entry : 0/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1633 ;;      Params:         4       0       0       0       0       0       0       0       0
  1634 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1635 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1636 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1637 ;;Total ram usage:        6 bytes
  1638 ;; Hardware stack levels used:    1
  1639 ;; This function calls:
  1640 ;;		Nothing
  1641 ;; This function is called by:
  1642 ;;		_atoi
  1643 ;; This function uses a non-reentrant model
  1644 ;;
  1645                           
  1646                           	psect	text5
  1647  00128E                     __ptext5:
  1648                           	opt callstack 0
  1649  00128E                     ___wmul:
  1650                           	opt callstack 29
  1651  00128E  5001               	movf	___wmul@multiplier^0,w,c
  1652  001290  0203               	mulwf	___wmul@multiplicand^0,c
  1653  001292  CFF3 F005          	movff	prodl,___wmul@product
  1654  001296  CFF4 F006          	movff	prodh,___wmul@product+1
  1655  00129A  5001               	movf	___wmul@multiplier^0,w,c
  1656  00129C  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  1657  00129E  50F3               	movf	243,w,c
  1658  0012A0  2606               	addwf	(___wmul@product+1)^0,f,c
  1659  0012A2  5002               	movf	(___wmul@multiplier+1)^0,w,c
  1660  0012A4  0203               	mulwf	___wmul@multiplicand^0,c
  1661  0012A6  50F3               	movf	243,w,c
  1662  0012A8  2606               	addwf	(___wmul@product+1)^0,f,c
  1663  0012AA  C005  F001         	movff	___wmul@product,?___wmul
  1664  0012AE  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1665  0012B2  0012               	return		;funcret
  1666  0012B4                     __end_of___wmul:
  1667                           	opt callstack 0
  1668                           
  1669 ;; *************** function _UART_Write *****************
  1670 ;; Defined at:
  1671 ;;		line 44 in file "./uart.h"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;  info            2    0[COMRAM] PTR unsigned char 
  1674 ;;		 -> STR_27(10), STR_26(14), STR_24(11), STR_23(11), 
  1675 ;;		 -> STR_22(11), STR_21(11), STR_20(11), STR_19(11), 
  1676 ;;		 -> STR_18(11), STR_17(11), STR_16(11), STR_15(10), 
  1677 ;;		 -> STR_14(10), STR_12(11), STR_11(10), STR_10(10), 
  1678 ;;		 -> STR_9(10), STR_8(10), STR_7(10), STR_6(10), 
  1679 ;;		 -> STR_5(10), STR_4(10), STR_3(10), main@temp(10), 
  1680 ;;		 -> STR_1(9), 
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;  i               2    4[COMRAM] int 
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  1    wreg      void 
  1685 ;; Registers used:
  1686 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1692 ;;      Params:         2       0       0       0       0       0       0       0       0
  1693 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1694 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1695 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1696 ;;Total ram usage:        6 bytes
  1697 ;; Hardware stack levels used:    1
  1698 ;; Hardware stack levels required when called:    1
  1699 ;; This function calls:
  1700 ;;		_UART_TX_Busy
  1701 ;; This function is called by:
  1702 ;;		_main
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705                           
  1706                           	psect	text6
  1707  0010E6                     __ptext6:
  1708                           	opt callstack 0
  1709  0010E6                     _UART_Write:
  1710                           	opt callstack 29
  1711  0010E6                     
  1712                           ;./uart.h: 45:      int i;;./uart.h: 46:      for (i = 0; info[i] != '\0'; i++) {
  1713  0010E6  0E00               	movlw	0
  1714  0010E8  6E06               	movwf	(UART_Write@i+1)^0,c
  1715  0010EA  0E00               	movlw	0
  1716  0010EC  6E05               	movwf	UART_Write@i^0,c
  1717  0010EE  EF9C  F008         	goto	l1190
  1718  0010F2                     l1184:
  1719                           
  1720                           ;./uart.h: 47:           TXREG = info[i];
  1721  0010F2  5005               	movf	UART_Write@i^0,w,c
  1722  0010F4  2401               	addwf	UART_Write@info^0,w,c
  1723  0010F6  6E03               	movwf	??_UART_Write^0,c
  1724  0010F8  5006               	movf	(UART_Write@i+1)^0,w,c
  1725  0010FA  2002               	addwfc	(UART_Write@info+1)^0,w,c
  1726  0010FC  6E04               	movwf	(??_UART_Write+1)^0,c
  1727  0010FE  C003  FFF6         	movff	??_UART_Write,tblptrl
  1728  001102  C004  FFF7         	movff	??_UART_Write+1,tblptrh
  1729  001106  6AF8               	clrf	tblptru,c
  1730  001108  0E07               	movlw	(high __ramtop+-1)
  1731  00110A  64F7               	cpfsgt	tblptrh,c
  1732  00110C  D003               	bra	u577
  1733  00110E  0008               	tblrd		*
  1734  001110  50F5               	movf	tablat,w,c
  1735  001112  D005               	bra	u570
  1736  001114                     u577:
  1737  001114  CFF6 FFE9          	movff	tblptrl,fsr0l
  1738  001118  CFF7 FFEA          	movff	tblptrh,fsr0h
  1739  00111C  50EF               	movf	indf0,w,c
  1740  00111E                     u570:
  1741  00111E  6EAD               	movwf	173,c	;volatile
  1742  001120                     l1186:
  1743  001120  EC5A  F009         	call	_UART_TX_Busy	;wreg free
  1744  001124  0900               	iorlw	0
  1745  001126  A4D8               	btfss	status,2,c
  1746  001128  EF98  F008         	goto	u581
  1747  00112C  EF9A  F008         	goto	u580
  1748  001130                     u581:
  1749  001130  EF90  F008         	goto	l1186
  1750  001134                     u580:
  1751  001134                     
  1752                           ;./uart.h: 49:      }
  1753  001134  4A05               	infsnz	UART_Write@i^0,f,c
  1754  001136  2A06               	incf	(UART_Write@i+1)^0,f,c
  1755  001138                     l1190:
  1756  001138  5005               	movf	UART_Write@i^0,w,c
  1757  00113A  2401               	addwf	UART_Write@info^0,w,c
  1758  00113C  6E03               	movwf	??_UART_Write^0,c
  1759  00113E  5006               	movf	(UART_Write@i+1)^0,w,c
  1760  001140  2002               	addwfc	(UART_Write@info+1)^0,w,c
  1761  001142  6E04               	movwf	(??_UART_Write+1)^0,c
  1762  001144  C003  FFF6         	movff	??_UART_Write,tblptrl
  1763  001148  C004  FFF7         	movff	??_UART_Write+1,tblptrh
  1764  00114C  6AF8               	clrf	tblptru,c
  1765  00114E  0E07               	movlw	(high __ramtop+-1)
  1766  001150  64F7               	cpfsgt	tblptrh,c
  1767  001152  D003               	bra	u597
  1768  001154  0008               	tblrd		*
  1769  001156  50F5               	movf	tablat,w,c
  1770  001158  D005               	bra	u590
  1771  00115A                     u597:
  1772  00115A  CFF6 FFE9          	movff	tblptrl,fsr0l
  1773  00115E  CFF7 FFEA          	movff	tblptrh,fsr0h
  1774  001162  50EF               	movf	indf0,w,c
  1775  001164                     u590:
  1776  001164  0900               	iorlw	0
  1777  001166  A4D8               	btfss	status,2,c
  1778  001168  EFB8  F008         	goto	u601
  1779  00116C  EFBA  F008         	goto	u600
  1780  001170                     u601:
  1781  001170  EF79  F008         	goto	l1184
  1782  001174                     u600:
  1783  001174  0012               	return		;funcret
  1784  001176                     __end_of_UART_Write:
  1785                           	opt callstack 0
  1786                           
  1787 ;; *************** function _UART_TX_Busy *****************
  1788 ;; Defined at:
  1789 ;;		line 36 in file "./uart.h"
  1790 ;; Parameters:    Size  Location     Type
  1791 ;;		None
  1792 ;; Auto vars:     Size  Location     Type
  1793 ;;		None
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  1    wreg      unsigned char 
  1796 ;; Registers used:
  1797 ;;		wreg
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/0
  1800 ;;		On exit  : 0/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1803 ;;      Params:         0       0       0       0       0       0       0       0       0
  1804 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1805 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1806 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1807 ;;Total ram usage:        0 bytes
  1808 ;; Hardware stack levels used:    1
  1809 ;; This function calls:
  1810 ;;		Nothing
  1811 ;; This function is called by:
  1812 ;;		_UART_Write
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816                           	psect	text7
  1817  0012B4                     __ptext7:
  1818                           	opt callstack 0
  1819  0012B4                     _UART_TX_Busy:
  1820                           	opt callstack 29
  1821  0012B4                     
  1822                           ;./uart.h: 37:      return (char) !TXSTAbits.TRMT;
  1823  0012B4  A2AC               	btfss	172,1,c	;volatile
  1824  0012B6  EF5F  F009         	goto	u11
  1825  0012BA  EF62  F009         	goto	u10
  1826  0012BE                     u11:
  1827  0012BE  0E01               	movlw	1
  1828  0012C0  EF63  F009         	goto	u20
  1829  0012C4                     u10:
  1830  0012C4  0E00               	movlw	0
  1831  0012C6                     u20:
  1832  0012C6  0012               	return		;funcret
  1833  0012C8                     __end_of_UART_TX_Busy:
  1834                           	opt callstack 0
  1835                           
  1836 ;; *************** function _UART_Read *****************
  1837 ;; Defined at:
  1838 ;;		line 52 in file "./uart.h"
  1839 ;; Parameters:    Size  Location     Type
  1840 ;;  info            2    0[COMRAM] PTR unsigned char 
  1841 ;;		 -> main@temp(10), 
  1842 ;; Auto vars:     Size  Location     Type
  1843 ;;  i               2    4[COMRAM] unsigned int 
  1844 ;; Return value:  Size  Location     Type
  1845 ;;                  1    wreg      void 
  1846 ;; Registers used:
  1847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1848 ;; Tracked objects:
  1849 ;;		On entry : 0/0
  1850 ;;		On exit  : 0/0
  1851 ;;		Unchanged: 0/0
  1852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1853 ;;      Params:         2       0       0       0       0       0       0       0       0
  1854 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1855 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1856 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1857 ;;Total ram usage:        6 bytes
  1858 ;; Hardware stack levels used:    1
  1859 ;; Hardware stack levels required when called:    1
  1860 ;; This function calls:
  1861 ;;		_UART_RX_Ready
  1862 ;; This function is called by:
  1863 ;;		_main
  1864 ;; This function uses a non-reentrant model
  1865 ;;
  1866                           
  1867                           	psect	text8
  1868  001176                     __ptext8:
  1869                           	opt callstack 0
  1870  001176                     _UART_Read:
  1871                           	opt callstack 29
  1872  001176                     
  1873                           ;./uart.h: 53:      unsigned int i = 0;
  1874  001176  0E00               	movlw	0
  1875  001178  6E06               	movwf	(UART_Read@i+1)^0,c
  1876  00117A  0E00               	movlw	0
  1877  00117C  6E05               	movwf	UART_Read@i^0,c
  1878  00117E                     l1194:
  1879  00117E  EC69  F009         	call	_UART_RX_Ready	;wreg free
  1880  001182  0900               	iorlw	0
  1881  001184  B4D8               	btfsc	status,2,c
  1882  001186  EFC7  F008         	goto	u611
  1883  00118A  EFC9  F008         	goto	u610
  1884  00118E                     u611:
  1885  00118E  EFBF  F008         	goto	l1194
  1886  001192                     u610:
  1887  001192                     
  1888                           ;./uart.h: 56:           info[i] = RCREG;
  1889  001192  5005               	movf	UART_Read@i^0,w,c
  1890  001194  2401               	addwf	UART_Read@info^0,w,c
  1891  001196  6ED9               	movwf	fsr2l,c
  1892  001198  5006               	movf	(UART_Read@i+1)^0,w,c
  1893  00119A  2002               	addwfc	(UART_Read@info+1)^0,w,c
  1894  00119C  6EDA               	movwf	fsr2h,c
  1895  00119E  CFAE FFDF          	movff	4014,indf2	;volatile
  1896                           
  1897                           ;./uart.h: 58:           if (info[i] != '\r' && info[i] != '\n')
  1898  0011A2  5005               	movf	UART_Read@i^0,w,c
  1899  0011A4  2401               	addwf	UART_Read@info^0,w,c
  1900  0011A6  6ED9               	movwf	fsr2l,c
  1901  0011A8  5006               	movf	(UART_Read@i+1)^0,w,c
  1902  0011AA  2002               	addwfc	(UART_Read@info+1)^0,w,c
  1903  0011AC  6EDA               	movwf	fsr2h,c
  1904  0011AE  0E0D               	movlw	13
  1905  0011B0  18DE               	xorwf	postinc2,w,c
  1906  0011B2  B4D8               	btfsc	status,2,c
  1907  0011B4  EFDE  F008         	goto	u621
  1908  0011B8  EFE0  F008         	goto	u620
  1909  0011BC                     u621:
  1910  0011BC  EFF3  F008         	goto	l1202
  1911  0011C0                     u620:
  1912  0011C0  5005               	movf	UART_Read@i^0,w,c
  1913  0011C2  2401               	addwf	UART_Read@info^0,w,c
  1914  0011C4  6ED9               	movwf	fsr2l,c
  1915  0011C6  5006               	movf	(UART_Read@i+1)^0,w,c
  1916  0011C8  2002               	addwfc	(UART_Read@info+1)^0,w,c
  1917  0011CA  6EDA               	movwf	fsr2h,c
  1918  0011CC  0E0A               	movlw	10
  1919  0011CE  18DE               	xorwf	postinc2,w,c
  1920  0011D0  B4D8               	btfsc	status,2,c
  1921  0011D2  EFED  F008         	goto	u631
  1922  0011D6  EFEF  F008         	goto	u630
  1923  0011DA                     u631:
  1924  0011DA  EFF3  F008         	goto	l1202
  1925  0011DE                     u630:
  1926  0011DE                     
  1927                           ;./uart.h: 59:               i++;
  1928  0011DE  4A05               	infsnz	UART_Read@i^0,f,c
  1929  0011E0  2A06               	incf	(UART_Read@i+1)^0,f,c
  1930  0011E2  EFBF  F008         	goto	l1194
  1931  0011E6                     l1202:
  1932                           
  1933                           ;./uart.h: 61:                info[i+1]='\0';
  1934  0011E6  5005               	movf	UART_Read@i^0,w,c
  1935  0011E8  2401               	addwf	UART_Read@info^0,w,c
  1936  0011EA  6E03               	movwf	??_UART_Read^0,c
  1937  0011EC  5006               	movf	(UART_Read@i+1)^0,w,c
  1938  0011EE  2002               	addwfc	(UART_Read@info+1)^0,w,c
  1939  0011F0  6E04               	movwf	(??_UART_Read+1)^0,c
  1940  0011F2  0E01               	movlw	1
  1941  0011F4  2403               	addwf	??_UART_Read^0,w,c
  1942  0011F6  6ED9               	movwf	fsr2l,c
  1943  0011F8  0E00               	movlw	0
  1944  0011FA  2004               	addwfc	(??_UART_Read+1)^0,w,c
  1945  0011FC  6EDA               	movwf	fsr2h,c
  1946  0011FE  0E00               	movlw	0
  1947  001200  6EDF               	movwf	indf2,c
  1948  001202  0012               	return		;funcret
  1949  001204                     __end_of_UART_Read:
  1950                           	opt callstack 0
  1951                           
  1952 ;; *************** function _UART_RX_Ready *****************
  1953 ;; Defined at:
  1954 ;;		line 40 in file "./uart.h"
  1955 ;; Parameters:    Size  Location     Type
  1956 ;;		None
  1957 ;; Auto vars:     Size  Location     Type
  1958 ;;		None
  1959 ;; Return value:  Size  Location     Type
  1960 ;;                  1    wreg      unsigned char 
  1961 ;; Registers used:
  1962 ;;		wreg
  1963 ;; Tracked objects:
  1964 ;;		On entry : 0/0
  1965 ;;		On exit  : 0/0
  1966 ;;		Unchanged: 0/0
  1967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1968 ;;      Params:         0       0       0       0       0       0       0       0       0
  1969 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1970 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1971 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1972 ;;Total ram usage:        0 bytes
  1973 ;; Hardware stack levels used:    1
  1974 ;; This function calls:
  1975 ;;		Nothing
  1976 ;; This function is called by:
  1977 ;;		_UART_Read
  1978 ;; This function uses a non-reentrant model
  1979 ;;
  1980                           
  1981                           	psect	text9
  1982  0012D2                     __ptext9:
  1983                           	opt callstack 0
  1984  0012D2                     _UART_RX_Ready:
  1985                           	opt callstack 29
  1986  0012D2                     
  1987                           ;./uart.h: 41:      return (char) RCIF;
  1988  0012D2  0E00               	movlw	0
  1989  0012D4  BA9E               	btfsc	3998,5,c	;volatile
  1990  0012D6  0E01               	movlw	1
  1991  0012D8  0012               	return		;funcret
  1992  0012DA                     __end_of_UART_RX_Ready:
  1993                           	opt callstack 0
  1994                           
  1995 ;; *************** function _UART_Open *****************
  1996 ;; Defined at:
  1997 ;;		line 8 in file "./uart.h"
  1998 ;; Parameters:    Size  Location     Type
  1999 ;;  baudrate        4   14[COMRAM] const long 
  2000 ;; Auto vars:     Size  Location     Type
  2001 ;;  x               2   26[COMRAM] unsigned int 
  2002 ;; Return value:  Size  Location     Type
  2003 ;;                  1    wreg      void 
  2004 ;; Registers used:
  2005 ;;		wreg, status,2, status,0, cstack
  2006 ;; Tracked objects:
  2007 ;;		On entry : 0/0
  2008 ;;		On exit  : 0/0
  2009 ;;		Unchanged: 0/0
  2010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2011 ;;      Params:         4       0       0       0       0       0       0       0       0
  2012 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2013 ;;      Temps:          8       0       0       0       0       0       0       0       0
  2014 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2015 ;;Total ram usage:       14 bytes
  2016 ;; Hardware stack levels used:    1
  2017 ;; Hardware stack levels required when called:    1
  2018 ;; This function calls:
  2019 ;;		___aldiv
  2020 ;; This function is called by:
  2021 ;;		_main
  2022 ;; This function uses a non-reentrant model
  2023 ;;
  2024                           
  2025                           	psect	text10
  2026  000DDC                     __ptext10:
  2027                           	opt callstack 0
  2028  000DDC                     _UART_Open:
  2029                           	opt callstack 29
  2030  000DDC                     
  2031                           ;./uart.h: 9:      unsigned int x;;./uart.h: 10:      x = (unsigned int)((4000000 - baud
      +                          rate * 64) / (baudrate * 64));
  2032  000DDC  C00F  F013         	movff	UART_Open@baudrate,??_UART_Open
  2033  000DE0  C010  F014         	movff	UART_Open@baudrate+1,??_UART_Open+1
  2034  000DE4  C011  F015         	movff	UART_Open@baudrate+2,??_UART_Open+2
  2035  000DE8  C012  F016         	movff	UART_Open@baudrate+3,??_UART_Open+3
  2036  000DEC  0E06               	movlw	6
  2037  000DEE                     u515:
  2038  000DEE  90D8               	bcf	status,0,c
  2039  000DF0  3613               	rlcf	??_UART_Open^0,f,c
  2040  000DF2  3614               	rlcf	(??_UART_Open+1)^0,f,c
  2041  000DF4  3615               	rlcf	(??_UART_Open+2)^0,f,c
  2042  000DF6  3616               	rlcf	(??_UART_Open+3)^0,f,c
  2043  000DF8  2EE8               	decfsz	wreg,f,c
  2044  000DFA  EFF7  F006         	goto	u515
  2045  000DFE  5013               	movf	??_UART_Open^0,w,c
  2046  000E00  0800               	sublw	0
  2047  000E02  6E01               	movwf	___aldiv@dividend^0,c
  2048  000E04  0E09               	movlw	9
  2049  000E06  5414               	subfwb	(??_UART_Open+1)^0,w,c
  2050  000E08  6E02               	movwf	(___aldiv@dividend+1)^0,c
  2051  000E0A  0E3D               	movlw	61
  2052  000E0C  5415               	subfwb	(??_UART_Open+2)^0,w,c
  2053  000E0E  6E03               	movwf	(___aldiv@dividend+2)^0,c
  2054  000E10  0E00               	movlw	0
  2055  000E12  5416               	subfwb	(??_UART_Open+3)^0,w,c
  2056  000E14  6E04               	movwf	(___aldiv@dividend+3)^0,c
  2057  000E16  C00F  F017         	movff	UART_Open@baudrate,??_UART_Open+4
  2058  000E1A  C010  F018         	movff	UART_Open@baudrate+1,??_UART_Open+5
  2059  000E1E  C011  F019         	movff	UART_Open@baudrate+2,??_UART_Open+6
  2060  000E22  C012  F01A         	movff	UART_Open@baudrate+3,??_UART_Open+7
  2061  000E26  0E06               	movlw	6
  2062  000E28                     u525:
  2063  000E28  90D8               	bcf	status,0,c
  2064  000E2A  3617               	rlcf	(??_UART_Open+4)^0,f,c
  2065  000E2C  3618               	rlcf	(??_UART_Open+5)^0,f,c
  2066  000E2E  3619               	rlcf	(??_UART_Open+6)^0,f,c
  2067  000E30  361A               	rlcf	(??_UART_Open+7)^0,f,c
  2068  000E32  2EE8               	decfsz	wreg,f,c
  2069  000E34  EF14  F007         	goto	u525
  2070  000E38  C017  F005         	movff	??_UART_Open+4,___aldiv@divisor
  2071  000E3C  C018  F006         	movff	??_UART_Open+5,___aldiv@divisor+1
  2072  000E40  C019  F007         	movff	??_UART_Open+6,___aldiv@divisor+2
  2073  000E44  C01A  F008         	movff	??_UART_Open+7,___aldiv@divisor+3
  2074  000E48  EC82  F007         	call	___aldiv	;wreg free
  2075  000E4C  C001  F01B         	movff	?___aldiv,UART_Open@x
  2076  000E50  C002  F01C         	movff	?___aldiv+1,UART_Open@x+1
  2077  000E54                     
  2078                           ;./uart.h: 11:      if (x > 255){
  2079  000E54  041C               	decf	(UART_Open@x+1)^0,w,c
  2080  000E56  A0D8               	btfss	status,0,c
  2081  000E58  EF30  F007         	goto	u531
  2082  000E5C  EF32  F007         	goto	u530
  2083  000E60                     u531:
  2084  000E60  EF6F  F007         	goto	l1178
  2085  000E64                     u530:
  2086  000E64                     
  2087                           ;./uart.h: 12:         x = (unsigned int)((4000000 - baudrate * 16) / (baudrate * 16));
  2088  000E64  C00F  F013         	movff	UART_Open@baudrate,??_UART_Open
  2089  000E68  C010  F014         	movff	UART_Open@baudrate+1,??_UART_Open+1
  2090  000E6C  C011  F015         	movff	UART_Open@baudrate+2,??_UART_Open+2
  2091  000E70  C012  F016         	movff	UART_Open@baudrate+3,??_UART_Open+3
  2092  000E74  0E04               	movlw	4
  2093  000E76                     u545:
  2094  000E76  90D8               	bcf	status,0,c
  2095  000E78  3613               	rlcf	??_UART_Open^0,f,c
  2096  000E7A  3614               	rlcf	(??_UART_Open+1)^0,f,c
  2097  000E7C  3615               	rlcf	(??_UART_Open+2)^0,f,c
  2098  000E7E  3616               	rlcf	(??_UART_Open+3)^0,f,c
  2099  000E80  2EE8               	decfsz	wreg,f,c
  2100  000E82  EF3B  F007         	goto	u545
  2101  000E86  5013               	movf	??_UART_Open^0,w,c
  2102  000E88  0800               	sublw	0
  2103  000E8A  6E01               	movwf	___aldiv@dividend^0,c
  2104  000E8C  0E09               	movlw	9
  2105  000E8E  5414               	subfwb	(??_UART_Open+1)^0,w,c
  2106  000E90  6E02               	movwf	(___aldiv@dividend+1)^0,c
  2107  000E92  0E3D               	movlw	61
  2108  000E94  5415               	subfwb	(??_UART_Open+2)^0,w,c
  2109  000E96  6E03               	movwf	(___aldiv@dividend+2)^0,c
  2110  000E98  0E00               	movlw	0
  2111  000E9A  5416               	subfwb	(??_UART_Open+3)^0,w,c
  2112  000E9C  6E04               	movwf	(___aldiv@dividend+3)^0,c
  2113  000E9E  C00F  F017         	movff	UART_Open@baudrate,??_UART_Open+4
  2114  000EA2  C010  F018         	movff	UART_Open@baudrate+1,??_UART_Open+5
  2115  000EA6  C011  F019         	movff	UART_Open@baudrate+2,??_UART_Open+6
  2116  000EAA  C012  F01A         	movff	UART_Open@baudrate+3,??_UART_Open+7
  2117  000EAE  0E04               	movlw	4
  2118  000EB0                     u555:
  2119  000EB0  90D8               	bcf	status,0,c
  2120  000EB2  3617               	rlcf	(??_UART_Open+4)^0,f,c
  2121  000EB4  3618               	rlcf	(??_UART_Open+5)^0,f,c
  2122  000EB6  3619               	rlcf	(??_UART_Open+6)^0,f,c
  2123  000EB8  361A               	rlcf	(??_UART_Open+7)^0,f,c
  2124  000EBA  2EE8               	decfsz	wreg,f,c
  2125  000EBC  EF58  F007         	goto	u555
  2126  000EC0  C017  F005         	movff	??_UART_Open+4,___aldiv@divisor
  2127  000EC4  C018  F006         	movff	??_UART_Open+5,___aldiv@divisor+1
  2128  000EC8  C019  F007         	movff	??_UART_Open+6,___aldiv@divisor+2
  2129  000ECC  C01A  F008         	movff	??_UART_Open+7,___aldiv@divisor+3
  2130  000ED0  EC82  F007         	call	___aldiv	;wreg free
  2131  000ED4  C001  F01B         	movff	?___aldiv,UART_Open@x
  2132  000ED8  C002  F01C         	movff	?___aldiv+1,UART_Open@x+1
  2133  000EDC                     
  2134                           ;./uart.h: 13:         TXSTAbits.BRGH = 1;
  2135  000EDC  84AC               	bsf	172,2,c	;volatile
  2136  000EDE                     l1178:
  2137                           
  2138                           ;./uart.h: 15:      if (x < 256) {
  2139  000EDE  041C               	decf	(UART_Open@x+1)^0,w,c
  2140  000EE0  B0D8               	btfsc	status,0,c
  2141  000EE2  EF75  F007         	goto	u561
  2142  000EE6  EF77  F007         	goto	u560
  2143  000EEA                     u561:
  2144  000EEA  EF81  F007         	goto	l33
  2145  000EEE                     u560:
  2146  000EEE                     
  2147                           ;./uart.h: 16:           SPBRG = x;
  2148  000EEE  C01B  FFAF         	movff	UART_Open@x,4015	;volatile
  2149                           
  2150                           ;./uart.h: 17:           TXSTAbits.SYNC = 0;
  2151  000EF2  98AC               	bcf	172,4,c	;volatile
  2152                           
  2153                           ;./uart.h: 18:           RCSTAbits.SPEN = 1;
  2154  000EF4  8EAB               	bsf	171,7,c	;volatile
  2155                           
  2156                           ;./uart.h: 19:           TRISCbits.RC7 = 1;
  2157  000EF6  8E94               	bsf	148,7,c	;volatile
  2158                           
  2159                           ;./uart.h: 20:           TRISCbits.RC6 = 0;
  2160  000EF8  9C94               	bcf	148,6,c	;volatile
  2161                           
  2162                           ;./uart.h: 21:           RCSTAbits.CREN = 1;
  2163  000EFA  88AB               	bsf	171,4,c	;volatile
  2164                           
  2165                           ;./uart.h: 22:           TXSTAbits.TXEN = 1;
  2166  000EFC  8AAC               	bsf	172,5,c	;volatile
  2167                           
  2168                           ;./uart.h: 23:           TXIE = 1;
  2169  000EFE  889D               	bsf	3997,4,c	;volatile
  2170                           
  2171                           ;./uart.h: 24:           RCIE = 1;
  2172  000F00  8A9D               	bsf	3997,5,c	;volatile
  2173  000F02                     l33:
  2174  000F02  0012               	return		;funcret
  2175  000F04                     __end_of_UART_Open:
  2176                           	opt callstack 0
  2177                           
  2178 ;; *************** function ___aldiv *****************
  2179 ;; Defined at:
  2180 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
  2181 ;; Parameters:    Size  Location     Type
  2182 ;;  dividend        4    0[COMRAM] long 
  2183 ;;  divisor         4    4[COMRAM] long 
  2184 ;; Auto vars:     Size  Location     Type
  2185 ;;  quotient        4   10[COMRAM] long 
  2186 ;;  sign            1    9[COMRAM] unsigned char 
  2187 ;;  counter         1    8[COMRAM] unsigned char 
  2188 ;; Return value:  Size  Location     Type
  2189 ;;                  4    0[COMRAM] long 
  2190 ;; Registers used:
  2191 ;;		wreg, status,2, status,0
  2192 ;; Tracked objects:
  2193 ;;		On entry : 0/0
  2194 ;;		On exit  : 0/0
  2195 ;;		Unchanged: 0/0
  2196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2197 ;;      Params:         8       0       0       0       0       0       0       0       0
  2198 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2199 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2200 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2201 ;;Total ram usage:       14 bytes
  2202 ;; Hardware stack levels used:    1
  2203 ;; This function calls:
  2204 ;;		Nothing
  2205 ;; This function is called by:
  2206 ;;		_UART_Open
  2207 ;; This function uses a non-reentrant model
  2208 ;;
  2209                           
  2210                           	psect	text11
  2211  000F04                     __ptext11:
  2212                           	opt callstack 0
  2213  000F04                     ___aldiv:
  2214                           	opt callstack 29
  2215  000F04  0E00               	movlw	0
  2216  000F06  6E0A               	movwf	___aldiv@sign^0,c
  2217  000F08  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  2218  000F0A  EF8B  F007         	goto	u410
  2219  000F0E  EF89  F007         	goto	u411
  2220  000F12                     u411:
  2221  000F12  EF95  F007         	goto	l1118
  2222  000F16                     u410:
  2223  000F16  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  2224  000F18  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  2225  000F1A  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  2226  000F1C  6C05               	negf	___aldiv@divisor^0,c
  2227  000F1E  0E00               	movlw	0
  2228  000F20  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  2229  000F22  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  2230  000F24  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  2231  000F26  0E01               	movlw	1
  2232  000F28  6E0A               	movwf	___aldiv@sign^0,c
  2233  000F2A                     l1118:
  2234  000F2A  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  2235  000F2C  EF9C  F007         	goto	u420
  2236  000F30  EF9A  F007         	goto	u421
  2237  000F34                     u421:
  2238  000F34  EFA6  F007         	goto	l1124
  2239  000F38                     u420:
  2240  000F38  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  2241  000F3A  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  2242  000F3C  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  2243  000F3E  6C01               	negf	___aldiv@dividend^0,c
  2244  000F40  0E00               	movlw	0
  2245  000F42  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  2246  000F44  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  2247  000F46  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  2248  000F48  0E01               	movlw	1
  2249  000F4A  1A0A               	xorwf	___aldiv@sign^0,f,c
  2250  000F4C                     l1124:
  2251  000F4C  0E00               	movlw	0
  2252  000F4E  6E0B               	movwf	___aldiv@quotient^0,c
  2253  000F50  0E00               	movlw	0
  2254  000F52  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  2255  000F54  0E00               	movlw	0
  2256  000F56  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  2257  000F58  0E00               	movlw	0
  2258  000F5A  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  2259  000F5C  5005               	movf	___aldiv@divisor^0,w,c
  2260  000F5E  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  2261  000F60  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  2262  000F62  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  2263  000F64  B4D8               	btfsc	status,2,c
  2264  000F66  EFB7  F007         	goto	u431
  2265  000F6A  EFB9  F007         	goto	u430
  2266  000F6E                     u431:
  2267  000F6E  EFEF  F007         	goto	l1146
  2268  000F72                     u430:
  2269  000F72  0E01               	movlw	1
  2270  000F74  6E09               	movwf	___aldiv@counter^0,c
  2271  000F76  EFC3  F007         	goto	l1132
  2272  000F7A                     l1130:
  2273  000F7A  90D8               	bcf	status,0,c
  2274  000F7C  3605               	rlcf	___aldiv@divisor^0,f,c
  2275  000F7E  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  2276  000F80  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  2277  000F82  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  2278  000F84  2A09               	incf	___aldiv@counter^0,f,c
  2279  000F86                     l1132:
  2280  000F86  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  2281  000F88  EFC8  F007         	goto	u441
  2282  000F8C  EFCA  F007         	goto	u440
  2283  000F90                     u441:
  2284  000F90  EFBD  F007         	goto	l1130
  2285  000F94                     u440:
  2286  000F94                     l1134:
  2287  000F94  90D8               	bcf	status,0,c
  2288  000F96  360B               	rlcf	___aldiv@quotient^0,f,c
  2289  000F98  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  2290  000F9A  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  2291  000F9C  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  2292  000F9E  5005               	movf	___aldiv@divisor^0,w,c
  2293  000FA0  5C01               	subwf	___aldiv@dividend^0,w,c
  2294  000FA2  5006               	movf	(___aldiv@divisor+1)^0,w,c
  2295  000FA4  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  2296  000FA6  5007               	movf	(___aldiv@divisor+2)^0,w,c
  2297  000FA8  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  2298  000FAA  5008               	movf	(___aldiv@divisor+3)^0,w,c
  2299  000FAC  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  2300  000FAE  A0D8               	btfss	status,0,c
  2301  000FB0  EFDC  F007         	goto	u451
  2302  000FB4  EFDE  F007         	goto	u450
  2303  000FB8                     u451:
  2304  000FB8  EFE7  F007         	goto	l1142
  2305  000FBC                     u450:
  2306  000FBC  5005               	movf	___aldiv@divisor^0,w,c
  2307  000FBE  5E01               	subwf	___aldiv@dividend^0,f,c
  2308  000FC0  5006               	movf	(___aldiv@divisor+1)^0,w,c
  2309  000FC2  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  2310  000FC4  5007               	movf	(___aldiv@divisor+2)^0,w,c
  2311  000FC6  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  2312  000FC8  5008               	movf	(___aldiv@divisor+3)^0,w,c
  2313  000FCA  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  2314  000FCC  800B               	bsf	___aldiv@quotient^0,0,c
  2315  000FCE                     l1142:
  2316  000FCE  90D8               	bcf	status,0,c
  2317  000FD0  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  2318  000FD2  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  2319  000FD4  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  2320  000FD6  3205               	rrcf	___aldiv@divisor^0,f,c
  2321  000FD8  2E09               	decfsz	___aldiv@counter^0,f,c
  2322  000FDA  EFCA  F007         	goto	l1134
  2323  000FDE                     l1146:
  2324  000FDE  500A               	movf	___aldiv@sign^0,w,c
  2325  000FE0  B4D8               	btfsc	status,2,c
  2326  000FE2  EFF5  F007         	goto	u461
  2327  000FE6  EFF7  F007         	goto	u460
  2328  000FEA                     u461:
  2329  000FEA  EFFF  F007         	goto	l1150
  2330  000FEE                     u460:
  2331  000FEE  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  2332  000FF0  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  2333  000FF2  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  2334  000FF4  6C0B               	negf	___aldiv@quotient^0,c
  2335  000FF6  0E00               	movlw	0
  2336  000FF8  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  2337  000FFA  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  2338  000FFC  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  2339  000FFE                     l1150:
  2340  000FFE  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  2341  001002  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  2342  001006  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  2343  00100A  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  2344  00100E  0012               	return		;funcret
  2345  001010                     __end_of___aldiv:
  2346                           	opt callstack 0
  2347                           
  2348 ;; *************** function _UART_Close *****************
  2349 ;; Defined at:
  2350 ;;		line 28 in file "./uart.h"
  2351 ;; Parameters:    Size  Location     Type
  2352 ;;		None
  2353 ;; Auto vars:     Size  Location     Type
  2354 ;;		None
  2355 ;; Return value:  Size  Location     Type
  2356 ;;                  1    wreg      void 
  2357 ;; Registers used:
  2358 ;;		None
  2359 ;; Tracked objects:
  2360 ;;		On entry : 0/0
  2361 ;;		On exit  : 0/0
  2362 ;;		Unchanged: 0/0
  2363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2364 ;;      Params:         0       0       0       0       0       0       0       0       0
  2365 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2366 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2367 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2368 ;;Total ram usage:        0 bytes
  2369 ;; Hardware stack levels used:    1
  2370 ;; This function calls:
  2371 ;;		Nothing
  2372 ;; This function is called by:
  2373 ;;		_main
  2374 ;; This function uses a non-reentrant model
  2375 ;;
  2376                           
  2377                           	psect	text12
  2378  0012DA                     __ptext12:
  2379                           	opt callstack 0
  2380  0012DA                     _UART_Close:
  2381                           	opt callstack 30
  2382  0012DA                     
  2383                           ;./uart.h: 29:      RCSTAbits.SPEN = 0;
  2384  0012DA  9EAB               	bcf	171,7,c	;volatile
  2385  0012DC  0012               	return		;funcret
  2386  0012DE                     __end_of_UART_Close:
  2387                           	opt callstack 0
  2388                           
  2389                           	psect	rparam
  2390  0000                     tosu	equ	0xFFF
  2391                           tosh	equ	0xFFE
  2392                           tosl	equ	0xFFD
  2393                           stkptr	equ	0xFFC
  2394                           pclatu	equ	0xFFB
  2395                           pclath	equ	0xFFA
  2396                           pcl	equ	0xFF9
  2397                           tblptru	equ	0xFF8
  2398                           tblptrh	equ	0xFF7
  2399                           tblptrl	equ	0xFF6
  2400                           tablat	equ	0xFF5
  2401                           prodh	equ	0xFF4
  2402                           prodl	equ	0xFF3
  2403                           indf0	equ	0xFEF
  2404                           postinc0	equ	0xFEE
  2405                           postdec0	equ	0xFED
  2406                           preinc0	equ	0xFEC
  2407                           plusw0	equ	0xFEB
  2408                           fsr0h	equ	0xFEA
  2409                           fsr0l	equ	0xFE9
  2410                           wreg	equ	0xFE8
  2411                           indf1	equ	0xFE7
  2412                           postinc1	equ	0xFE6
  2413                           postdec1	equ	0xFE5
  2414                           preinc1	equ	0xFE4
  2415                           plusw1	equ	0xFE3
  2416                           fsr1h	equ	0xFE2
  2417                           fsr1l	equ	0xFE1
  2418                           bsr	equ	0xFE0
  2419                           indf2	equ	0xFDF
  2420                           postinc2	equ	0xFDE
  2421                           postdec2	equ	0xFDD
  2422                           preinc2	equ	0xFDC
  2423                           plusw2	equ	0xFDB
  2424                           fsr2h	equ	0xFDA
  2425                           fsr2l	equ	0xFD9
  2426                           status	equ	0xFD8


Data Sizes:
    Strings     243
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     41      41
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_25(CODE[4]), STR_13(CODE[4]), STR_2(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_25(CODE[4]), STR_13(CODE[4]), STR_2(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 10
		 -> main@temp(COMRAM[10]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 10
		 -> main@temp(COMRAM[10]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 10
		 -> main@temp(COMRAM[10]), 

    UART_Read@info	PTR unsigned char  size(2) Largest target is 10
		 -> main@temp(COMRAM[10]), 

    UART_Write@info	PTR unsigned char  size(2) Largest target is 14
		 -> STR_27(CODE[10]), STR_26(CODE[14]), STR_24(CODE[11]), STR_23(CODE[11]), 
		 -> STR_22(CODE[11]), STR_21(CODE[11]), STR_20(CODE[11]), STR_19(CODE[11]), 
		 -> STR_18(CODE[11]), STR_17(CODE[11]), STR_16(CODE[11]), STR_15(CODE[10]), 
		 -> STR_14(CODE[10]), STR_12(CODE[11]), STR_11(CODE[10]), STR_10(CODE[10]), 
		 -> STR_9(CODE[10]), STR_8(CODE[10]), STR_7(CODE[10]), STR_6(CODE[10]), 
		 -> STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[10]), main@temp(COMRAM[10]), 
		 -> STR_1(CODE[9]), 


Critical Paths under _main in COMRAM

    _main->_UART_Open
    _atoi->_isspace
    _UART_Open->___aldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0    5751
                                             28 COMRAM    13    13      0
                         _UART_Close
                          _UART_Open
                          _UART_Read
                         _UART_Write
                               _atoi
                            _strncmp
 ---------------------------------------------------------------------------------
 (1) _strncmp                                             11     5      6     909
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (1) _atoi                                                15    13      2    1152
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (2) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _UART_Write                                           6     4      2    2142
                                              0 COMRAM     6     4      2
                       _UART_TX_Busy
 ---------------------------------------------------------------------------------
 (2) _UART_TX_Busy                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Read                                            6     4      2     406
                                              0 COMRAM     6     4      2
                      _UART_RX_Ready
 ---------------------------------------------------------------------------------
 (2) _UART_RX_Ready                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Open                                           14    10      4     836
                                             14 COMRAM    14    10      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _UART_Close                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Close
   _UART_Open
     ___aldiv
   _UART_Read
     _UART_RX_Ready
   _UART_Write
     _UART_TX_Busy
   _atoi
     ___wmul
     _isdigit
     _isspace
   _strncmp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     29      29       1       43.2%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue May 24 16:23:45 2022

                     l33 0F02                       l42 12C6                       l36 12DC  
                     l45 12D8                       l54 1174                       l80 0A0C  
                     l65 1202                       l81 0A1E                       l73 09A0  
                     l90 0B54                       l91 0B66                       l75 09B2  
                     l92 0B78                       l76 09C4                       l93 0B8A  
                     l85 0B0C                       l77 09D6                       l78 09E8  
                     l87 0B1E                       l79 09FA                       l88 0B30  
                     l89 0B42                       l98 0C4E                       u10 12C4  
                     u11 12BE                       u20 12C6      ___wmul@multiplicand 0003  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000                      l101 12B2  
                    l180 100E                      l800 0DD2                      l803 0DDA  
                    l821 10E4                      l806 128C                      l814 1254  
                    l832 12D2                      l914 12DA                      l828 12B4  
           __CFG_CPB$OFF 000000                      u410 0F16                      u411 0F12  
                    u420 0F38                      u500 1288                      u421 0F34  
                    u430 0F72                      u431 0F6E                      u440 0F94  
                    u600 1174                      u441 0F90                      u601 1170  
                    u450 0FBC                      u530 0E64                      u610 1192  
           __CFG_CPD$OFF 000000                      u451 0FB8                      u531 0E60  
                    u515 0DEE                      u611 118E                      u460 0FEE  
                    u620 11C0                      u700 0CBC                      u461 0FEA  
                    u525 0E28                      u621 11BC                      u701 0CB8  
                    u630 11DE                      u470 121C                      u710 0CD8  
                    u631 11DA                      u471 1218                      u711 0CD4  
                    u560 0EEE                      u480 124A                      u720 0D8C  
                    u640 103A                      u561 0EEA                      u545 0E76  
                    u481 1246                      u721 0D86                      u641 1036  
                    u570 111E                      u490 1286                      u730 0D8E  
                    u650 106C                      u555 0EB0                      u491 1280  
                    u651 1068                      u580 1134                      u740 0DA4  
                    u660 1088                      u581 1130                      u741 0DA0  
                    u661 1084                      u590 1164                      u750 0DB6  
                    u670 109A                      u751 0DB2                      u671 1096  
                    u680 10C2                      u760 0968                      u577 1114  
                    u681 10BE                      u761 0964                      u690 0C88  
                    u770 0AC8                      u691 0C84                      u771 0AC4  
                    u780 0C34                      u597 115A                      u781 0C30  
           __CFG_BOR$OFF 000000                      wreg 000FE8             __CFG_FOSC$HS 000000  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     l1110 0F04  
                   l1120 0F38                     l1112 0F08                     l1200 11DE  
                   l1104 128E                     l1130 0F7A                     l1122 0F48  
                   l1114 0F16                     l1202 11E6                     l1106 12AA  
                   l1210 1046                     l1140 0FCC                     l1132 0F86  
                   l1124 0F4C                     l1116 0F26                     l1220 10C2  
                   l1212 1054                     l1204 1010                     l1300 0A0E  
                   l1150 0FFE                     l1142 0FCE                     l1134 0F94  
                   l1126 0F5C                     l1118 0F2A                     l1230 0C6E  
                   l1214 106C                     l1206 103A                     l1310 0AC8  
                   l1302 0A20                     l1144 0FD8                     l1136 0F9E  
                   l1128 0F72                     l1160 124A                     l1240 0CC6  
                   l1232 0C88                     l1224 0C52                     l1216 1088  
                   l1320 0B20                     l1312 0AE0                     l1304 0A30  
                   l1138 0FBC                     l1146 0FDE                     l1170 0DDC  
                   l1162 124E                     l1154 1204                     l1242 0CDC  
                   l1234 0CBC                     l1226 0C66                     l1218 109A  
                   l1330 0B7A                     l1322 0B32                     l1314 0AEC  
                   l1306 0A40                     l1148 0FEE                     l1180 0EEE  
                   l1172 0E54                     l1156 1208                     l1260 0DB6  
                   l1252 0D56                     l1244 0CE4                     l1236 0CC0  
                   l1228 0C6A                     l1340 0C34                     l1332 0B8C  
                   l1324 0B44                     l1316 0AF8                     l1308 0A9A  
                   l1174 0E64                     l1190 1138                     l1182 10E6  
                   l1166 1256                     l1158 121C                     l1246 0CEC  
                   l1342 0C40                     l1334 0B9C                     l1326 0B56  
                   l1318 0B0E                     l1270 0902                     l1176 0EDC  
                   l1192 1176                     l1184 10F2                     l1256 0D92  
                   l1248 0D1E                     l1344 0C42                     l1328 0B68  
                   l1336 0BAC                     l1280 0968                     l1272 0916  
                   l1178 0EDE                     l1194 117E                     l1186 1120  
                   l1258 0DA4                     l1370 0D08                     l1338 0C06  
                   l1290 09B4                     l1282 0974                     l1274 0922  
                   l1266 08F6                     l1196 1192                     l1188 1134  
                   l1292 09C6                     l1284 0980                     l1276 092E  
                   l1268 08FE                     l1198 11C0                     l1366 0A54  
                   l1294 09D8                     l1286 098C                     l1278 093A  
                   l1368 0BC0                     l1296 09EA                     l1288 09A2  
                   l1298 09FC                     STR_1 08E0                     STR_2 08F1  
                   STR_3 08D6                     STR_4 0886                     STR_5 0890  
                   STR_6 089A                     STR_7 08A4                     STR_8 08AE  
                   STR_9 08B8                     _RCIE 007CED                     _RCIF 007CF5  
                   _TXIE 007CEC                     _atoi 0C52                     _main 08F6  
                   fsr0h 000FEA                     indf0 000FEF                     fsr2h 000FDA  
                   fsr0l 000FE9                     indf2 000FDF                     fsr2l 000FD9  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
          __CFG_PLLDIV$1 000000           __CFG_CCP2MX$ON 000000          __end_of___aldiv 1010  
                  ?_atoi 0008                    ?_main 0001                    STR_10 08C2  
                  STR_11 08CC                    STR_12 0867                    STR_20 083B  
                  STR_13 08E9                    STR_21 0846                    STR_14 087C  
                  STR_22 0851                    STR_15 08D6                    STR_23 085C  
                  STR_24 0867                    STR_16 080F                    STR_25 08ED  
                  STR_17 081A                    STR_18 0825                    STR_26 0801  
                  STR_27 0872                    STR_19 0830                    _RCREG 000FAE  
                  _SPBRG 000FAF                    _PORTB 000F81            __CFG_USBDIV$1 000000  
                  _TRISB 000F93              ?_UART_Close 0001                    _TXREG 000FAD  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000              ?_UART_Write 0001       __size_of_UART_Read 008E  
     __size_of_UART_Open 0128            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000        UART_Open@baudrate 000F  
        __end_of_isdigit 128E             main@numPorta 0029                    atoi@n 0015  
                  atoi@s 0008          __end_of_isspace 1256                    tablat 000FF5  
                  status 000FD8          __end_of_strncmp 10E6           __CFG_ICPRT$OFF 000000  
        __initialization 12C8             __end_of_atoi 0DDC             __end_of_main 0C52  
                 ??_atoi 000A                   ??_main 001D            __activetblptr 000002  
         __CFG_XINST$OFF 000000      __size_of_UART_Close 0004        __end_of_UART_Read 1204  
      __end_of_UART_Open 0F04      __size_of_UART_Write 0090                ??___aldiv 0009  
                 ___wmul 128E    __end_of_UART_RX_Ready 12DA                ??_isdigit 0003  
           __mediumconst 0000                ??_isspace 0003                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                ??_strncmp 0007  
             __accesstop 0060  __end_of__initialization 12C8          __CFG_PBADEN$OFF 000000  
          ___rparam_used 000001           __pcstackCOMRAM 0001                  ?___wmul 0001  
           ??_UART_Close 0001             ??_UART_Write 0003            ?_UART_TX_Busy 0001  
        __CFG_VREGEN$OFF 000000                  __Hparam 0000                  __Lparam 0000  
     __end_of_UART_Close 12DE                  ___aldiv 0F04          __size_of___wmul 0026  
     __end_of_UART_Write 1176             __psmallconst 0800          __CFG_STVREN$OFF 000000  
                __pcinit 12C8                  __ramtop 0800                  __ptext0 08F6  
                __ptext1 1010                  __ptext2 0C52                  __ptext3 1204  
                __ptext4 1256                  __ptext5 128E                  __ptext6 10E6  
                __ptext7 12B4                  __ptext8 1176                  __ptext9 12D2  
                _isdigit 1256         ___aldiv@dividend 0001                  _isspace 1204  
            UART_Write@i 0005                  atoi@neg 000E           ??_UART_TX_Busy 0001  
                _strncmp 1010     end_of_initialization 12C8            __Lmediumconst 0000  
              _RCSTAbits 000FAB         ___aldiv@quotient 000B                  postinc2 000FDE  
              _UART_Read 1176                _UART_Open 0DDC                _PORTBbits 000F81  
         UART_Write@info 0001                _TRISCbits 000F94                _TXSTAbits 000FAC  
         __end_of___wmul 12B4               ?_UART_Read 0001               ?_UART_Open 000F  
    start_initialization 12C8   __size_of_UART_RX_Ready 0008                 ??___wmul 0005  
   __end_of_UART_TX_Busy 12C8         __CFG_LPT1OSC$OFF 000000                 ?___aldiv 0001  
          UART_Read@info 0001              ??_UART_Read 0003              ??_UART_Open 0013  
          _UART_RX_Ready 12D2              __smallconst 0800                 ?_isdigit 0001  
               ?_isspace 0001                 ?_strncmp 0001               UART_Read@i 0005  
             UART_Open@x 001B          ___aldiv@divisor 0005          ___aldiv@counter 0009  
         ___wmul@product 0005         __CFG_WDTPS$32768 000000           ?_UART_RX_Ready 0001  
      ___wmul@multiplier 0001    __size_of_UART_TX_Busy 0014                 __Hrparam 0000  
               __Lrparam 0000         __size_of___aldiv 010C                 _atoi$761 0010  
               _atoi$762 0014                 _atoi$763 0012         __size_of_isdigit 0038  
       __size_of_isspace 0052                 __ptext10 0DDC                 __ptext11 0F04  
               __ptext12 12DA             _UART_TX_Busy 12B4         __size_of_strncmp 00D6  
          __size_of_atoi 018A            __size_of_main 035C          ??_UART_RX_Ready 0001  
               main@temp 001F              _isspace$779 0007    __CFG_CPUDIV$OSC1_PLL2 000000  
               isdigit@c 0001                 isspace@c 0001                strncmp@_l 0001  
              strncmp@_r 0003               _UART_Close 12DA                 strncmp@l 0008  
               strncmp@n 0005                 strncmp@r 000A             ___aldiv@sign 000A  
             _UART_Write 10E6  
