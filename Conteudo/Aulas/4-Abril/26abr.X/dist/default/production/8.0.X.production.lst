

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Apr 27 16:59:38 2022

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27  0000                     
    28                           ; Version 2.10
    29                           ; Generated 31/07/2019 GMT
    30                           ; 
    31                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F4550 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     
    63                           	psect	idataCOMRAM
    64  000A92                     __pidataCOMRAM:
    65                           	opt callstack 0
    66                           
    67                           ;initializer for _BackLight_State
    68  000A92  08                 	db	8
    69                           
    70                           	psect	nvCOMRAM
    71  00000C                     __pnvCOMRAM:
    72                           	opt callstack 0
    73  00000C                     _i2c_add:
    74                           	opt callstack 0
    75  00000C                     	ds	1
    76  0000                     _SSPBUF	set	4041
    77  0000                     _TRISBbits	set	3987
    78  0000                     _SSPADD	set	4040
    79  0000                     _SSPSTAT	set	4039
    80  0000                     _SSPCON2	set	4037
    81  0000                     _SSPCON1	set	4038
    82  0000                     _RCEN	set	32299
    83  0000                     _ACKSTAT	set	32302
    84  0000                     _SSPIF	set	31987
    85  0000                     _ACKEN	set	32300
    86  0000                     _ACKDT	set	32301
    87  0000                     _PEN	set	32298
    88  0000                     _RSEN	set	32297
    89  0000                     _SEN	set	32296
    90                           
    91                           	psect	smallconst
    92  000800                     __psmallconst:
    93                           	opt callstack 0
    94  000800  00                 	db	0
    95  000801                     STR_1:
    96  000801  54                 	db	84	;'T'
    97  000802  45                 	db	69	;'E'
    98  000803  53                 	db	83	;'S'
    99  000804  54                 	db	84	;'T'
   100  000805  45                 	db	69	;'E'
   101  000806  21                 	db	33
   102  000807  00                 	db	0
   103                           
   104                           ; #config settings
   105  000808  00                 	db	0	; dummy byte at the end
   106  0000                     
   107                           	psect	cinit
   108  0009C6                     __pcinit:
   109                           	opt callstack 0
   110  0009C6                     start_initialization:
   111                           	opt callstack 0
   112  0009C6                     __initialization:
   113                           	opt callstack 0
   114                           
   115                           ; Initialize objects allocated to COMRAM (1 bytes)
   116                           ; load TBLPTR registers with __pidataCOMRAM
   117  0009C6  0E92               	movlw	low __pidataCOMRAM
   118  0009C8  6EF6               	movwf	tblptrl,c
   119  0009CA  0E0A               	movlw	high __pidataCOMRAM
   120  0009CC  6EF7               	movwf	tblptrh,c
   121  0009CE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   122  0009D0  6EF8               	movwf	tblptru,c
   123  0009D2  0009               	tblrd		*+	;fetch initializer
   124  0009D4  CFF5 F00E          	movff	tablat,__pdataCOMRAM
   125                           
   126                           ; Clear objects allocated to COMRAM (1 bytes)
   127  0009D8  6A0D               	clrf	__pbssCOMRAM& (0+255),c
   128  0009DA                     end_of_initialization:
   129                           	opt callstack 0
   130  0009DA                     __end_of__initialization:
   131                           	opt callstack 0
   132  0009DA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   133  0009DC  6EF8               	movwf	tblptru,c
   134  0009DE  0100               	movlb	0
   135  0009E0  EFBC  F004         	goto	_main	;jump to C main() function
   136                           
   137                           	psect	bssCOMRAM
   138  00000D                     __pbssCOMRAM:
   139                           	opt callstack 0
   140  00000D                     _RS:
   141                           	opt callstack 0
   142  00000D                     	ds	1
   143                           
   144                           	psect	dataCOMRAM
   145  00000E                     __pdataCOMRAM:
   146                           	opt callstack 0
   147  00000E                     _BackLight_State:
   148                           	opt callstack 0
   149  00000E                     	ds	1
   150                           
   151                           	psect	cstackCOMRAM
   152  000001                     __pcstackCOMRAM:
   153                           	opt callstack 0
   154  000001                     ??_I2C_Master_Wait:
   155  000001                     
   156                           ; 1 bytes @ 0x0
   157  000001                     	ds	1
   158  000002                     I2C_Master_Write@data:
   159                           	opt callstack 0
   160                           
   161                           ; 1 bytes @ 0x1
   162  000002                     	ds	1
   163  000003                     IO_Expander_Write@Data:
   164                           	opt callstack 0
   165                           
   166                           ; 1 bytes @ 0x2
   167  000003                     	ds	1
   168  000004                     LCD_Write_4Bit@Nibble:
   169                           	opt callstack 0
   170                           
   171                           ; 1 bytes @ 0x3
   172  000004                     	ds	1
   173  000005                     LCD_CMD@CMD:
   174                           	opt callstack 0
   175  000005                     LCD_Write_Char@Data:
   176                           	opt callstack 0
   177                           
   178                           ; 1 bytes @ 0x4
   179  000005                     	ds	1
   180  000006                     ??_LCD_Init:
   181  000006                     LCD_Set_Cursor@COL:
   182                           	opt callstack 0
   183  000006                     LCD_Write_String@Str:
   184                           	opt callstack 0
   185                           
   186                           ; 2 bytes @ 0x5
   187  000006                     	ds	1
   188  000007                     ??_LCD_Set_Cursor:
   189  000007                     LCD_Init@I2C_Add:
   190                           	opt callstack 0
   191                           
   192                           ; 1 bytes @ 0x6
   193  000007                     	ds	1
   194  000008                     ??_LCD_Write_String:
   195                           
   196                           ; 1 bytes @ 0x7
   197  000008                     	ds	1
   198  000009                     LCD_Set_Cursor@ROW:
   199                           	opt callstack 0
   200                           
   201                           ; 1 bytes @ 0x8
   202  000009                     	ds	1
   203  00000A                     LCD_Write_String@i:
   204                           	opt callstack 0
   205                           
   206                           ; 2 bytes @ 0x9
   207  00000A                     	ds	2
   208  00000C                     
   209                           ; 1 bytes @ 0xB
   210 ;;
   211 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   212 ;;
   213 ;; *************** function _main *****************
   214 ;; Defined at:
   215 ;;		line 75 in file "main.c"
   216 ;; Parameters:    Size  Location     Type
   217 ;;		None
   218 ;; Auto vars:     Size  Location     Type
   219 ;;		None
   220 ;; Return value:  Size  Location     Type
   221 ;;                  1    wreg      void 
   222 ;; Registers used:
   223 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   224 ;; Tracked objects:
   225 ;;		On entry : 0/0
   226 ;;		On exit  : 0/0
   227 ;;		Unchanged: 0/0
   228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   229 ;;      Params:         0       0       0       0       0       0       0       0       0
   230 ;;      Locals:         0       0       0       0       0       0       0       0       0
   231 ;;      Temps:          0       0       0       0       0       0       0       0       0
   232 ;;      Totals:         0       0       0       0       0       0       0       0       0
   233 ;;Total ram usage:        0 bytes
   234 ;; Hardware stack levels required when called:    6
   235 ;; This function calls:
   236 ;;		_I2C_Master_Init
   237 ;;		_LCD_Init
   238 ;;		_LCD_Set_Cursor
   239 ;;		_LCD_Write_String
   240 ;; This function is called by:
   241 ;;		Startup code after reset
   242 ;; This function uses a non-reentrant model
   243 ;;
   244                           
   245                           	psect	text0
   246  000978                     __ptext0:
   247                           	opt callstack 0
   248  000978                     _main:
   249                           	opt callstack 25
   250  000978                     
   251                           ;main.c: 78:     I2C_Master_Init();
   252  000978  EC36  F005         	call	_I2C_Master_Init	;wreg free
   253  00097C                     
   254                           ;main.c: 79:     LCD_Init(0x4E);
   255  00097C  0E4E               	movlw	78
   256  00097E  EC05  F004         	call	_LCD_Init
   257  000982                     
   258                           ;main.c: 80:     LCD_Set_Cursor(1,1);
   259  000982  0E01               	movlw	1
   260  000984  6E06               	movwf	LCD_Set_Cursor@COL^0,c
   261  000986  0E01               	movlw	1
   262  000988  EC5C  F004         	call	_LCD_Set_Cursor
   263  00098C                     
   264                           ;main.c: 82:     LCD_Write_String("TESTE!");
   265  00098C  0E01               	movlw	low STR_1
   266  00098E  6E06               	movwf	LCD_Write_String@Str^0,c
   267  000990  0E08               	movlw	high STR_1
   268  000992  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
   269  000994  EC91  F004         	call	_LCD_Write_String	;wreg free
   270  000998                     l134:
   271  000998  EFCC  F004         	goto	l134
   272  00099C  EF00  F000         	goto	start
   273  0009A0                     __end_of_main:
   274                           	opt callstack 0
   275                           
   276 ;; *************** function _LCD_Write_String *****************
   277 ;; Defined at:
   278 ;;		line 134 in file "lcdi2c.c"
   279 ;; Parameters:    Size  Location     Type
   280 ;;  Str             2    5[COMRAM] PTR unsigned char 
   281 ;;		 -> STR_1(7), 
   282 ;; Auto vars:     Size  Location     Type
   283 ;;  i               2    9[COMRAM] int 
   284 ;; Return value:  Size  Location     Type
   285 ;;                  1    wreg      void 
   286 ;; Registers used:
   287 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   288 ;; Tracked objects:
   289 ;;		On entry : 0/0
   290 ;;		On exit  : 0/0
   291 ;;		Unchanged: 0/0
   292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   293 ;;      Params:         2       0       0       0       0       0       0       0       0
   294 ;;      Locals:         2       0       0       0       0       0       0       0       0
   295 ;;      Temps:          2       0       0       0       0       0       0       0       0
   296 ;;      Totals:         6       0       0       0       0       0       0       0       0
   297 ;;Total ram usage:        6 bytes
   298 ;; Hardware stack levels used:    1
   299 ;; Hardware stack levels required when called:    5
   300 ;; This function calls:
   301 ;;		_LCD_Write_Char
   302 ;; This function is called by:
   303 ;;		_main
   304 ;; This function uses a non-reentrant model
   305 ;;
   306                           
   307                           	psect	text1
   308  000922                     __ptext1:
   309                           	opt callstack 0
   310  000922                     _LCD_Write_String:
   311                           	opt callstack 25
   312  000922                     
   313                           ;lcdi2c.c: 134: void LCD_Write_String(char* Str);lcdi2c.c: 135: {;lcdi2c.c: 136:   for(i
      +                          nt i=0; Str[i]!='\0'; i++)
   314  000922  0E00               	movlw	0
   315  000924  6E0B               	movwf	(LCD_Write_String@i+1)^0,c
   316  000926  0E00               	movlw	0
   317  000928  6E0A               	movwf	LCD_Write_String@i^0,c
   318  00092A  EFA7  F004         	goto	l971
   319  00092E                     l967:
   320                           
   321                           ;lcdi2c.c: 137:     LCD_Write_Char(Str[i]);
   322  00092E  500A               	movf	LCD_Write_String@i^0,w,c
   323  000930  2406               	addwf	LCD_Write_String@Str^0,w,c
   324  000932  6E08               	movwf	??_LCD_Write_String^0,c
   325  000934  500B               	movf	(LCD_Write_String@i+1)^0,w,c
   326  000936  2007               	addwfc	(LCD_Write_String@Str+1)^0,w,c
   327  000938  6E09               	movwf	(??_LCD_Write_String+1)^0,c
   328  00093A  C008  FFF6         	movff	??_LCD_Write_String,tblptrl
   329  00093E  C009  FFF7         	movff	??_LCD_Write_String+1,tblptrh
   330  000942                     	if	0	;tblptru may be non-zero
   331  000942                     	endif
   332  000942                     	if	0	;tblptru may be non-zero
   333  000942                     	endif
   334  000942  0008               	tblrd		*
   335  000944  50F5               	movf	tablat,w,c
   336  000946  EC0F  F005         	call	_LCD_Write_Char
   337  00094A  4A0A               	infsnz	LCD_Write_String@i^0,f,c
   338  00094C  2A0B               	incf	(LCD_Write_String@i+1)^0,f,c
   339  00094E                     l971:
   340  00094E  500A               	movf	LCD_Write_String@i^0,w,c
   341  000950  2406               	addwf	LCD_Write_String@Str^0,w,c
   342  000952  6E08               	movwf	??_LCD_Write_String^0,c
   343  000954  500B               	movf	(LCD_Write_String@i+1)^0,w,c
   344  000956  2007               	addwfc	(LCD_Write_String@Str+1)^0,w,c
   345  000958  6E09               	movwf	(??_LCD_Write_String+1)^0,c
   346  00095A  C008  FFF6         	movff	??_LCD_Write_String,tblptrl
   347  00095E  C009  FFF7         	movff	??_LCD_Write_String+1,tblptrh
   348  000962                     	if	0	;tblptru may be non-zero
   349  000962                     	endif
   350  000962                     	if	0	;tblptru may be non-zero
   351  000962                     	endif
   352  000962  0008               	tblrd		*
   353  000964  50F5               	movf	tablat,w,c
   354  000966  0900               	iorlw	0
   355  000968  A4D8               	btfss	status,2,c
   356  00096A  EFB9  F004         	goto	u61
   357  00096E  EFBB  F004         	goto	u60
   358  000972                     u61:
   359  000972  EF97  F004         	goto	l967
   360  000976                     u60:
   361  000976  0012               	return		;funcret
   362  000978                     __end_of_LCD_Write_String:
   363                           	opt callstack 0
   364                           
   365 ;; *************** function _LCD_Write_Char *****************
   366 ;; Defined at:
   367 ;;		line 127 in file "lcdi2c.c"
   368 ;; Parameters:    Size  Location     Type
   369 ;;  Data            1    wreg     unsigned char 
   370 ;; Auto vars:     Size  Location     Type
   371 ;;  Data            1    4[COMRAM] unsigned char 
   372 ;; Return value:  Size  Location     Type
   373 ;;                  1    wreg      void 
   374 ;; Registers used:
   375 ;;		wreg, status,2, status,0, cstack
   376 ;; Tracked objects:
   377 ;;		On entry : 0/0
   378 ;;		On exit  : 0/0
   379 ;;		Unchanged: 0/0
   380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   381 ;;      Params:         0       0       0       0       0       0       0       0       0
   382 ;;      Locals:         1       0       0       0       0       0       0       0       0
   383 ;;      Temps:          0       0       0       0       0       0       0       0       0
   384 ;;      Totals:         1       0       0       0       0       0       0       0       0
   385 ;;Total ram usage:        1 bytes
   386 ;; Hardware stack levels used:    1
   387 ;; Hardware stack levels required when called:    4
   388 ;; This function calls:
   389 ;;		_LCD_Write_4Bit
   390 ;; This function is called by:
   391 ;;		_LCD_Write_String
   392 ;; This function uses a non-reentrant model
   393 ;;
   394                           
   395                           	psect	text2
   396  000A1E                     __ptext2:
   397                           	opt callstack 0
   398  000A1E                     _LCD_Write_Char:
   399                           	opt callstack 25
   400                           
   401                           ;incstack = 0
   402                           ;LCD_Write_Char@Data stored from wreg
   403  000A1E  6E05               	movwf	LCD_Write_Char@Data^0,c
   404  000A20                     
   405                           ;lcdi2c.c: 127: void LCD_Write_Char(char Data);lcdi2c.c: 128: {;lcdi2c.c: 129:   RS = 1;
   406  000A20  0E01               	movlw	1
   407  000A22  6E0D               	movwf	_RS^0,c
   408  000A24                     
   409                           ;lcdi2c.c: 130:   LCD_Write_4Bit(Data & 0xF0);
   410  000A24  5005               	movf	LCD_Write_Char@Data^0,w,c
   411  000A26  0BF0               	andlw	240
   412  000A28  ECF2  F004         	call	_LCD_Write_4Bit
   413  000A2C                     
   414                           ;lcdi2c.c: 131:   LCD_Write_4Bit((Data << 4) & 0xF0);
   415  000A2C  3805               	swapf	LCD_Write_Char@Data^0,w,c
   416  000A2E  0BF0               	andlw	240
   417  000A30  0BF0               	andlw	240
   418  000A32  ECF2  F004         	call	_LCD_Write_4Bit
   419  000A36  0012               	return		;funcret
   420  000A38                     __end_of_LCD_Write_Char:
   421                           	opt callstack 0
   422                           
   423 ;; *************** function _LCD_Set_Cursor *****************
   424 ;; Defined at:
   425 ;;		line 140 in file "lcdi2c.c"
   426 ;; Parameters:    Size  Location     Type
   427 ;;  ROW             1    wreg     unsigned char 
   428 ;;  COL             1    5[COMRAM] unsigned char 
   429 ;; Auto vars:     Size  Location     Type
   430 ;;  ROW             1    8[COMRAM] unsigned char 
   431 ;; Return value:  Size  Location     Type
   432 ;;                  1    wreg      void 
   433 ;; Registers used:
   434 ;;		wreg, status,2, status,0, cstack
   435 ;; Tracked objects:
   436 ;;		On entry : 0/0
   437 ;;		On exit  : 0/0
   438 ;;		Unchanged: 0/0
   439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   440 ;;      Params:         1       0       0       0       0       0       0       0       0
   441 ;;      Locals:         1       0       0       0       0       0       0       0       0
   442 ;;      Temps:          2       0       0       0       0       0       0       0       0
   443 ;;      Totals:         4       0       0       0       0       0       0       0       0
   444 ;;Total ram usage:        4 bytes
   445 ;; Hardware stack levels used:    1
   446 ;; Hardware stack levels required when called:    5
   447 ;; This function calls:
   448 ;;		_LCD_CMD
   449 ;; This function is called by:
   450 ;;		_main
   451 ;; This function uses a non-reentrant model
   452 ;;
   453                           
   454                           	psect	text3
   455  0008B8                     __ptext3:
   456                           	opt callstack 0
   457  0008B8                     _LCD_Set_Cursor:
   458                           	opt callstack 25
   459                           
   460                           ;incstack = 0
   461                           ;LCD_Set_Cursor@ROW stored from wreg
   462  0008B8  6E09               	movwf	LCD_Set_Cursor@ROW^0,c
   463  0008BA                     
   464                           ;lcdi2c.c: 140: void LCD_Set_Cursor(unsigned char ROW, unsigned char COL);lcdi2c.c: 141:
      +                           {;lcdi2c.c: 142:   switch(ROW)
   465  0008BA  EF77  F004         	goto	l983
   466  0008BE                     l975:
   467                           
   468                           ;lcdi2c.c: 145:       LCD_CMD(0xC0 + COL-1);
   469  0008BE  5006               	movf	LCD_Set_Cursor@COL^0,w,c
   470  0008C0  0FBF               	addlw	191
   471  0008C2  EC1C  F005         	call	_LCD_CMD
   472                           
   473                           ;lcdi2c.c: 146:       break;
   474  0008C6  EF90  F004         	goto	l106
   475  0008CA                     l977:
   476                           
   477                           ;lcdi2c.c: 148:       LCD_CMD(0x94 + COL-1);
   478  0008CA  5006               	movf	LCD_Set_Cursor@COL^0,w,c
   479  0008CC  0F93               	addlw	147
   480  0008CE  EC1C  F005         	call	_LCD_CMD
   481                           
   482                           ;lcdi2c.c: 149:       break;
   483  0008D2  EF90  F004         	goto	l106
   484  0008D6                     l979:
   485                           
   486                           ;lcdi2c.c: 151:       LCD_CMD(0xD4 + COL-1);
   487  0008D6  5006               	movf	LCD_Set_Cursor@COL^0,w,c
   488  0008D8  0FD3               	addlw	211
   489  0008DA  EC1C  F005         	call	_LCD_CMD
   490                           
   491                           ;lcdi2c.c: 152:       break;
   492  0008DE  EF90  F004         	goto	l106
   493  0008E2                     l981:
   494                           
   495                           ;lcdi2c.c: 155:       LCD_CMD(0x80 + COL-1);
   496  0008E2  5006               	movf	LCD_Set_Cursor@COL^0,w,c
   497  0008E4  0F7F               	addlw	127
   498  0008E6  EC1C  F005         	call	_LCD_CMD
   499                           
   500                           ;lcdi2c.c: 156:   }
   501  0008EA  EF90  F004         	goto	l106
   502  0008EE                     l983:
   503  0008EE  5009               	movf	LCD_Set_Cursor@ROW^0,w,c
   504  0008F0  6E07               	movwf	??_LCD_Set_Cursor^0,c
   505  0008F2  6A08               	clrf	(??_LCD_Set_Cursor+1)^0,c
   506                           
   507                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   508                           ; Switch size 1, requested type "simple"
   509                           ; Number of cases is 1, Range of values is 0 to 0
   510                           ; switch strategies available:
   511                           ; Name         Instructions Cycles
   512                           ; simple_byte            4     3 (average)
   513                           ;	Chosen strategy is simple_byte
   514  0008F4  5008               	movf	(??_LCD_Set_Cursor+1)^0,w,c
   515  0008F6  0A00               	xorlw	0	; case 0
   516  0008F8  B4D8               	btfsc	status,2,c
   517  0008FA  EF81  F004         	goto	l1001
   518  0008FE  EF71  F004         	goto	l981
   519  000902                     l1001:
   520                           
   521                           ; Switch size 1, requested type "simple"
   522                           ; Number of cases is 3, Range of values is 2 to 4
   523                           ; switch strategies available:
   524                           ; Name         Instructions Cycles
   525                           ; simple_byte           10     6 (average)
   526                           ;	Chosen strategy is simple_byte
   527  000902  5007               	movf	??_LCD_Set_Cursor^0,w,c
   528  000904  0A02               	xorlw	2	; case 2
   529  000906  B4D8               	btfsc	status,2,c
   530  000908  EF5F  F004         	goto	l975
   531  00090C  0A01               	xorlw	1	; case 3
   532  00090E  B4D8               	btfsc	status,2,c
   533  000910  EF65  F004         	goto	l977
   534  000914  0A07               	xorlw	7	; case 4
   535  000916  B4D8               	btfsc	status,2,c
   536  000918  EF6B  F004         	goto	l979
   537  00091C  EF71  F004         	goto	l981
   538  000920                     l106:
   539  000920  0012               	return		;funcret
   540  000922                     __end_of_LCD_Set_Cursor:
   541                           	opt callstack 0
   542                           
   543 ;; *************** function _LCD_Init *****************
   544 ;; Defined at:
   545 ;;		line 80 in file "lcdi2c.c"
   546 ;; Parameters:    Size  Location     Type
   547 ;;  I2C_Add         1    wreg     unsigned char 
   548 ;; Auto vars:     Size  Location     Type
   549 ;;  I2C_Add         1    6[COMRAM] unsigned char 
   550 ;; Return value:  Size  Location     Type
   551 ;;                  1    wreg      void 
   552 ;; Registers used:
   553 ;;		wreg, status,2, status,0, cstack
   554 ;; Tracked objects:
   555 ;;		On entry : 0/0
   556 ;;		On exit  : 0/0
   557 ;;		Unchanged: 0/0
   558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   559 ;;      Params:         0       0       0       0       0       0       0       0       0
   560 ;;      Locals:         1       0       0       0       0       0       0       0       0
   561 ;;      Temps:          1       0       0       0       0       0       0       0       0
   562 ;;      Totals:         2       0       0       0       0       0       0       0       0
   563 ;;Total ram usage:        2 bytes
   564 ;; Hardware stack levels used:    1
   565 ;; Hardware stack levels required when called:    5
   566 ;; This function calls:
   567 ;;		_IO_Expander_Write
   568 ;;		_LCD_CMD
   569 ;; This function is called by:
   570 ;;		_main
   571 ;; This function uses a non-reentrant model
   572 ;;
   573                           
   574                           	psect	text4
   575  00080A                     __ptext4:
   576                           	opt callstack 0
   577  00080A                     _LCD_Init:
   578                           	opt callstack 25
   579                           
   580                           ;incstack = 0
   581                           ;LCD_Init@I2C_Add stored from wreg
   582  00080A  6E07               	movwf	LCD_Init@I2C_Add^0,c
   583  00080C                     
   584                           ;lcdi2c.c: 80: void LCD_Init(unsigned char I2C_Add);lcdi2c.c: 81: {;lcdi2c.c: 82:   i2c_
      +                          add = I2C_Add;
   585  00080C  C007  F00C         	movff	LCD_Init@I2C_Add,_i2c_add
   586  000810                     
   587                           ;lcdi2c.c: 83:   IO_Expander_Write(0x00);
   588  000810  0E00               	movlw	0
   589  000812  EC29  F005         	call	_IO_Expander_Write
   590  000816                     
   591                           ;lcdi2c.c: 84:   _delay((unsigned long)((30)*(1000000/4000.0)));
   592  000816  0E0A               	movlw	10
   593  000818  6E06               	movwf	??_LCD_Init^0,c
   594  00081A  0EBC               	movlw	188
   595  00081C                     u77:
   596  00081C  2EE8               	decfsz	wreg,f,c
   597  00081E  D7FE               	bra	u77
   598  000820  2E06               	decfsz	??_LCD_Init^0,f,c
   599  000822  D7FC               	bra	u77
   600  000824  D000               	nop2	
   601                           
   602                           ;lcdi2c.c: 85:   LCD_CMD(0x03);
   603  000826  0E03               	movlw	3
   604  000828  EC1C  F005         	call	_LCD_CMD
   605  00082C                     
   606                           ;lcdi2c.c: 86:   _delay((unsigned long)((5)*(1000000/4000.0)));
   607  00082C  0EFA               	movlw	250
   608  00082E                     u87:
   609  00082E  D000               	nop2	
   610  000830  2EE8               	decfsz	wreg,f,c
   611  000832  D7FD               	bra	u87
   612  000834                     
   613                           ;lcdi2c.c: 87:   LCD_CMD(0x03);
   614  000834  0E03               	movlw	3
   615  000836  EC1C  F005         	call	_LCD_CMD
   616                           
   617                           ;lcdi2c.c: 88:   _delay((unsigned long)((5)*(1000000/4000.0)));
   618  00083A  0EFA               	movlw	250
   619  00083C                     u97:
   620  00083C  D000               	nop2	
   621  00083E  2EE8               	decfsz	wreg,f,c
   622  000840  D7FD               	bra	u97
   623  000842                     
   624                           ;lcdi2c.c: 89:   LCD_CMD(0x03);
   625  000842  0E03               	movlw	3
   626  000844  EC1C  F005         	call	_LCD_CMD
   627  000848                     
   628                           ;lcdi2c.c: 90:   _delay((unsigned long)((5)*(1000000/4000.0)));
   629  000848  0EFA               	movlw	250
   630  00084A                     u107:
   631  00084A  D000               	nop2	
   632  00084C  2EE8               	decfsz	wreg,f,c
   633  00084E  D7FD               	bra	u107
   634                           
   635                           ;lcdi2c.c: 91:   LCD_CMD(0x02);
   636  000850  0E02               	movlw	2
   637  000852  EC1C  F005         	call	_LCD_CMD
   638  000856                     
   639                           ;lcdi2c.c: 92:   _delay((unsigned long)((5)*(1000000/4000.0)));
   640  000856  0EFA               	movlw	250
   641  000858                     u117:
   642  000858  D000               	nop2	
   643  00085A  2EE8               	decfsz	wreg,f,c
   644  00085C  D7FD               	bra	u117
   645  00085E                     
   646                           ;lcdi2c.c: 93:   LCD_CMD(0x20 | (2 << 2));
   647  00085E  0E28               	movlw	40
   648  000860  EC1C  F005         	call	_LCD_CMD
   649                           
   650                           ;lcdi2c.c: 94:   _delay((unsigned long)((50)*(1000000/4000.0)));
   651  000864  0E11               	movlw	17
   652  000866  6E06               	movwf	??_LCD_Init^0,c
   653  000868  0E3A               	movlw	58
   654  00086A                     u127:
   655  00086A  2EE8               	decfsz	wreg,f,c
   656  00086C  D7FE               	bra	u127
   657  00086E  2E06               	decfsz	??_LCD_Init^0,f,c
   658  000870  D7FC               	bra	u127
   659  000872  D000               	nop2	
   660  000874                     
   661                           ;lcdi2c.c: 95:   LCD_CMD(0x0C);
   662  000874  0E0C               	movlw	12
   663  000876  EC1C  F005         	call	_LCD_CMD
   664  00087A                     
   665                           ;lcdi2c.c: 96:   _delay((unsigned long)((50)*(1000000/4000.0)));
   666  00087A  0E11               	movlw	17
   667  00087C  6E06               	movwf	??_LCD_Init^0,c
   668  00087E  0E3A               	movlw	58
   669  000880                     u137:
   670  000880  2EE8               	decfsz	wreg,f,c
   671  000882  D7FE               	bra	u137
   672  000884  2E06               	decfsz	??_LCD_Init^0,f,c
   673  000886  D7FC               	bra	u137
   674  000888  D000               	nop2	
   675                           
   676                           ;lcdi2c.c: 97:   LCD_CMD(0x01);
   677  00088A  0E01               	movlw	1
   678  00088C  EC1C  F005         	call	_LCD_CMD
   679  000890                     
   680                           ;lcdi2c.c: 98:   _delay((unsigned long)((50)*(1000000/4000.0)));
   681  000890  0E11               	movlw	17
   682  000892  6E06               	movwf	??_LCD_Init^0,c
   683  000894  0E3A               	movlw	58
   684  000896                     u147:
   685  000896  2EE8               	decfsz	wreg,f,c
   686  000898  D7FE               	bra	u147
   687  00089A  2E06               	decfsz	??_LCD_Init^0,f,c
   688  00089C  D7FC               	bra	u147
   689  00089E  D000               	nop2	
   690  0008A0                     
   691                           ;lcdi2c.c: 99:   LCD_CMD(0x04 | 0x02);
   692  0008A0  0E06               	movlw	6
   693  0008A2  EC1C  F005         	call	_LCD_CMD
   694                           
   695                           ;lcdi2c.c: 100:   _delay((unsigned long)((50)*(1000000/4000.0)));
   696  0008A6  0E11               	movlw	17
   697  0008A8  6E06               	movwf	??_LCD_Init^0,c
   698  0008AA  0E3A               	movlw	58
   699  0008AC                     u157:
   700  0008AC  2EE8               	decfsz	wreg,f,c
   701  0008AE  D7FE               	bra	u157
   702  0008B0  2E06               	decfsz	??_LCD_Init^0,f,c
   703  0008B2  D7FC               	bra	u157
   704  0008B4  D000               	nop2	
   705  0008B6  0012               	return		;funcret
   706  0008B8                     __end_of_LCD_Init:
   707                           	opt callstack 0
   708                           
   709 ;; *************** function _LCD_CMD *****************
   710 ;; Defined at:
   711 ;;		line 120 in file "lcdi2c.c"
   712 ;; Parameters:    Size  Location     Type
   713 ;;  CMD             1    wreg     unsigned char 
   714 ;; Auto vars:     Size  Location     Type
   715 ;;  CMD             1    4[COMRAM] unsigned char 
   716 ;; Return value:  Size  Location     Type
   717 ;;                  1    wreg      void 
   718 ;; Registers used:
   719 ;;		wreg, status,2, status,0, cstack
   720 ;; Tracked objects:
   721 ;;		On entry : 0/0
   722 ;;		On exit  : 0/0
   723 ;;		Unchanged: 0/0
   724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   725 ;;      Params:         0       0       0       0       0       0       0       0       0
   726 ;;      Locals:         1       0       0       0       0       0       0       0       0
   727 ;;      Temps:          0       0       0       0       0       0       0       0       0
   728 ;;      Totals:         1       0       0       0       0       0       0       0       0
   729 ;;Total ram usage:        1 bytes
   730 ;; Hardware stack levels used:    1
   731 ;; Hardware stack levels required when called:    4
   732 ;; This function calls:
   733 ;;		_LCD_Write_4Bit
   734 ;; This function is called by:
   735 ;;		_LCD_Init
   736 ;;		_LCD_Set_Cursor
   737 ;;		_LCD_SL
   738 ;;		_LCD_SR
   739 ;;		_LCD_Clear
   740 ;; This function uses a non-reentrant model
   741 ;;
   742                           
   743                           	psect	text5
   744  000A38                     __ptext5:
   745                           	opt callstack 0
   746  000A38                     _LCD_CMD:
   747                           	opt callstack 25
   748                           
   749                           ;incstack = 0
   750                           ;LCD_CMD@CMD stored from wreg
   751  000A38  6E05               	movwf	LCD_CMD@CMD^0,c
   752  000A3A                     
   753                           ;lcdi2c.c: 120: void LCD_CMD(unsigned char CMD);lcdi2c.c: 121: {;lcdi2c.c: 122:   RS = 0
      +                          ;
   754  000A3A  0E00               	movlw	0
   755  000A3C  6E0D               	movwf	_RS^0,c
   756  000A3E                     
   757                           ;lcdi2c.c: 123:   LCD_Write_4Bit(CMD & 0xF0);
   758  000A3E  5005               	movf	LCD_CMD@CMD^0,w,c
   759  000A40  0BF0               	andlw	240
   760  000A42  ECF2  F004         	call	_LCD_Write_4Bit
   761  000A46                     
   762                           ;lcdi2c.c: 124:   LCD_Write_4Bit((CMD << 4) & 0xF0);
   763  000A46  3805               	swapf	LCD_CMD@CMD^0,w,c
   764  000A48  0BF0               	andlw	240
   765  000A4A  0BF0               	andlw	240
   766  000A4C  ECF2  F004         	call	_LCD_Write_4Bit
   767  000A50  0012               	return		;funcret
   768  000A52                     __end_of_LCD_CMD:
   769                           	opt callstack 0
   770                           
   771 ;; *************** function _LCD_Write_4Bit *****************
   772 ;; Defined at:
   773 ;;		line 111 in file "lcdi2c.c"
   774 ;; Parameters:    Size  Location     Type
   775 ;;  Nibble          1    wreg     unsigned char 
   776 ;; Auto vars:     Size  Location     Type
   777 ;;  Nibble          1    3[COMRAM] unsigned char 
   778 ;; Return value:  Size  Location     Type
   779 ;;                  1    wreg      void 
   780 ;; Registers used:
   781 ;;		wreg, status,2, status,0, cstack
   782 ;; Tracked objects:
   783 ;;		On entry : 0/0
   784 ;;		On exit  : 0/0
   785 ;;		Unchanged: 0/0
   786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   787 ;;      Params:         0       0       0       0       0       0       0       0       0
   788 ;;      Locals:         1       0       0       0       0       0       0       0       0
   789 ;;      Temps:          0       0       0       0       0       0       0       0       0
   790 ;;      Totals:         1       0       0       0       0       0       0       0       0
   791 ;;Total ram usage:        1 bytes
   792 ;; Hardware stack levels used:    1
   793 ;; Hardware stack levels required when called:    3
   794 ;; This function calls:
   795 ;;		_IO_Expander_Write
   796 ;; This function is called by:
   797 ;;		_LCD_CMD
   798 ;;		_LCD_Write_Char
   799 ;; This function uses a non-reentrant model
   800 ;;
   801                           
   802                           	psect	text6
   803  0009E4                     __ptext6:
   804                           	opt callstack 0
   805  0009E4                     _LCD_Write_4Bit:
   806                           	opt callstack 25
   807                           
   808                           ;incstack = 0
   809                           ;LCD_Write_4Bit@Nibble stored from wreg
   810  0009E4  6E04               	movwf	LCD_Write_4Bit@Nibble^0,c
   811  0009E6                     
   812                           ;lcdi2c.c: 111: void LCD_Write_4Bit(unsigned char Nibble);lcdi2c.c: 112: {;lcdi2c.c: 114
      +                          :   Nibble |= RS;
   813  0009E6  500D               	movf	_RS^0,w,c
   814  0009E8  1204               	iorwf	LCD_Write_4Bit@Nibble^0,f,c
   815  0009EA                     
   816                           ;lcdi2c.c: 115:   IO_Expander_Write(Nibble | 0x04);
   817  0009EA  5004               	movf	LCD_Write_4Bit@Nibble^0,w,c
   818  0009EC  0904               	iorlw	4
   819  0009EE  EC29  F005         	call	_IO_Expander_Write
   820  0009F2                     
   821                           ;lcdi2c.c: 116:   IO_Expander_Write(Nibble & 0xFB);
   822  0009F2  5004               	movf	LCD_Write_4Bit@Nibble^0,w,c
   823  0009F4  0BFB               	andlw	251
   824  0009F6  EC29  F005         	call	_IO_Expander_Write
   825  0009FA                     
   826                           ;lcdi2c.c: 117:   _delay((unsigned long)((50)*(1000000/4000000.0)));
   827  0009FA  0E04               	movlw	4
   828  0009FC                     u167:
   829  0009FC  2EE8               	decfsz	wreg,f,c
   830  0009FE  D7FE               	bra	u167
   831  000A00  0012               	return		;funcret
   832  000A02                     __end_of_LCD_Write_4Bit:
   833                           	opt callstack 0
   834                           
   835 ;; *************** function _IO_Expander_Write *****************
   836 ;; Defined at:
   837 ;;		line 103 in file "lcdi2c.c"
   838 ;; Parameters:    Size  Location     Type
   839 ;;  Data            1    wreg     unsigned char 
   840 ;; Auto vars:     Size  Location     Type
   841 ;;  Data            1    2[COMRAM] unsigned char 
   842 ;; Return value:  Size  Location     Type
   843 ;;                  1    wreg      void 
   844 ;; Registers used:
   845 ;;		wreg, status,2, status,0, cstack
   846 ;; Tracked objects:
   847 ;;		On entry : 0/0
   848 ;;		On exit  : 0/0
   849 ;;		Unchanged: 0/0
   850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   851 ;;      Params:         0       0       0       0       0       0       0       0       0
   852 ;;      Locals:         1       0       0       0       0       0       0       0       0
   853 ;;      Temps:          0       0       0       0       0       0       0       0       0
   854 ;;      Totals:         1       0       0       0       0       0       0       0       0
   855 ;;Total ram usage:        1 bytes
   856 ;; Hardware stack levels used:    1
   857 ;; Hardware stack levels required when called:    2
   858 ;; This function calls:
   859 ;;		_I2C_Master_Start
   860 ;;		_I2C_Master_Stop
   861 ;;		_I2C_Master_Write
   862 ;; This function is called by:
   863 ;;		_LCD_Init
   864 ;;		_LCD_Write_4Bit
   865 ;;		_Backlight
   866 ;;		_noBacklight
   867 ;; This function uses a non-reentrant model
   868 ;;
   869                           
   870                           	psect	text7
   871  000A52                     __ptext7:
   872                           	opt callstack 0
   873  000A52                     _IO_Expander_Write:
   874                           	opt callstack 25
   875                           
   876                           ;incstack = 0
   877                           ;IO_Expander_Write@Data stored from wreg
   878  000A52  6E03               	movwf	IO_Expander_Write@Data^0,c
   879  000A54                     
   880                           ;lcdi2c.c: 103: void IO_Expander_Write(unsigned char Data);lcdi2c.c: 104: {;lcdi2c.c: 10
      +                          5:   I2C_Master_Start();
   881  000A54  EC45  F005         	call	_I2C_Master_Start	;wreg free
   882                           
   883                           ;lcdi2c.c: 106:   I2C_Master_Write(i2c_add);
   884  000A58  500C               	movf	_i2c_add^0,w,c
   885  000A5A  EC01  F005         	call	_I2C_Master_Write
   886                           
   887                           ;lcdi2c.c: 107:   I2C_Master_Write(Data | BackLight_State);
   888  000A5E  5003               	movf	IO_Expander_Write@Data^0,w,c
   889  000A60  100E               	iorwf	_BackLight_State^0,w,c
   890  000A62  EC01  F005         	call	_I2C_Master_Write
   891                           
   892                           ;lcdi2c.c: 108:   I2C_Master_Stop();
   893  000A66  EC41  F005         	call	_I2C_Master_Stop	;wreg free
   894  000A6A  0012               	return		;funcret
   895  000A6C                     __end_of_IO_Expander_Write:
   896                           	opt callstack 0
   897                           
   898 ;; *************** function _I2C_Master_Write *****************
   899 ;; Defined at:
   900 ;;		line 56 in file "lcdi2c.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;  data            1    wreg     unsigned char 
   903 ;; Auto vars:     Size  Location     Type
   904 ;;  data            1    1[COMRAM] unsigned char 
   905 ;; Return value:  Size  Location     Type
   906 ;;                  1    wreg      unsigned char 
   907 ;; Registers used:
   908 ;;		wreg, status,2, status,0, cstack
   909 ;; Tracked objects:
   910 ;;		On entry : 0/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   914 ;;      Params:         0       0       0       0       0       0       0       0       0
   915 ;;      Locals:         1       0       0       0       0       0       0       0       0
   916 ;;      Temps:          0       0       0       0       0       0       0       0       0
   917 ;;      Totals:         1       0       0       0       0       0       0       0       0
   918 ;;Total ram usage:        1 bytes
   919 ;; Hardware stack levels used:    1
   920 ;; Hardware stack levels required when called:    1
   921 ;; This function calls:
   922 ;;		_I2C_Master_Wait
   923 ;; This function is called by:
   924 ;;		_IO_Expander_Write
   925 ;; This function uses a non-reentrant model
   926 ;;
   927                           
   928                           	psect	text8
   929  000A02                     __ptext8:
   930                           	opt callstack 0
   931  000A02                     _I2C_Master_Write:
   932                           	opt callstack 25
   933                           
   934                           ;incstack = 0
   935                           ;I2C_Master_Write@data stored from wreg
   936  000A02  6E02               	movwf	I2C_Master_Write@data^0,c
   937  000A04                     
   938                           ;lcdi2c.c: 56: unsigned char I2C_Master_Write(unsigned char data);lcdi2c.c: 57: {;lcdi2c
      +                          .c: 58:   I2C_Master_Wait();
   939  000A04  ECD0  F004         	call	_I2C_Master_Wait	;wreg free
   940  000A08                     
   941                           ;lcdi2c.c: 59:   SSPBUF = data;
   942  000A08  C002  FFC9         	movff	I2C_Master_Write@data,4041	;volatile
   943  000A0C                     l67:
   944  000A0C  A69E               	btfss	3998,3,c	;volatile
   945  000A0E  EF0B  F005         	goto	u31
   946  000A12  EF0D  F005         	goto	u30
   947  000A16                     u31:
   948  000A16  EF06  F005         	goto	l67
   949  000A1A                     u30:
   950  000A1A                     
   951                           ;lcdi2c.c: 61:   SSPIF = 0;
   952  000A1A  969E               	bcf	3998,3,c	;volatile
   953  000A1C  0012               	return		;funcret
   954  000A1E                     __end_of_I2C_Master_Write:
   955                           	opt callstack 0
   956                           
   957 ;; *************** function _I2C_Master_Stop *****************
   958 ;; Defined at:
   959 ;;		line 36 in file "lcdi2c.c"
   960 ;; Parameters:    Size  Location     Type
   961 ;;		None
   962 ;; Auto vars:     Size  Location     Type
   963 ;;		None
   964 ;; Return value:  Size  Location     Type
   965 ;;                  1    wreg      void 
   966 ;; Registers used:
   967 ;;		wreg, status,2, status,0, cstack
   968 ;; Tracked objects:
   969 ;;		On entry : 0/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   973 ;;      Params:         0       0       0       0       0       0       0       0       0
   974 ;;      Locals:         0       0       0       0       0       0       0       0       0
   975 ;;      Temps:          0       0       0       0       0       0       0       0       0
   976 ;;      Totals:         0       0       0       0       0       0       0       0       0
   977 ;;Total ram usage:        0 bytes
   978 ;; Hardware stack levels used:    1
   979 ;; Hardware stack levels required when called:    1
   980 ;; This function calls:
   981 ;;		_I2C_Master_Wait
   982 ;; This function is called by:
   983 ;;		_IO_Expander_Write
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987                           	psect	text9
   988  000A82                     __ptext9:
   989                           	opt callstack 0
   990  000A82                     _I2C_Master_Stop:
   991                           	opt callstack 25
   992  000A82                     
   993                           ;lcdi2c.c: 38:   I2C_Master_Wait();
   994  000A82  ECD0  F004         	call	_I2C_Master_Wait	;wreg free
   995  000A86                     
   996                           ;lcdi2c.c: 39:   PEN = 1;
   997  000A86  84C5               	bsf	4037,2,c	;volatile
   998  000A88  0012               	return		;funcret
   999  000A8A                     __end_of_I2C_Master_Stop:
  1000                           	opt callstack 0
  1001                           
  1002 ;; *************** function _I2C_Master_Start *****************
  1003 ;; Defined at:
  1004 ;;		line 24 in file "lcdi2c.c"
  1005 ;; Parameters:    Size  Location     Type
  1006 ;;		None
  1007 ;; Auto vars:     Size  Location     Type
  1008 ;;		None
  1009 ;; Return value:  Size  Location     Type
  1010 ;;                  1    wreg      void 
  1011 ;; Registers used:
  1012 ;;		wreg, status,2, status,0, cstack
  1013 ;; Tracked objects:
  1014 ;;		On entry : 0/0
  1015 ;;		On exit  : 0/0
  1016 ;;		Unchanged: 0/0
  1017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1018 ;;      Params:         0       0       0       0       0       0       0       0       0
  1019 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1020 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1021 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1022 ;;Total ram usage:        0 bytes
  1023 ;; Hardware stack levels used:    1
  1024 ;; Hardware stack levels required when called:    1
  1025 ;; This function calls:
  1026 ;;		_I2C_Master_Wait
  1027 ;; This function is called by:
  1028 ;;		_IO_Expander_Write
  1029 ;; This function uses a non-reentrant model
  1030 ;;
  1031                           
  1032                           	psect	text10
  1033  000A8A                     __ptext10:
  1034                           	opt callstack 0
  1035  000A8A                     _I2C_Master_Start:
  1036                           	opt callstack 25
  1037  000A8A                     
  1038                           ;lcdi2c.c: 26:   I2C_Master_Wait();
  1039  000A8A  ECD0  F004         	call	_I2C_Master_Wait	;wreg free
  1040  000A8E                     
  1041                           ;lcdi2c.c: 27:   SEN = 1;
  1042  000A8E  80C5               	bsf	4037,0,c	;volatile
  1043  000A90  0012               	return		;funcret
  1044  000A92                     __end_of_I2C_Master_Start:
  1045                           	opt callstack 0
  1046                           
  1047 ;; *************** function _I2C_Master_Wait *****************
  1048 ;; Defined at:
  1049 ;;		line 19 in file "lcdi2c.c"
  1050 ;; Parameters:    Size  Location     Type
  1051 ;;		None
  1052 ;; Auto vars:     Size  Location     Type
  1053 ;;		None
  1054 ;; Return value:  Size  Location     Type
  1055 ;;                  1    wreg      void 
  1056 ;; Registers used:
  1057 ;;		wreg, status,2, status,0
  1058 ;; Tracked objects:
  1059 ;;		On entry : 0/0
  1060 ;;		On exit  : 0/0
  1061 ;;		Unchanged: 0/0
  1062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1063 ;;      Params:         0       0       0       0       0       0       0       0       0
  1064 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1065 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1066 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1067 ;;Total ram usage:        1 bytes
  1068 ;; Hardware stack levels used:    1
  1069 ;; This function calls:
  1070 ;;		Nothing
  1071 ;; This function is called by:
  1072 ;;		_I2C_Master_Start
  1073 ;;		_I2C_Master_Stop
  1074 ;;		_I2C_Master_Write
  1075 ;;		_I2C_Master_RepeatedStart
  1076 ;;		_I2C_ACK
  1077 ;;		_I2C_NACK
  1078 ;;		_I2C_Read_Byte
  1079 ;; This function uses a non-reentrant model
  1080 ;;
  1081                           
  1082                           	psect	text11
  1083  0009A0                     __ptext11:
  1084                           	opt callstack 0
  1085  0009A0                     _I2C_Master_Wait:
  1086                           	opt callstack 25
  1087  0009A0                     l46:
  1088  0009A0  B4C7               	btfsc	199,2,c	;volatile
  1089  0009A2  EFD5  F004         	goto	u11
  1090  0009A6  EFD7  F004         	goto	u10
  1091  0009AA                     u11:
  1092  0009AA  EFD0  F004         	goto	l46
  1093  0009AE                     u10:
  1094  0009AE  CFC5 F001          	movff	4037,??_I2C_Master_Wait	;volatile
  1095  0009B2  0E1F               	movlw	31
  1096  0009B4  1601               	andwf	??_I2C_Master_Wait^0,f,c
  1097  0009B6  A4D8               	btfss	status,2,c
  1098  0009B8  EFE0  F004         	goto	u21
  1099  0009BC  EFE2  F004         	goto	u20
  1100  0009C0                     u21:
  1101  0009C0  EFD0  F004         	goto	l46
  1102  0009C4                     u20:
  1103  0009C4  0012               	return		;funcret
  1104  0009C6                     __end_of_I2C_Master_Wait:
  1105                           	opt callstack 0
  1106                           
  1107 ;; *************** function _I2C_Master_Init *****************
  1108 ;; Defined at:
  1109 ;;		line 9 in file "lcdi2c.c"
  1110 ;; Parameters:    Size  Location     Type
  1111 ;;		None
  1112 ;; Auto vars:     Size  Location     Type
  1113 ;;		None
  1114 ;; Return value:  Size  Location     Type
  1115 ;;                  1    wreg      void 
  1116 ;; Registers used:
  1117 ;;		wreg, status,2
  1118 ;; Tracked objects:
  1119 ;;		On entry : 0/0
  1120 ;;		On exit  : 0/0
  1121 ;;		Unchanged: 0/0
  1122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1123 ;;      Params:         0       0       0       0       0       0       0       0       0
  1124 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1125 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1126 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1127 ;;Total ram usage:        0 bytes
  1128 ;; Hardware stack levels used:    1
  1129 ;; This function calls:
  1130 ;;		Nothing
  1131 ;; This function is called by:
  1132 ;;		_main
  1133 ;; This function uses a non-reentrant model
  1134 ;;
  1135                           
  1136                           	psect	text12
  1137  000A6C                     __ptext12:
  1138                           	opt callstack 0
  1139  000A6C                     _I2C_Master_Init:
  1140                           	opt callstack 30
  1141  000A6C                     
  1142                           ;lcdi2c.c: 11:   SSPCON1 = 0x28;
  1143  000A6C  0E28               	movlw	40
  1144  000A6E  6EC6               	movwf	198,c	;volatile
  1145                           
  1146                           ;lcdi2c.c: 12:   SSPCON2 = 0x00;
  1147  000A70  0E00               	movlw	0
  1148  000A72  6EC5               	movwf	197,c	;volatile
  1149                           
  1150                           ;lcdi2c.c: 13:   SSPSTAT = 0x00;
  1151  000A74  0E00               	movlw	0
  1152  000A76  6EC7               	movwf	199,c	;volatile
  1153                           
  1154                           ;lcdi2c.c: 14:   SSPADD = ((1000000/4)/100000) - 1;
  1155  000A78  0E01               	movlw	1
  1156  000A7A  6EC8               	movwf	200,c	;volatile
  1157  000A7C                     
  1158                           ;lcdi2c.c: 15:   TRISBbits.RB1 = 1;
  1159  000A7C  8293               	bsf	147,1,c	;volatile
  1160  000A7E                     
  1161                           ;lcdi2c.c: 16:   TRISBbits.RB0 = 1;
  1162  000A7E  8093               	bsf	147,0,c	;volatile
  1163  000A80  0012               	return		;funcret
  1164  000A82                     __end_of_I2C_Master_Init:
  1165                           	opt callstack 0
  1166                           
  1167                           	psect	rparam
  1168  0000                     tosu	equ	0xFFF
  1169                           tosh	equ	0xFFE
  1170                           tosl	equ	0xFFD
  1171                           stkptr	equ	0xFFC
  1172                           pclatu	equ	0xFFB
  1173                           pclath	equ	0xFFA
  1174                           pcl	equ	0xFF9
  1175                           tblptru	equ	0xFF8
  1176                           tblptrh	equ	0xFF7
  1177                           tblptrl	equ	0xFF6
  1178                           tablat	equ	0xFF5
  1179                           prodh	equ	0xFF4
  1180                           prodl	equ	0xFF3
  1181                           indf0	equ	0xFEF
  1182                           postinc0	equ	0xFEE
  1183                           postdec0	equ	0xFED
  1184                           preinc0	equ	0xFEC
  1185                           plusw0	equ	0xFEB
  1186                           fsr0h	equ	0xFEA
  1187                           fsr0l	equ	0xFE9
  1188                           wreg	equ	0xFE8
  1189                           indf1	equ	0xFE7
  1190                           postinc1	equ	0xFE6
  1191                           postdec1	equ	0xFE5
  1192                           preinc1	equ	0xFE4
  1193                           plusw1	equ	0xFE3
  1194                           fsr1h	equ	0xFE2
  1195                           fsr1l	equ	0xFE1
  1196                           bsr	equ	0xFE0
  1197                           indf2	equ	0xFDF
  1198                           postinc2	equ	0xFDE
  1199                           postdec2	equ	0xFDD
  1200                           preinc2	equ	0xFDC
  1201                           plusw2	equ	0xFDB
  1202                           fsr2h	equ	0xFDA
  1203                           fsr2l	equ	0xFD9
  1204                           status	equ	0xFD8


Data Sizes:
    Strings     7
    Constant    0
    Data        1
    BSS         1
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     11      14
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    LCD_Write_String@Str	PTR unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 


Critical Paths under _main in COMRAM

    _main->_LCD_Write_String
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Write_4Bit
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_Init->_LCD_CMD
    _LCD_CMD->_LCD_Write_4Bit
    _LCD_Write_4Bit->_IO_Expander_Write
    _IO_Expander_Write->_I2C_Master_Write
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     667
                    _I2C_Master_Init
                           _LCD_Init
                     _LCD_Set_Cursor
                   _LCD_Write_String
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     6     4      2     256
                                              5 COMRAM     6     4      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Char                                       1     1      0      90
                                              4 COMRAM     1     1      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       4     3      1     276
                                              5 COMRAM     4     3      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     135
                                              5 COMRAM     2     2      0
                  _IO_Expander_Write
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_CMD                                              1     1      0      90
                                              4 COMRAM     1     1      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_4Bit                                       1     1      0      60
                                              3 COMRAM     1     1      0
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (4) _IO_Expander_Write                                    1     1      0      30
                                              2 COMRAM     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     1     1      0      15
                                              1 COMRAM     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
   _LCD_Init
     _IO_Expander_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _LCD_CMD
       _LCD_Write_4Bit
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   _LCD_Set_Cursor
     _LCD_CMD
       _LCD_Write_4Bit
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Write_4Bit
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      B       E       1       14.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       E      20        0.0%
DATA                 0      0       E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Apr 27 16:59:38 2022

                        l43 0A80                          l52 0A90                          l46 09A0  
                        l70 0A1C                          l49 09C4                          l58 0A88  
                        l82 0A6A                          l67 0A0C                          l91 0A36  
                        l69 0A1A                          l85 0A00                          l79 08B6  
                        l88 0A50                          l97 0976                          u10 09AE  
                        u11 09AA                          u20 09C4                          u21 09C0  
                        u30 0A1A                          u31 0A16                          u60 0976  
                        u61 0972                          _RS 000D                          u77 081C  
                        u87 082E                          u97 083C                 __CFG_BOR$ON 000000  
               __CFG_BORV$3 000000                __CFG_CP0$OFF 000000                __CFG_CP1$OFF 000000  
              __CFG_CP2$OFF 000000                __CFG_CP3$OFF 000000                 __CFG_LVP$ON 000000  
                       l106 0920                         l134 0998                         l135 0998  
                       l813 09A0                         l821 0A82                         l815 09AE  
                       l823 0A86                         l831 09E6                         l817 0A8A  
                       l825 0A04                         l833 09EA                         l841 0A3E  
                       l851 0A6C                         l819 0A8E                         l827 0A08  
                       l835 09F2                         l843 0A46                         l853 0A7C  
                       l829 0A54                         l837 09FA                         l861 0816  
                       l845 0A20                         l855 0A7E                         l839 0A3A  
                       l871 0856                         l863 082C                         l847 0A24  
                       l881 08A0                         l873 085E                         l865 0834  
                       l857 080C                         l849 0A2C                         l875 0874  
                       l867 0842                         l859 0810                         l971 094E  
                       l877 087A                         l869 0848                         l981 08E2  
                       l973 08BA                         l965 0922                         l879 0890  
                       l975 08BE                         l983 08EE                         l967 092E  
                       l991 097C                         l977 08CA                         l969 094A  
                       l993 0982                         l979 08D6                         l995 098C  
                       l989 0978                __CFG_CPB$OFF 000000                         u107 084A  
                       u117 0858                         u127 086A                         u137 0880  
                       u147 0896                         u157 08AC                         u167 09FC  
                       _PEN 007E2A                __CFG_CPD$OFF 000000                         _SEN 007E28  
                       wreg 000FE8             __end_of_LCD_CMD 0A52         LCD_Write_String@Str 0006  
            _LCD_Set_Cursor 08B8                __CFG_WDT$OFF 000000                        l1001 0902  
                      STR_1 0801                        _RCEN 007E2B                        _RSEN 007E29  
         ?_LCD_Write_String 0006                        _main 0978                        start 0000  
        ??_LCD_Write_String 0008               __CFG_IESO$OFF 000000               __CFG_MCLRE$ON 000000  
              ___param_bank 000000        LCD_Write_4Bit@Nibble 0004            __end_of_LCD_Init 08B8  
          ?_I2C_Master_Init 0001               __CFG_PLLDIV$1 000000            ?_I2C_Master_Wait 0001  
          ?_I2C_Master_Stop 0001              __CFG_CCP2MX$ON 000000                       ?_main 0001  
                     _ACKEN 007E2C                       _ACKDT 007E2D               __CFG_USBDIV$1 000000  
                     _SSPIF 007CF3               __CFG_PWRT$OFF 000000               __CFG_WRT0$OFF 000000  
             __CFG_WRT1$OFF 000000               __CFG_WRT2$OFF 000000               __CFG_WRT3$OFF 000000  
            __CFG_EBTR0$OFF 000000              __CFG_FCMEN$OFF 000000              __CFG_EBTR1$OFF 000000  
    __end_of_LCD_Set_Cursor 0922              __CFG_EBTR2$OFF 000000              __CFG_EBTR3$OFF 000000  
             __CFG_WRTB$OFF 000000               __CFG_WRTC$OFF 000000               __CFG_WRTD$OFF 000000  
            __CFG_EBTRB$OFF 000000                       tablat 000FF5                       status 000FD8  
            __CFG_ICPRT$OFF 000000              _LCD_Write_4Bit 09E4              _LCD_Write_Char 0A1E  
           __initialization 09C6                __end_of_main 09A0           _IO_Expander_Write 0A52  
        ?_IO_Expander_Write 0001                      ??_main 000C               __activetblptr 000002  
                 ??_LCD_CMD 0005           ?_I2C_Master_Start 0001           ?_I2C_Master_Write 0001  
       ??_IO_Expander_Write 0003             ?_LCD_Set_Cursor 0006          ??_I2C_Master_Start 0002  
        ??_I2C_Master_Write 0002                      _SSPADD 000FC8                      _SSPBUF 000FC9  
    __end_of_LCD_Write_4Bit 0A02      __end_of_LCD_Write_Char 0A38              __CFG_XINST$OFF 000000  
 __end_of_IO_Expander_Write 0A6C              __CFG_STVREN$ON 000000                __pdataCOMRAM 000E  
              __mediumconst 0000                      tblptrh 000FF7                      tblptrl 000FF6  
                    tblptru 000FF8                  __accesstop 0060     __end_of__initialization 09DA  
                 ?_LCD_Init 0001             __CFG_PBADEN$OFF 000000             ?_LCD_Write_4Bit 0001  
             ___rparam_used 000001             ?_LCD_Write_Char 0001              __pcstackCOMRAM 0001  
                ??_LCD_Init 0006                  __pnvCOMRAM 000C  __size_of_IO_Expander_Write 001A  
                   _ACKSTAT 007E2E   __size_of_LCD_Write_String 0056                     _LCD_CMD 0A38  
                   _SSPCON1 000FC6                     _SSPCON2 000FC5                     _SSPSTAT 000FC7  
           __CFG_VREGEN$OFF 000000                     _i2c_add 000C                     __Hparam 0000  
                   __Lparam 0000                __psmallconst 0800                     __pcinit 09C6  
                   __ramtop 0800            ??_LCD_Set_Cursor 0007                     __ptext0 0978  
                   __ptext1 0922                     __ptext2 0A1E                     __ptext3 08B8  
                   __ptext4 080A                     __ptext5 0A38                     __ptext6 09E4  
                   __ptext7 0A52                     __ptext8 0A02                     __ptext9 0A82  
  __size_of_I2C_Master_Init 0016    __size_of_I2C_Master_Wait 0026    __size_of_I2C_Master_Stop 0008  
      end_of_initialization 09DA               __Lmediumconst 0000   __size_of_I2C_Master_Start 0008  
 __size_of_I2C_Master_Write 001C                  LCD_CMD@CMD 0005                   _TRISBbits 000F93  
          ??_LCD_Write_4Bit 0004           LCD_Write_String@i 000A            ??_LCD_Write_Char 0005  
         __size_of_LCD_Init 00AE            _LCD_Write_String 0922               __pidataCOMRAM 0A92  
       start_initialization 09C6           ??_I2C_Master_Init 0001           ??_I2C_Master_Wait 0001  
         ??_I2C_Master_Stop 0002            __CFG_LPT1OSC$OFF 000000                    ?_LCD_CMD 0001  
               __pbssCOMRAM 000D            _I2C_Master_Start 0A8A            _I2C_Master_Write 0A02  
     IO_Expander_Write@Data 0003        I2C_Master_Write@data 0002                 __smallconst 0800  
                  _LCD_Init 080A            __CFG_WDTPS$32768 000000            __size_of_LCD_CMD 001A  
  __end_of_LCD_Write_String 0978                    __Hrparam 0000                    __Lrparam 0000  
           _I2C_Master_Init 0A6C             _I2C_Master_Wait 09A0             _I2C_Master_Stop 0A82  
                  __ptext10 0A8A                    __ptext11 09A0                    __ptext12 0A6C  
   __size_of_LCD_Set_Cursor 006A             _BackLight_State 000E               __size_of_main 0028  
     __CFG_CPUDIV$OSC1_PLL2 000000    __end_of_I2C_Master_Start 0A92    __end_of_I2C_Master_Write 0A1E  
        LCD_Write_Char@Data 0005     __size_of_LCD_Write_4Bit 001E     __size_of_LCD_Write_Char 001A  
   __end_of_I2C_Master_Init 0A82     __end_of_I2C_Master_Wait 09C6     __end_of_I2C_Master_Stop 0A8A  
           LCD_Init@I2C_Add 0007         __CFG_FOSC$INTOSC_HS 000000           LCD_Set_Cursor@COL 0006  
         LCD_Set_Cursor@ROW 0009  
