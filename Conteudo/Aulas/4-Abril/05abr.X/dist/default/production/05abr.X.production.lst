

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Apr 20 15:16:40 2022

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15  0000                     
    16                           ; Version 2.10
    17                           ; Generated 31/07/2019 GMT
    18                           ; 
    19                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F4550 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     
    51                           	psect	idataCOMRAM
    52  00013A                     __pidataCOMRAM:
    53                           	opt callstack 0
    54                           
    55                           ;initializer for _taxaVelocidade
    56  00013A  01                 	db	1
    57                           
    58                           ;initializer for _velocidade
    59  00013B  10                 	db	16
    60  0000                     _T2CON	set	4042
    61  0000                     _CCP1CON	set	4029
    62  0000                     _CCPR1L	set	4030
    63  0000                     _PR2	set	4043
    64  0000                     _TRISCbits	set	3988
    65  0000                     _INTCON2bits	set	4081
    66  0000                     _INTCONbits	set	4082
    67  0000                     _RCONbits	set	4048
    68  0000                     _OSCCON	set	4051
    69  0000                     _TRISB	set	3987
    70  0000                     _INTCON3bits	set	4080
    71                           
    72                           ; #config settings
    73  0000                     
    74                           	psect	cinit
    75  000118                     __pcinit:
    76                           	opt callstack 0
    77  000118                     start_initialization:
    78                           	opt callstack 0
    79  000118                     __initialization:
    80                           	opt callstack 0
    81                           
    82                           ; Initialize objects allocated to COMRAM (2 bytes)
    83                           ; load TBLPTR registers with __pidataCOMRAM
    84  000118  0E3A               	movlw	low __pidataCOMRAM
    85  00011A  6EF6               	movwf	tblptrl,c
    86  00011C  0E01               	movlw	high __pidataCOMRAM
    87  00011E  6EF7               	movwf	tblptrh,c
    88  000120  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    89  000122  6EF8               	movwf	tblptru,c
    90  000124  0009               	tblrd		*+	;fetch initializer
    91  000126  CFF5 F004          	movff	tablat,__pdataCOMRAM
    92  00012A  0009               	tblrd		*+	;fetch initializer
    93  00012C  CFF5 F005          	movff	tablat,__pdataCOMRAM+1
    94  000130                     end_of_initialization:
    95                           	opt callstack 0
    96  000130                     __end_of__initialization:
    97                           	opt callstack 0
    98  000130  9006               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    99  000132  9206               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   100  000134  0100               	movlb	0
   101  000136  EF09  F000         	goto	_main	;jump to C main() function
   102                           
   103                           	psect	dataCOMRAM
   104  000004                     __pdataCOMRAM:
   105                           	opt callstack 0
   106  000004                     _taxaVelocidade:
   107                           	opt callstack 0
   108  000004                     	ds	1
   109  000005                     _velocidade:
   110                           	opt callstack 0
   111  000005                     	ds	1
   112                           
   113                           	psect	cstackCOMRAM
   114  000001                     __pcstackCOMRAM:
   115                           	opt callstack 0
   116  000001                     ??_main:
   117                           
   118                           ; 1 bytes @ 0x0
   119  000001                     	ds	1
   120  000002                     main@sinal:
   121                           	opt callstack 0
   122                           
   123                           ; 2 bytes @ 0x1
   124  000002                     	ds	2
   125                           
   126 ;;
   127 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   128 ;;
   129 ;; *************** function _main *****************
   130 ;; Defined at:
   131 ;;		line 198 in file "main.c"
   132 ;; Parameters:    Size  Location     Type
   133 ;;		None
   134 ;; Auto vars:     Size  Location     Type
   135 ;;  sinal           2    1[COMRAM] int 
   136 ;; Return value:  Size  Location     Type
   137 ;;                  1    wreg      void 
   138 ;; Registers used:
   139 ;;		wreg, status,2, status,0, prodl, prodh
   140 ;; Tracked objects:
   141 ;;		On entry : 0/0
   142 ;;		On exit  : 0/0
   143 ;;		Unchanged: 0/0
   144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   145 ;;      Params:         0       0       0       0       0       0       0       0       0
   146 ;;      Locals:         2       0       0       0       0       0       0       0       0
   147 ;;      Temps:          1       0       0       0       0       0       0       0       0
   148 ;;      Totals:         3       0       0       0       0       0       0       0       0
   149 ;;Total ram usage:        3 bytes
   150 ;; Hardware stack levels required when called:    1
   151 ;; This function calls:
   152 ;;		Nothing
   153 ;; This function is called by:
   154 ;;		Startup code after reset
   155 ;; This function uses a non-reentrant model
   156 ;;
   157                           
   158                           	psect	text0
   159  000012                     __ptext0:
   160                           	opt callstack 0
   161  000012                     _main:
   162                           	opt callstack 30
   163  000012                     
   164                           ;main.c: 200:     TRISB = 0b11111111;
   165  000012  6893               	setf	147,c	;volatile
   166  000014                     
   167                           ;main.c: 202:     OSCCON = 0b00110011;
   168  000014  0E33               	movlw	51
   169  000016  6ED3               	movwf	211,c	;volatile
   170  000018                     
   171                           ;main.c: 204:     RCONbits.IPEN = 1;
   172  000018  8ED0               	bsf	208,7,c	;volatile
   173  00001A                     
   174                           ;main.c: 205:     INTCONbits.GIEH = 1;
   175  00001A  8EF2               	bsf	242,7,c	;volatile
   176  00001C                     
   177                           ;main.c: 206:     INTCONbits.GIEL = 0;
   178  00001C  9CF2               	bcf	242,6,c	;volatile
   179  00001E                     
   180                           ;main.c: 207:     INTCON3bits.INT1IE = 1;
   181  00001E  86F0               	bsf	240,3,c	;volatile
   182  000020                     
   183                           ;main.c: 208:     INTCON3bits.INT1IF = 0;
   184  000020  90F0               	bcf	240,0,c	;volatile
   185  000022                     
   186                           ;main.c: 209:     INTCON2bits.INTEDG1 = 0;
   187  000022  9AF1               	bcf	241,5,c	;volatile
   188  000024                     
   189                           ;main.c: 210:     INTCON3bits.INT1IP = 1;
   190  000024  8CF0               	bsf	240,6,c	;volatile
   191  000026                     
   192                           ;main.c: 212:     INTCON3bits.INT2IE = 1;
   193  000026  88F0               	bsf	240,4,c	;volatile
   194  000028                     
   195                           ;main.c: 213:     INTCON3bits.INT2IF = 0;
   196  000028  92F0               	bcf	240,1,c	;volatile
   197  00002A                     
   198                           ;main.c: 214:     INTCON2bits.INTEDG2 = 0;
   199  00002A  98F1               	bcf	241,4,c	;volatile
   200  00002C                     
   201                           ;main.c: 215:     INTCON3bits.INT2IP = 1;
   202  00002C  8EF0               	bsf	240,7,c	;volatile
   203  00002E                     
   204                           ;main.c: 217:     TRISCbits.RC2 = 0;
   205  00002E  9494               	bcf	148,2,c	;volatile
   206                           
   207                           ;main.c: 218:     PR2 = 156;
   208  000030  0E9C               	movlw	156
   209  000032  6ECB               	movwf	203,c	;volatile
   210                           
   211                           ;main.c: 219:     CCPR1L = 16 >> 2;
   212  000034  0E04               	movlw	4
   213  000036  6EBE               	movwf	190,c	;volatile
   214                           
   215                           ;main.c: 220:     CCP1CON = 0x0C + (16 << 4 & 0b00110000);
   216  000038  0E0C               	movlw	12
   217  00003A  6EBD               	movwf	189,c	;volatile
   218                           
   219                           ;main.c: 221:     T2CON = 0b00000111;
   220  00003C  0E07               	movlw	7
   221  00003E  6ECA               	movwf	202,c	;volatile
   222  000040                     
   223                           ;main.c: 223:     INTCON2bits.RBPU = 0;
   224  000040  9EF1               	bcf	241,7,c	;volatile
   225                           
   226                           ;main.c: 225:     int sinal = 1;
   227  000042  0E00               	movlw	0
   228  000044  6E03               	movwf	(main@sinal+1)^0,c
   229  000046  0E01               	movlw	1
   230  000048  6E02               	movwf	main@sinal^0,c
   231  00004A                     l773:
   232                           
   233                           ;main.c: 227:         _delay((unsigned long)((50)*(500000/4000.0)));
   234  00004A  0E09               	movlw	9
   235  00004C  6E01               	movwf	??_main^0,c
   236  00004E  0E1C               	movlw	28
   237  000050                     u97:
   238  000050  2EE8               	decfsz	wreg,f,c
   239  000052  D7FE               	bra	u97
   240  000054  2E01               	decfsz	??_main^0,f,c
   241  000056  D7FC               	bra	u97
   242  000058  D000               	nop2	
   243  00005A                     
   244                           ;main.c: 228:         velocidade+=sinal*taxaVelocidade;
   245  00005A  5004               	movf	_taxaVelocidade^0,w,c
   246  00005C  0202               	mulwf	main@sinal^0,c
   247  00005E  50F3               	movf	243,w,c
   248  000060  2605               	addwf	_velocidade^0,f,c
   249  000062                     
   250                           ;main.c: 229:         if(velocidade >= 85){
   251  000062  0E54               	movlw	84
   252  000064  6405               	cpfsgt	_velocidade^0,c
   253  000066  EF37  F000         	goto	u71
   254  00006A  EF39  F000         	goto	u70
   255  00006E                     u71:
   256  00006E  EF3D  F000         	goto	l783
   257  000072                     u70:
   258  000072                     
   259                           ;main.c: 230:             velocidade = 85;
   260  000072  0E55               	movlw	85
   261  000074  6E05               	movwf	_velocidade^0,c
   262  000076                     
   263                           ;main.c: 231:             sinal = -1;
   264  000076  6802               	setf	main@sinal^0,c
   265  000078  6803               	setf	(main@sinal+1)^0,c
   266  00007A                     l783:
   267                           
   268                           ;main.c: 233:         if(velocidade <= 16){
   269  00007A  0E11               	movlw	17
   270  00007C  6005               	cpfslt	_velocidade^0,c
   271  00007E  EF43  F000         	goto	u81
   272  000082  EF45  F000         	goto	u80
   273  000086                     u81:
   274  000086  EF4B  F000         	goto	l787
   275  00008A                     u80:
   276  00008A                     
   277                           ;main.c: 234:             velocidade = 16;
   278  00008A  0E10               	movlw	16
   279  00008C  6E05               	movwf	_velocidade^0,c
   280                           
   281                           ;main.c: 235:             sinal = 1;
   282  00008E  0E00               	movlw	0
   283  000090  6E03               	movwf	(main@sinal+1)^0,c
   284  000092  0E01               	movlw	1
   285  000094  6E02               	movwf	main@sinal^0,c
   286  000096                     l787:
   287                           
   288                           ;main.c: 237:         CCPR1L = (velocidade & 0b11111100) >> 2;
   289  000096  4005               	rrncf	_velocidade^0,w,c
   290  000098  42E8               	rrncf	wreg,f,c
   291  00009A  0B3F               	andlw	63
   292  00009C  0B3F               	andlw	63
   293  00009E  6EBE               	movwf	190,c	;volatile
   294  0000A0                     
   295                           ;main.c: 238:         CCP1CON = 0x0C | (velocidade << 4 & 0b00110000);
   296  0000A0  3805               	swapf	_velocidade^0,w,c
   297  0000A2  0BF0               	andlw	240
   298  0000A4  0B30               	andlw	48
   299  0000A6  090C               	iorlw	12
   300  0000A8  6EBD               	movwf	189,c	;volatile
   301  0000AA  EF25  F000         	goto	l773
   302  0000AE  EF07  F000         	goto	start
   303  0000B2                     __end_of_main:
   304                           	opt callstack 0
   305                           
   306 ;; *************** function _funcInt *****************
   307 ;; Defined at:
   308 ;;		line 183 in file "main.c"
   309 ;; Parameters:    Size  Location     Type
   310 ;;		None
   311 ;; Auto vars:     Size  Location     Type
   312 ;;		None
   313 ;; Return value:  Size  Location     Type
   314 ;;                  1    wreg      void 
   315 ;; Registers used:
   316 ;;		wreg, status,2, status,0
   317 ;; Tracked objects:
   318 ;;		On entry : 0/0
   319 ;;		On exit  : 0/0
   320 ;;		Unchanged: 0/0
   321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   322 ;;      Params:         0       0       0       0       0       0       0       0       0
   323 ;;      Locals:         0       0       0       0       0       0       0       0       0
   324 ;;      Temps:          0       0       0       0       0       0       0       0       0
   325 ;;      Totals:         0       0       0       0       0       0       0       0       0
   326 ;;Total ram usage:        0 bytes
   327 ;; Hardware stack levels used:    1
   328 ;; This function calls:
   329 ;;		Nothing
   330 ;; This function is called by:
   331 ;;		Interrupt level 2
   332 ;; This function uses a non-reentrant model
   333 ;;
   334                           
   335                           	psect	intcode
   336  000008                     __pintcode:
   337                           	opt callstack 0
   338  000008                     _funcInt:
   339                           	opt callstack 30
   340                           
   341                           ;incstack = 0
   342  000008  8206               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   343  00000A  ED59  F000         	call	int_func,f	;refresh shadow registers
   344                           
   345                           	psect	intcode_body
   346  0000B2                     __pintcode_body:
   347                           	opt callstack 30
   348  0000B2                     int_func:
   349                           	opt callstack 30
   350  0000B2  0006               	pop		; remove dummy address from shadow register refresh
   351  0000B4                     
   352                           ;main.c: 184:     if(INTCON3bits.INT1IE == 1 && INTCON3bits.INT1IF == 1){
   353  0000B4  A6F0               	btfss	240,3,c	;volatile
   354  0000B6  EF5F  F000         	goto	i2u1_41
   355  0000BA  EF61  F000         	goto	i2u1_40
   356  0000BE                     i2u1_41:
   357  0000BE  EF72  F000         	goto	i2l733
   358  0000C2                     i2u1_40:
   359  0000C2  A0F0               	btfss	240,0,c	;volatile
   360  0000C4  EF66  F000         	goto	i2u2_41
   361  0000C8  EF68  F000         	goto	i2u2_40
   362  0000CC                     i2u2_41:
   363  0000CC  EF72  F000         	goto	i2l733
   364  0000D0                     i2u2_40:
   365  0000D0                     
   366                           ;main.c: 185:         if(taxaVelocidade>0)
   367  0000D0  5004               	movf	_taxaVelocidade^0,w,c
   368  0000D2  B4D8               	btfsc	status,2,c
   369  0000D4  EF6E  F000         	goto	i2u3_41
   370  0000D8  EF70  F000         	goto	i2u3_40
   371  0000DC                     i2u3_41:
   372  0000DC  EF71  F000         	goto	i2l731
   373  0000E0                     i2u3_40:
   374  0000E0                     
   375                           ;main.c: 186:             taxaVelocidade--;
   376  0000E0  0604               	decf	_taxaVelocidade^0,f,c
   377  0000E2                     i2l731:
   378                           
   379                           ;main.c: 188:         INTCON3bits.INT1IF = 0;
   380  0000E2  90F0               	bcf	240,0,c	;volatile
   381  0000E4                     i2l733:
   382                           
   383                           ;main.c: 190:     if(INTCON3bits.INT2IE == 1 && INTCON3bits.INT2IF == 1){
   384  0000E4  A8F0               	btfss	240,4,c	;volatile
   385  0000E6  EF77  F000         	goto	i2u4_41
   386  0000EA  EF79  F000         	goto	i2u4_40
   387  0000EE                     i2u4_41:
   388  0000EE  EF8A  F000         	goto	i2l37
   389  0000F2                     i2u4_40:
   390  0000F2  A2F0               	btfss	240,1,c	;volatile
   391  0000F4  EF7E  F000         	goto	i2u5_41
   392  0000F8  EF80  F000         	goto	i2u5_40
   393  0000FC                     i2u5_41:
   394  0000FC  EF8A  F000         	goto	i2l37
   395  000100                     i2u5_40:
   396  000100                     
   397                           ;main.c: 191:         if(taxaVelocidade<50)
   398  000100  0E32               	movlw	50
   399  000102  6004               	cpfslt	_taxaVelocidade^0,c
   400  000104  EF86  F000         	goto	i2u6_41
   401  000108  EF88  F000         	goto	i2u6_40
   402  00010C                     i2u6_41:
   403  00010C  EF89  F000         	goto	i2l741
   404  000110                     i2u6_40:
   405  000110                     
   406                           ;main.c: 192:             taxaVelocidade++;
   407  000110  2A04               	incf	_taxaVelocidade^0,f,c
   408  000112                     i2l741:
   409                           
   410                           ;main.c: 194:         INTCON3bits.INT2IF = 0;
   411  000112  92F0               	bcf	240,1,c	;volatile
   412  000114                     i2l37:
   413  000114  9206               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   414  000116  0011               	retfie		f
   415  000118                     __end_of_funcInt:
   416                           	opt callstack 0
   417  0000                     
   418                           	psect	rparam
   419  0000                     
   420                           	psect	temp
   421  000006                     btemp:
   422                           	opt callstack 0
   423  000006                     	ds	1
   424  0000                     int$flags	set	btemp
   425  0000                     wtemp8	set	btemp+1
   426  0000                     ttemp5	set	btemp+1
   427  0000                     ttemp6	set	btemp+4
   428  0000                     ttemp7	set	btemp+8
   429                           tosu	equ	0xFFF
   430                           tosh	equ	0xFFE
   431                           tosl	equ	0xFFD
   432                           stkptr	equ	0xFFC
   433                           pclatu	equ	0xFFB
   434                           pclath	equ	0xFFA
   435                           pcl	equ	0xFF9
   436                           tblptru	equ	0xFF8
   437                           tblptrh	equ	0xFF7
   438                           tblptrl	equ	0xFF6
   439                           tablat	equ	0xFF5
   440                           prodh	equ	0xFF4
   441                           prodl	equ	0xFF3
   442                           indf0	equ	0xFEF
   443                           postinc0	equ	0xFEE
   444                           postdec0	equ	0xFED
   445                           preinc0	equ	0xFEC
   446                           plusw0	equ	0xFEB
   447                           fsr0h	equ	0xFEA
   448                           fsr0l	equ	0xFE9
   449                           wreg	equ	0xFE8
   450                           indf1	equ	0xFE7
   451                           postinc1	equ	0xFE6
   452                           postdec1	equ	0xFE5
   453                           preinc1	equ	0xFE4
   454                           plusw1	equ	0xFE3
   455                           fsr1h	equ	0xFE2
   456                           fsr1l	equ	0xFE1
   457                           bsr	equ	0xFE0
   458                           indf2	equ	0xFDF
   459                           postinc2	equ	0xFDE
   460                           postdec2	equ	0xFDD
   461                           preinc2	equ	0xFDC
   462                           plusw2	equ	0xFDB
   463                           fsr2h	equ	0xFDA
   464                           fsr2l	equ	0xFD9
   465                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      3       5
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _funcInt in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _funcInt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _funcInt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _funcInt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _funcInt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _funcInt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _funcInt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _funcInt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _funcInt in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      15
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _funcInt                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _funcInt (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      3       5       1        5.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       5      20        0.0%
DATA                 0      0       5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Apr 20 15:16:40 2022

                     u70 0072                       u71 006E                       u80 008A  
                     u81 0086                       u97 0050              __CFG_BORV$3 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000                      l751 001C                      l743 0012  
                    l761 0026                      l753 001E                      l745 0014  
                    l771 0040                      l763 0028                      l755 0020  
                    l747 0018                      l781 0076                      l773 004A  
                    l765 002A                      l757 0022                      l749 001A  
                    l783 007A                      l775 005A                      l767 002C  
                    l759 0024                      l785 008A                      l777 0062  
                    l769 002E                      l787 0096                      l779 0072  
                    l789 00A0             __CFG_CPB$OFF 000000                      _PR2 000FCB  
           __CFG_CPD$OFF 000000             __CFG_BOR$OFF 000000                      wreg 000FE8  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     i2l37 0114  
                   _main 0012                     btemp 0006                     prodl 000FF3  
                   start 000E            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
           ___param_bank 000000            __CFG_PLLDIV$1 000000                    ?_main 0001  
                  _T2CON 000FCA                    i2l731 00E2                    i2l723 00B4  
                  i2l741 0112                    i2l725 00C2                    i2l733 00E4  
                  i2l735 00F2                    i2l727 00D0                    i2l737 0100  
                  i2l729 00E0                    i2l739 0110            __CFG_USBDIV$1 000000  
                  _TRISB 000F93            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
        __end_of_funcInt 0118                    tablat 000FF5                    ttemp5 0007  
                  ttemp6 000A                    ttemp7 000E                    status 000FD8  
                  wtemp8 0007           __CFG_ICPRT$OFF 000000          __initialization 0118  
           __end_of_main 00B2                   ??_main 0001            __activetblptr 000000  
        __CFG_CCP2MX$OFF 000000                   _CCPR1L 000FBE                   _OSCCON 000FD3  
                 i2u1_40 00C2                   i2u1_41 00BE                   i2u2_40 00D0  
                 i2u2_41 00CC                   i2u3_40 00E0                   i2u3_41 00DC  
                 i2u4_40 00F2                   i2u4_41 00EE                   i2u5_40 0100  
                 i2u5_41 00FC                   i2u6_40 0110                   i2u6_41 010C  
         __CFG_XINST$OFF 000000                ??_funcInt 0001             __pdataCOMRAM 0004  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 0130          __CFG_PBADEN$OFF 000000  
          ___rparam_used 000001           __pcstackCOMRAM 0001           _taxaVelocidade 0004  
                _CCP1CON 000FBD          __CFG_VREGEN$OFF 000000                  __Hparam 0000  
                __Lparam 0000          __CFG_STVREN$OFF 000000                  __pcinit 0118  
                __ramtop 0800                  __ptext0 0012                  _funcInt 0008  
         __pintcode_body 00B2     end_of_initialization 0130                  int_func 00B2  
             _velocidade 0005                _TRISCbits 000F94            __pidataCOMRAM 013A  
    start_initialization 0118         __CFG_LPT1OSC$OFF 000000                __pintcode 0008  
               ?_funcInt 0001                 _RCONbits 000FD0         __CFG_WDTPS$32768 000000  
              main@sinal 0002              _INTCON2bits 000FF1              _INTCON3bits 000FF0  
               __Hrparam 0000                 __Lrparam 0000         __size_of_funcInt 0110  
          __size_of_main 00A0                 int$flags 0006    __CFG_CPUDIV$OSC1_PLL2 000000  
             _INTCONbits 000FF2                 intlevel2 0000      __CFG_FOSC$INTOSC_EC 000000  
